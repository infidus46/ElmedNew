#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Yamed.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ElmedicineSV_demo")]
	public partial class ElmedDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertAKT_EKMP_TBL(AKT_EKMP_TBL instance);
    partial void UpdateAKT_EKMP_TBL(AKT_EKMP_TBL instance);
    partial void DeleteAKT_EKMP_TBL(AKT_EKMP_TBL instance);
    partial void InsertAKT_MEE(AKT_MEE instance);
    partial void UpdateAKT_MEE(AKT_MEE instance);
    partial void DeleteAKT_MEE(AKT_MEE instance);
    partial void InsertAKT_MEE_TBL(AKT_MEE_TBL instance);
    partial void UpdateAKT_MEE_TBL(AKT_MEE_TBL instance);
    partial void DeleteAKT_MEE_TBL(AKT_MEE_TBL instance);
    partial void InsertAmbulanceMKB(AmbulanceMKB instance);
    partial void UpdateAmbulanceMKB(AmbulanceMKB instance);
    partial void DeleteAmbulanceMKB(AmbulanceMKB instance);
    partial void InsertAttachedDoctorSpr(AttachedDoctorSpr instance);
    partial void UpdateAttachedDoctorSpr(AttachedDoctorSpr instance);
    partial void DeleteAttachedDoctorSpr(AttachedDoctorSpr instance);
    partial void InsertAttachedJournalSpr(AttachedJournalSpr instance);
    partial void UpdateAttachedJournalSpr(AttachedJournalSpr instance);
    partial void DeleteAttachedJournalSpr(AttachedJournalSpr instance);
    partial void InsertAttachedPeopleSpr(AttachedPeopleSpr instance);
    partial void UpdateAttachedPeopleSpr(AttachedPeopleSpr instance);
    partial void DeleteAttachedPeopleSpr(AttachedPeopleSpr instance);
    partial void InsertCalcAmbTARIF(CalcAmbTARIF instance);
    partial void UpdateCalcAmbTARIF(CalcAmbTARIF instance);
    partial void DeleteCalcAmbTARIF(CalcAmbTARIF instance);
    partial void InsertCalcMok(CalcMok instance);
    partial void UpdateCalcMok(CalcMok instance);
    partial void DeleteCalcMok(CalcMok instance);
    partial void InsertCalcUprk(CalcUprk instance);
    partial void UpdateCalcUprk(CalcUprk instance);
    partial void DeleteCalcUprk(CalcUprk instance);
    partial void InsertCalcVmpTarif(CalcVmpTarif instance);
    partial void UpdateCalcVmpTarif(CalcVmpTarif instance);
    partial void DeleteCalcVmpTarif(CalcVmpTarif instance);
    partial void InsertCalNotKus(CalNotKus instance);
    partial void UpdateCalNotKus(CalNotKus instance);
    partial void DeleteCalNotKus(CalNotKus instance);
    partial void InsertDetProfilDb(DetProfilDb instance);
    partial void UpdateDetProfilDb(DetProfilDb instance);
    partial void DeleteDetProfilDb(DetProfilDb instance);
    partial void InsertDISP_SPR(DISP_SPR instance);
    partial void UpdateDISP_SPR(DISP_SPR instance);
    partial void DeleteDISP_SPR(DISP_SPR instance);
    partial void InsertDoctorBd(DoctorBd instance);
    partial void UpdateDoctorBd(DoctorBd instance);
    partial void DeleteDoctorBd(DoctorBd instance);
    partial void InsertDoctorTbl(DoctorTbl instance);
    partial void UpdateDoctorTbl(DoctorTbl instance);
    partial void DeleteDoctorTbl(DoctorTbl instance);
    partial void InsertDostav(Dostav instance);
    partial void UpdateDostav(Dostav instance);
    partial void DeleteDostav(Dostav instance);
    partial void InsertDST_NKD(DST_NKD instance);
    partial void UpdateDST_NKD(DST_NKD instance);
    partial void DeleteDST_NKD(DST_NKD instance);
    partial void InsertEKMP_TYPE_DB(EKMP_TYPE_DB instance);
    partial void UpdateEKMP_TYPE_DB(EKMP_TYPE_DB instance);
    partial void DeleteEKMP_TYPE_DB(EKMP_TYPE_DB instance);
    partial void InsertExpertsDB(ExpertsDB instance);
    partial void UpdateExpertsDB(ExpertsDB instance);
    partial void DeleteExpertsDB(ExpertsDB instance);
    partial void InsertF001(F001 instance);
    partial void UpdateF001(F001 instance);
    partial void DeleteF001(F001 instance);
    partial void InsertF002(F002 instance);
    partial void UpdateF002(F002 instance);
    partial void DeleteF002(F002 instance);
    partial void InsertF003(F003 instance);
    partial void UpdateF003(F003 instance);
    partial void DeleteF003(F003 instance);
    partial void InsertF003Local(F003Local instance);
    partial void UpdateF003Local(F003Local instance);
    partial void DeleteF003Local(F003Local instance);
    partial void InsertF004(F004 instance);
    partial void UpdateF004(F004 instance);
    partial void DeleteF004(F004 instance);
    partial void InsertF005(F005 instance);
    partial void UpdateF005(F005 instance);
    partial void DeleteF005(F005 instance);
    partial void InsertF006(F006 instance);
    partial void UpdateF006(F006 instance);
    partial void DeleteF006(F006 instance);
    partial void InsertF007(F007 instance);
    partial void UpdateF007(F007 instance);
    partial void DeleteF007(F007 instance);
    partial void InsertF008(F008 instance);
    partial void UpdateF008(F008 instance);
    partial void DeleteF008(F008 instance);
    partial void InsertF009(F009 instance);
    partial void UpdateF009(F009 instance);
    partial void DeleteF009(F009 instance);
    partial void InsertF010(F010 instance);
    partial void UpdateF010(F010 instance);
    partial void DeleteF010(F010 instance);
    partial void InsertF011(F011 instance);
    partial void UpdateF011(F011 instance);
    partial void DeleteF011(F011 instance);
    partial void InsertF012(F012 instance);
    partial void UpdateF012(F012 instance);
    partial void DeleteF012(F012 instance);
    partial void InsertF013(F013 instance);
    partial void UpdateF013(F013 instance);
    partial void DeleteF013(F013 instance);
    partial void InsertF014(F014 instance);
    partial void UpdateF014(F014 instance);
    partial void DeleteF014(F014 instance);
    partial void InsertF015(F015 instance);
    partial void UpdateF015(F015 instance);
    partial void DeleteF015(F015 instance);
    partial void InsertFREP(FREP instance);
    partial void UpdateFREP(FREP instance);
    partial void DeleteFREP(FREP instance);
    partial void InsertGospit(Gospit instance);
    partial void UpdateGospit(Gospit instance);
    partial void DeleteGospit(Gospit instance);
    partial void InsertGrZdorovDb(GrZdorovDb instance);
    partial void UpdateGrZdorovDb(GrZdorovDb instance);
    partial void DeleteGrZdorovDb(GrZdorovDb instance);
    partial void InsertKatLgot(KatLgot instance);
    partial void UpdateKatLgot(KatLgot instance);
    partial void DeleteKatLgot(KatLgot instance);
    partial void InsertKodTer(KodTer instance);
    partial void UpdateKodTer(KodTer instance);
    partial void DeleteKodTer(KodTer instance);
    partial void InsertKSG_GR(KSG_GR instance);
    partial void UpdateKSG_GR(KSG_GR instance);
    partial void DeleteKSG_GR(KSG_GR instance);
    partial void InsertKSG_GROUP(KSG_GROUP instance);
    partial void UpdateKSG_GROUP(KSG_GROUP instance);
    partial void DeleteKSG_GROUP(KSG_GROUP instance);
    partial void InsertKSG_K(KSG_K instance);
    partial void UpdateKSG_K(KSG_K instance);
    partial void DeleteKSG_K(KSG_K instance);
    partial void InsertKSG_OT(KSG_OT instance);
    partial void UpdateKSG_OT(KSG_OT instance);
    partial void DeleteKSG_OT(KSG_OT instance);
    partial void InsertKSG_SPR(KSG_SPR instance);
    partial void UpdateKSG_SPR(KSG_SPR instance);
    partial void DeleteKSG_SPR(KSG_SPR instance);
    partial void InsertLIC_NUM_TBL(LIC_NUM_TBL instance);
    partial void UpdateLIC_NUM_TBL(LIC_NUM_TBL instance);
    partial void DeleteLIC_NUM_TBL(LIC_NUM_TBL instance);
    partial void InsertLIC_TBL(LIC_TBL instance);
    partial void UpdateLIC_TBL(LIC_TBL instance);
    partial void DeleteLIC_TBL(LIC_TBL instance);
    partial void InsertLicenseDb(LicenseDb instance);
    partial void UpdateLicenseDb(LicenseDb instance);
    partial void DeleteLicenseDb(LicenseDb instance);
    partial void InsertlocalPayment(localPayment instance);
    partial void UpdatelocalPayment(localPayment instance);
    partial void DeletelocalPayment(localPayment instance);
    partial void InsertLPU_K(LPU_K instance);
    partial void UpdateLPU_K(LPU_K instance);
    partial void DeleteLPU_K(LPU_K instance);
    partial void InsertLPU_K_old(LPU_K_old instance);
    partial void UpdateLPU_K_old(LPU_K_old instance);
    partial void DeleteLPU_K_old(LPU_K_old instance);
    partial void InsertM001_KSG(M001_KSG instance);
    partial void UpdateM001_KSG(M001_KSG instance);
    partial void DeleteM001_KSG(M001_KSG instance);
    partial void InsertMEE_DB(MEE_DB instance);
    partial void UpdateMEE_DB(MEE_DB instance);
    partial void DeleteMEE_DB(MEE_DB instance);
    partial void InsertMEE_TYPE_DB(MEE_TYPE_DB instance);
    partial void UpdateMEE_TYPE_DB(MEE_TYPE_DB instance);
    partial void DeleteMEE_TYPE_DB(MEE_TYPE_DB instance);
    partial void InsertMeeAutoDb(MeeAutoDb instance);
    partial void UpdateMeeAutoDb(MeeAutoDb instance);
    partial void DeleteMeeAutoDb(MeeAutoDb instance);
    partial void InsertMekDb(MekDb instance);
    partial void UpdateMekDb(MekDb instance);
    partial void DeleteMekDb(MekDb instance);
    partial void InsertNomenclature(Nomenclature instance);
    partial void UpdateNomenclature(Nomenclature instance);
    partial void DeleteNomenclature(Nomenclature instance);
    partial void InsertO001(O001 instance);
    partial void UpdateO001(O001 instance);
    partial void DeleteO001(O001 instance);
    partial void InsertO003(O003 instance);
    partial void UpdateO003(O003 instance);
    partial void DeleteO003(O003 instance);
    partial void InsertO004(O004 instance);
    partial void UpdateO004(O004 instance);
    partial void DeleteO004(O004 instance);
    partial void InsertO005(O005 instance);
    partial void UpdateO005(O005 instance);
    partial void DeleteO005(O005 instance);
    partial void InsertOsobSluchDb(OsobSluchDb instance);
    partial void UpdateOsobSluchDb(OsobSluchDb instance);
    partial void DeleteOsobSluchDb(OsobSluchDb instance);
    partial void InsertOtdelDb(OtdelDb instance);
    partial void UpdateOtdelDb(OtdelDb instance);
    partial void DeleteOtdelDb(OtdelDb instance);
    partial void Insertperiod_MEE_EKMP(period_MEE_EKMP instance);
    partial void Updateperiod_MEE_EKMP(period_MEE_EKMP instance);
    partial void Deleteperiod_MEE_EKMP(period_MEE_EKMP instance);
    partial void InsertPodrDb(PodrDb instance);
    partial void UpdatePodrDb(PodrDb instance);
    partial void DeletePodrDb(PodrDb instance);
    partial void InsertRMekDb(RMekDb instance);
    partial void UpdateRMekDb(RMekDb instance);
    partial void DeleteRMekDb(RMekDb instance);
    partial void InsertS_1664n(S_1664n instance);
    partial void UpdateS_1664n(S_1664n instance);
    partial void DeleteS_1664n(S_1664n instance);
    partial void InsertSANK(SANK instance);
    partial void UpdateSANK(SANK instance);
    partial void DeleteSANK(SANK instance);
    partial void InsertSANK_AUTO(SANK_AUTO instance);
    partial void UpdateSANK_AUTO(SANK_AUTO instance);
    partial void DeleteSANK_AUTO(SANK_AUTO instance);
    partial void InsertSANK_IMPORT_TBL(SANK_IMPORT_TBL instance);
    partial void UpdateSANK_IMPORT_TBL(SANK_IMPORT_TBL instance);
    partial void DeleteSANK_IMPORT_TBL(SANK_IMPORT_TBL instance);
    partial void InsertSANK_RE(SANK_RE instance);
    partial void UpdateSANK_RE(SANK_RE instance);
    partial void DeleteSANK_RE(SANK_RE instance);
    partial void InsertSCHET_OMS(SCHET_OMS instance);
    partial void UpdateSCHET_OMS(SCHET_OMS instance);
    partial void DeleteSCHET_OMS(SCHET_OMS instance);
    partial void InsertSCHET_SMO(SCHET_SMO instance);
    partial void UpdateSCHET_SMO(SCHET_SMO instance);
    partial void DeleteSCHET_SMO(SCHET_SMO instance);
    partial void InsertSchoolStatusDb(SchoolStatusDb instance);
    partial void UpdateSchoolStatusDb(SchoolStatusDb instance);
    partial void DeleteSchoolStatusDb(SchoolStatusDb instance);
    partial void InsertSettings(Settings instance);
    partial void UpdateSettings(Settings instance);
    partial void DeleteSettings(Settings instance);
    partial void InsertSettingsTables(SettingsTables instance);
    partial void UpdateSettingsTables(SettingsTables instance);
    partial void DeleteSettingsTables(SettingsTables instance);
    partial void InsertShablon_Filter(Shablon_Filter instance);
    partial void UpdateShablon_Filter(Shablon_Filter instance);
    partial void DeleteShablon_Filter(Shablon_Filter instance);
    partial void InsertSLUCH_DS2(SLUCH_DS2 instance);
    partial void UpdateSLUCH_DS2(SLUCH_DS2 instance);
    partial void DeleteSLUCH_DS2(SLUCH_DS2 instance);
    partial void InsertSLUCH_DS3(SLUCH_DS3 instance);
    partial void UpdateSLUCH_DS3(SLUCH_DS3 instance);
    partial void DeleteSLUCH_DS3(SLUCH_DS3 instance);
    partial void InsertSocStat(SocStat instance);
    partial void UpdateSocStat(SocStat instance);
    partial void DeleteSocStat(SocStat instance);
    partial void InsertSpecCodeDb(SpecCodeDb instance);
    partial void UpdateSpecCodeDb(SpecCodeDb instance);
    partial void DeleteSpecCodeDb(SpecCodeDb instance);
    partial void InsertSprANEST(SprANEST instance);
    partial void UpdateSprANEST(SprANEST instance);
    partial void DeleteSprANEST(SprANEST instance);
    partial void InsertSprDEFGOSP(SprDEFGOSP instance);
    partial void UpdateSprDEFGOSP(SprDEFGOSP instance);
    partial void DeleteSprDEFGOSP(SprDEFGOSP instance);
    partial void InsertSprDSGR(SprDSGR instance);
    partial void UpdateSprDSGR(SprDSGR instance);
    partial void DeleteSprDSGR(SprDSGR instance);
    partial void InsertSprExtr(SprExtr instance);
    partial void UpdateSprExtr(SprExtr instance);
    partial void DeleteSprExtr(SprExtr instance);
    partial void InsertSprKDOST(SprKDOST instance);
    partial void UpdateSprKDOST(SprKDOST instance);
    partial void DeleteSprKDOST(SprKDOST instance);
    partial void InsertSprKSGOPLATA(SprKSGOPLATA instance);
    partial void UpdateSprKSGOPLATA(SprKSGOPLATA instance);
    partial void DeleteSprKSGOPLATA(SprKSGOPLATA instance);
    partial void InsertSprKSGR(SprKSGR instance);
    partial void UpdateSprKSGR(SprKSGR instance);
    partial void DeleteSprKSGR(SprKSGR instance);
    partial void InsertSprOSL(SprOSL instance);
    partial void UpdateSprOSL(SprOSL instance);
    partial void DeleteSprOSL(SprOSL instance);
    partial void InsertSprPayment(SprPayment instance);
    partial void UpdateSprPayment(SprPayment instance);
    partial void DeleteSprPayment(SprPayment instance);
    partial void InsertSprStatictic(SprStatictic instance);
    partial void UpdateSprStatictic(SprStatictic instance);
    partial void DeleteSprStatictic(SprStatictic instance);
    partial void InsertSprTableType(SprTableType instance);
    partial void UpdateSprTableType(SprTableType instance);
    partial void DeleteSprTableType(SprTableType instance);
    partial void InsertSprVOPL(SprVOPL instance);
    partial void UpdateSprVOPL(SprVOPL instance);
    partial void DeleteSprVOPL(SprVOPL instance);
    partial void InsertSprVozr(SprVozr instance);
    partial void UpdateSprVozr(SprVozr instance);
    partial void DeleteSprVozr(SprVozr instance);
    partial void InsertTarif(Tarif instance);
    partial void UpdateTarif(Tarif instance);
    partial void DeleteTarif(Tarif instance);
    partial void InsertTARIF_PN(TARIF_PN instance);
    partial void UpdateTARIF_PN(TARIF_PN instance);
    partial void DeleteTARIF_PN(TARIF_PN instance);
    partial void InsertTipBoleznDb(TipBoleznDb instance);
    partial void UpdateTipBoleznDb(TipBoleznDb instance);
    partial void DeleteTipBoleznDb(TipBoleznDb instance);
    partial void InsertTravmaTbl(TravmaTbl instance);
    partial void UpdateTravmaTbl(TravmaTbl instance);
    partial void DeleteTravmaTbl(TravmaTbl instance);
    partial void InsertTypeSluchDb(TypeSluchDb instance);
    partial void UpdateTypeSluchDb(TypeSluchDb instance);
    partial void DeleteTypeSluchDb(TypeSluchDb instance);
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertUSL_ASSIST(USL_ASSIST instance);
    partial void UpdateUSL_ASSIST(USL_ASSIST instance);
    partial void DeleteUSL_ASSIST(USL_ASSIST instance);
    partial void InsertV001(V001 instance);
    partial void UpdateV001(V001 instance);
    partial void DeleteV001(V001 instance);
    partial void InsertV002(V002 instance);
    partial void UpdateV002(V002 instance);
    partial void DeleteV002(V002 instance);
    partial void InsertV003(V003 instance);
    partial void UpdateV003(V003 instance);
    partial void DeleteV003(V003 instance);
    partial void InsertV004(V004 instance);
    partial void UpdateV004(V004 instance);
    partial void DeleteV004(V004 instance);
    partial void InsertV005(V005 instance);
    partial void UpdateV005(V005 instance);
    partial void DeleteV005(V005 instance);
    partial void InsertV006(V006 instance);
    partial void UpdateV006(V006 instance);
    partial void DeleteV006(V006 instance);
    partial void InsertV007(V007 instance);
    partial void UpdateV007(V007 instance);
    partial void DeleteV007(V007 instance);
    partial void InsertV008(V008 instance);
    partial void UpdateV008(V008 instance);
    partial void DeleteV008(V008 instance);
    partial void InsertV009(V009 instance);
    partial void UpdateV009(V009 instance);
    partial void DeleteV009(V009 instance);
    partial void InsertV010(V010 instance);
    partial void UpdateV010(V010 instance);
    partial void DeleteV010(V010 instance);
    partial void InsertV012(V012 instance);
    partial void UpdateV012(V012 instance);
    partial void DeleteV012(V012 instance);
    partial void InsertV015(V015 instance);
    partial void UpdateV015(V015 instance);
    partial void DeleteV015(V015 instance);
    partial void InsertV015_V002(V015_V002 instance);
    partial void UpdateV015_V002(V015_V002 instance);
    partial void DeleteV015_V002(V015_V002 instance);
    partial void InsertVeteranDb(VeteranDb instance);
    partial void UpdateVeteranDb(VeteranDb instance);
    partial void DeleteVeteranDb(VeteranDb instance);
    partial void InsertVMP_TARIF(VMP_TARIF instance);
    partial void UpdateVMP_TARIF(VMP_TARIF instance);
    partial void DeleteVMP_TARIF(VMP_TARIF instance);
    partial void InsertWORK_DAY(WORK_DAY instance);
    partial void UpdateWORK_DAY(WORK_DAY instance);
    partial void DeleteWORK_DAY(WORK_DAY instance);
    partial void InsertWorkStatDb(WorkStatDb instance);
    partial void UpdateWorkStatDb(WorkStatDb instance);
    partial void DeleteWorkStatDb(WorkStatDb instance);
    partial void InsertYesNoTbl(YesNoTbl instance);
    partial void UpdateYesNoTbl(YesNoTbl instance);
    partial void DeleteYesNoTbl(YesNoTbl instance);
    partial void InsertSANK_IMP_TT(SANK_IMP_TT instance);
    partial void UpdateSANK_IMP_TT(SANK_IMP_TT instance);
    partial void DeleteSANK_IMP_TT(SANK_IMP_TT instance);
    partial void InsertCalcKsgTarif(CalcKsgTarif instance);
    partial void UpdateCalcKsgTarif(CalcKsgTarif instance);
    partial void DeleteCalcKsgTarif(CalcKsgTarif instance);
    partial void InsertSprKsg(SprKsg instance);
    partial void UpdateSprKsg(SprKsg instance);
    partial void DeleteSprKsg(SprKsg instance);
    partial void InsertPACIENT(PACIENT instance);
    partial void UpdatePACIENT(PACIENT instance);
    partial void DeletePACIENT(PACIENT instance);
    partial void InsertUSL_KSLP(USL_KSLP instance);
    partial void UpdateUSL_KSLP(USL_KSLP instance);
    partial void DeleteUSL_KSLP(USL_KSLP instance);
    partial void InsertSCHET(SCHET instance);
    partial void UpdateSCHET(SCHET instance);
    partial void DeleteSCHET(SCHET instance);
    partial void InsertSLUCH(SLUCH instance);
    partial void UpdateSLUCH(SLUCH instance);
    partial void DeleteSLUCH(SLUCH instance);
    partial void InsertUSL(USL instance);
    partial void UpdateUSL(USL instance);
    partial void DeleteUSL(USL instance);
    #endregion
		
		public ElmedDataClassesDataContext() : 
				base(global::Yamed.Entity.Properties.Settings.Default.ElmedicineSV_demoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ElmedDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ElmedDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ElmedDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ElmedDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AKT_EKMP_TBL> AKT_EKMP_TBL
		{
			get
			{
				return this.GetTable<AKT_EKMP_TBL>();
			}
		}
		
		public System.Data.Linq.Table<AKT_MEE> AKT_MEE
		{
			get
			{
				return this.GetTable<AKT_MEE>();
			}
		}
		
		public System.Data.Linq.Table<AKT_MEE_TBL> AKT_MEE_TBL
		{
			get
			{
				return this.GetTable<AKT_MEE_TBL>();
			}
		}
		
		public System.Data.Linq.Table<AmbulanceMKB> AmbulanceMKB
		{
			get
			{
				return this.GetTable<AmbulanceMKB>();
			}
		}
		
		public System.Data.Linq.Table<AttachedDoctorSpr> AttachedDoctorSpr
		{
			get
			{
				return this.GetTable<AttachedDoctorSpr>();
			}
		}
		
		public System.Data.Linq.Table<AttachedJournalSpr> AttachedJournalSpr
		{
			get
			{
				return this.GetTable<AttachedJournalSpr>();
			}
		}
		
		public System.Data.Linq.Table<AttachedPeopleSpr> AttachedPeopleSpr
		{
			get
			{
				return this.GetTable<AttachedPeopleSpr>();
			}
		}
		
		public System.Data.Linq.Table<CalcAmbTARIF> CalcAmbTARIF
		{
			get
			{
				return this.GetTable<CalcAmbTARIF>();
			}
		}
		
		public System.Data.Linq.Table<CalcMok> CalcMok
		{
			get
			{
				return this.GetTable<CalcMok>();
			}
		}
		
		public System.Data.Linq.Table<CalcUprk> CalcUprk
		{
			get
			{
				return this.GetTable<CalcUprk>();
			}
		}
		
		public System.Data.Linq.Table<CalcVmpTarif> CalcVmpTarif
		{
			get
			{
				return this.GetTable<CalcVmpTarif>();
			}
		}
		
		public System.Data.Linq.Table<CalNotKus> CalNotKus
		{
			get
			{
				return this.GetTable<CalNotKus>();
			}
		}
		
		public System.Data.Linq.Table<DbVersion> DbVersion
		{
			get
			{
				return this.GetTable<DbVersion>();
			}
		}
		
		public System.Data.Linq.Table<dd_vd> dd_vd
		{
			get
			{
				return this.GetTable<dd_vd>();
			}
		}
		
		public System.Data.Linq.Table<DetProfilDb> DetProfilDb
		{
			get
			{
				return this.GetTable<DetProfilDb>();
			}
		}
		
		public System.Data.Linq.Table<DISP_SPR> DISP_SPR
		{
			get
			{
				return this.GetTable<DISP_SPR>();
			}
		}
		
		public System.Data.Linq.Table<DoctorBd> DoctorBd
		{
			get
			{
				return this.GetTable<DoctorBd>();
			}
		}
		
		public System.Data.Linq.Table<DoctorTbl> DoctorTbl
		{
			get
			{
				return this.GetTable<DoctorTbl>();
			}
		}
		
		public System.Data.Linq.Table<Dostav> Dostav
		{
			get
			{
				return this.GetTable<Dostav>();
			}
		}
		
		public System.Data.Linq.Table<DST_NKD> DST_NKD
		{
			get
			{
				return this.GetTable<DST_NKD>();
			}
		}
		
		public System.Data.Linq.Table<EKMP_TYPE_DB> EKMP_TYPE_DB
		{
			get
			{
				return this.GetTable<EKMP_TYPE_DB>();
			}
		}
		
		public System.Data.Linq.Table<enp_update> enp_update
		{
			get
			{
				return this.GetTable<enp_update>();
			}
		}
		
		public System.Data.Linq.Table<ExpertsDB> ExpertsDB
		{
			get
			{
				return this.GetTable<ExpertsDB>();
			}
		}
		
		public System.Data.Linq.Table<F001> F001
		{
			get
			{
				return this.GetTable<F001>();
			}
		}
		
		public System.Data.Linq.Table<F002> F002
		{
			get
			{
				return this.GetTable<F002>();
			}
		}
		
		public System.Data.Linq.Table<F003> F003
		{
			get
			{
				return this.GetTable<F003>();
			}
		}
		
		public System.Data.Linq.Table<F003_59> F003_59
		{
			get
			{
				return this.GetTable<F003_59>();
			}
		}
		
		public System.Data.Linq.Table<F003_67> F003_67
		{
			get
			{
				return this.GetTable<F003_67>();
			}
		}
		
		public System.Data.Linq.Table<F003Local> F003Local
		{
			get
			{
				return this.GetTable<F003Local>();
			}
		}
		
		public System.Data.Linq.Table<F004> F004
		{
			get
			{
				return this.GetTable<F004>();
			}
		}
		
		public System.Data.Linq.Table<F005> F005
		{
			get
			{
				return this.GetTable<F005>();
			}
		}
		
		public System.Data.Linq.Table<F006> F006
		{
			get
			{
				return this.GetTable<F006>();
			}
		}
		
		public System.Data.Linq.Table<F007> F007
		{
			get
			{
				return this.GetTable<F007>();
			}
		}
		
		public System.Data.Linq.Table<F008> F008
		{
			get
			{
				return this.GetTable<F008>();
			}
		}
		
		public System.Data.Linq.Table<F009> F009
		{
			get
			{
				return this.GetTable<F009>();
			}
		}
		
		public System.Data.Linq.Table<F010> F010
		{
			get
			{
				return this.GetTable<F010>();
			}
		}
		
		public System.Data.Linq.Table<F011> F011
		{
			get
			{
				return this.GetTable<F011>();
			}
		}
		
		public System.Data.Linq.Table<F012> F012
		{
			get
			{
				return this.GetTable<F012>();
			}
		}
		
		public System.Data.Linq.Table<F013> F013
		{
			get
			{
				return this.GetTable<F013>();
			}
		}
		
		public System.Data.Linq.Table<F014> F014
		{
			get
			{
				return this.GetTable<F014>();
			}
		}
		
		public System.Data.Linq.Table<F015> F015
		{
			get
			{
				return this.GetTable<F015>();
			}
		}
		
		public System.Data.Linq.Table<FREP> FREP
		{
			get
			{
				return this.GetTable<FREP>();
			}
		}
		
		public System.Data.Linq.Table<Gospit> Gospit
		{
			get
			{
				return this.GetTable<Gospit>();
			}
		}
		
		public System.Data.Linq.Table<GrZdorovDb> GrZdorovDb
		{
			get
			{
				return this.GetTable<GrZdorovDb>();
			}
		}
		
		public System.Data.Linq.Table<KatLgot> KatLgot
		{
			get
			{
				return this.GetTable<KatLgot>();
			}
		}
		
		public System.Data.Linq.Table<KodTer> KodTer
		{
			get
			{
				return this.GetTable<KodTer>();
			}
		}
		
		public System.Data.Linq.Table<ksg_avg> ksg_avg
		{
			get
			{
				return this.GetTable<ksg_avg>();
			}
		}
		
		public System.Data.Linq.Table<KSG_GR> KSG_GR
		{
			get
			{
				return this.GetTable<KSG_GR>();
			}
		}
		
		public System.Data.Linq.Table<KSG_GROUP> KSG_GROUP
		{
			get
			{
				return this.GetTable<KSG_GROUP>();
			}
		}
		
		public System.Data.Linq.Table<KSG_K> KSG_K
		{
			get
			{
				return this.GetTable<KSG_K>();
			}
		}
		
		public System.Data.Linq.Table<KSG_OT> KSG_OT
		{
			get
			{
				return this.GetTable<KSG_OT>();
			}
		}
		
		public System.Data.Linq.Table<KSG_SOD> KSG_SOD
		{
			get
			{
				return this.GetTable<KSG_SOD>();
			}
		}
		
		public System.Data.Linq.Table<KSG_SPR> KSG_SPR
		{
			get
			{
				return this.GetTable<KSG_SPR>();
			}
		}
		
		public System.Data.Linq.Table<LIC_NUM_TBL> LIC_NUM_TBL
		{
			get
			{
				return this.GetTable<LIC_NUM_TBL>();
			}
		}
		
		public System.Data.Linq.Table<LIC_TBL> LIC_TBL
		{
			get
			{
				return this.GetTable<LIC_TBL>();
			}
		}
		
		public System.Data.Linq.Table<LicenseDb> LicenseDb
		{
			get
			{
				return this.GetTable<LicenseDb>();
			}
		}
		
		public System.Data.Linq.Table<localPayment> localPayment
		{
			get
			{
				return this.GetTable<localPayment>();
			}
		}
		
		public System.Data.Linq.Table<LPU_K> LPU_K
		{
			get
			{
				return this.GetTable<LPU_K>();
			}
		}
		
		public System.Data.Linq.Table<LPU_K_old> LPU_K_old
		{
			get
			{
				return this.GetTable<LPU_K_old>();
			}
		}
		
		public System.Data.Linq.Table<M001_KSG> M001_KSG
		{
			get
			{
				return this.GetTable<M001_KSG>();
			}
		}
		
		public System.Data.Linq.Table<M001SPneotlog> M001SPneotlog
		{
			get
			{
				return this.GetTable<M001SPneotlog>();
			}
		}
		
		public System.Data.Linq.Table<MEE_DB> MEE_DB
		{
			get
			{
				return this.GetTable<MEE_DB>();
			}
		}
		
		public System.Data.Linq.Table<MEE_TYPE_DB> MEE_TYPE_DB
		{
			get
			{
				return this.GetTable<MEE_TYPE_DB>();
			}
		}
		
		public System.Data.Linq.Table<MeeAutoDb> MeeAutoDb
		{
			get
			{
				return this.GetTable<MeeAutoDb>();
			}
		}
		
		public System.Data.Linq.Table<MekDb> MekDb
		{
			get
			{
				return this.GetTable<MekDb>();
			}
		}
		
		public System.Data.Linq.Table<MSPCONV> MSPCONV
		{
			get
			{
				return this.GetTable<MSPCONV>();
			}
		}
		
		public System.Data.Linq.Table<neopred_ZL> neopred_ZL
		{
			get
			{
				return this.GetTable<neopred_ZL>();
			}
		}
		
		public System.Data.Linq.Table<Nomenclature> Nomenclature
		{
			get
			{
				return this.GetTable<Nomenclature>();
			}
		}
		
		public System.Data.Linq.Table<O001> O001
		{
			get
			{
				return this.GetTable<O001>();
			}
		}
		
		public System.Data.Linq.Table<O003> O003
		{
			get
			{
				return this.GetTable<O003>();
			}
		}
		
		public System.Data.Linq.Table<O004> O004
		{
			get
			{
				return this.GetTable<O004>();
			}
		}
		
		public System.Data.Linq.Table<O005> O005
		{
			get
			{
				return this.GetTable<O005>();
			}
		}
		
		public System.Data.Linq.Table<OsobSluchDb> OsobSluchDb
		{
			get
			{
				return this.GetTable<OsobSluchDb>();
			}
		}
		
		public System.Data.Linq.Table<OtdelDb> OtdelDb
		{
			get
			{
				return this.GetTable<OtdelDb>();
			}
		}
		
		public System.Data.Linq.Table<people_update> people_update
		{
			get
			{
				return this.GetTable<people_update>();
			}
		}
		
		public System.Data.Linq.Table<perekrest> perekrest
		{
			get
			{
				return this.GetTable<perekrest>();
			}
		}
		
		public System.Data.Linq.Table<period_MEE_EKMP> period_MEE_EKMP
		{
			get
			{
				return this.GetTable<period_MEE_EKMP>();
			}
		}
		
		public System.Data.Linq.Table<PodrDb> PodrDb
		{
			get
			{
				return this.GetTable<PodrDb>();
			}
		}
		
		public System.Data.Linq.Table<polis_update> polis_update
		{
			get
			{
				return this.GetTable<polis_update>();
			}
		}
		
		public System.Data.Linq.Table<RMekDb> RMekDb
		{
			get
			{
				return this.GetTable<RMekDb>();
			}
		}
		
		public System.Data.Linq.Table<S_1664n> S_1664n
		{
			get
			{
				return this.GetTable<S_1664n>();
			}
		}
		
		public System.Data.Linq.Table<SANK> SANK
		{
			get
			{
				return this.GetTable<SANK>();
			}
		}
		
		public System.Data.Linq.Table<SANK_AUTO> SANK_AUTO
		{
			get
			{
				return this.GetTable<SANK_AUTO>();
			}
		}
		
		public System.Data.Linq.Table<SANK_EXP_TT> SANK_EXP_TT
		{
			get
			{
				return this.GetTable<SANK_EXP_TT>();
			}
		}
		
		public System.Data.Linq.Table<SANK_IMPORT_TBL> SANK_IMPORT_TBL
		{
			get
			{
				return this.GetTable<SANK_IMPORT_TBL>();
			}
		}
		
		public System.Data.Linq.Table<SANK_RE> SANK_RE
		{
			get
			{
				return this.GetTable<SANK_RE>();
			}
		}
		
		public System.Data.Linq.Table<SCHET_OMS> SCHET_OMS
		{
			get
			{
				return this.GetTable<SCHET_OMS>();
			}
		}
		
		public System.Data.Linq.Table<SCHET_SMO> SCHET_SMO
		{
			get
			{
				return this.GetTable<SCHET_SMO>();
			}
		}
		
		public System.Data.Linq.Table<SchoolStatusDb> SchoolStatusDb
		{
			get
			{
				return this.GetTable<SchoolStatusDb>();
			}
		}
		
		public System.Data.Linq.Table<Settings> Settings
		{
			get
			{
				return this.GetTable<Settings>();
			}
		}
		
		public System.Data.Linq.Table<SettingsTables> SettingsTables
		{
			get
			{
				return this.GetTable<SettingsTables>();
			}
		}
		
		public System.Data.Linq.Table<Shablon_Filter> Shablon_Filter
		{
			get
			{
				return this.GetTable<Shablon_Filter>();
			}
		}
		
		public System.Data.Linq.Table<SLUCH_DS2> SLUCH_DS2
		{
			get
			{
				return this.GetTable<SLUCH_DS2>();
			}
		}
		
		public System.Data.Linq.Table<SLUCH_DS3> SLUCH_DS3
		{
			get
			{
				return this.GetTable<SLUCH_DS3>();
			}
		}
		
		public System.Data.Linq.Table<SLUCH_TEMP> SLUCH_TEMP
		{
			get
			{
				return this.GetTable<SLUCH_TEMP>();
			}
		}
		
		public System.Data.Linq.Table<SocStat> SocStat
		{
			get
			{
				return this.GetTable<SocStat>();
			}
		}
		
		public System.Data.Linq.Table<SpecCodeDb> SpecCodeDb
		{
			get
			{
				return this.GetTable<SpecCodeDb>();
			}
		}
		
		public System.Data.Linq.Table<SprANEST> SprANEST
		{
			get
			{
				return this.GetTable<SprANEST>();
			}
		}
		
		public System.Data.Linq.Table<SprDEFGOSP> SprDEFGOSP
		{
			get
			{
				return this.GetTable<SprDEFGOSP>();
			}
		}
		
		public System.Data.Linq.Table<SprDSGR> SprDSGR
		{
			get
			{
				return this.GetTable<SprDSGR>();
			}
		}
		
		public System.Data.Linq.Table<SprExtr> SprExtr
		{
			get
			{
				return this.GetTable<SprExtr>();
			}
		}
		
		public System.Data.Linq.Table<SprKDOST> SprKDOST
		{
			get
			{
				return this.GetTable<SprKDOST>();
			}
		}
		
		public System.Data.Linq.Table<SprKSGOPLATA> SprKSGOPLATA
		{
			get
			{
				return this.GetTable<SprKSGOPLATA>();
			}
		}
		
		public System.Data.Linq.Table<SprKSGR> SprKSGR
		{
			get
			{
				return this.GetTable<SprKSGR>();
			}
		}
		
		public System.Data.Linq.Table<SprOSL> SprOSL
		{
			get
			{
				return this.GetTable<SprOSL>();
			}
		}
		
		public System.Data.Linq.Table<SprPayment> SprPayment
		{
			get
			{
				return this.GetTable<SprPayment>();
			}
		}
		
		public System.Data.Linq.Table<SprStatictic> SprStatictic
		{
			get
			{
				return this.GetTable<SprStatictic>();
			}
		}
		
		public System.Data.Linq.Table<SprTableType> SprTableType
		{
			get
			{
				return this.GetTable<SprTableType>();
			}
		}
		
		public System.Data.Linq.Table<SprVOPL> SprVOPL
		{
			get
			{
				return this.GetTable<SprVOPL>();
			}
		}
		
		public System.Data.Linq.Table<SprVozr> SprVozr
		{
			get
			{
				return this.GetTable<SprVozr>();
			}
		}
		
		public System.Data.Linq.Table<Tarif> Tarif
		{
			get
			{
				return this.GetTable<Tarif>();
			}
		}
		
		public System.Data.Linq.Table<TARIF_PN> TARIF_PN
		{
			get
			{
				return this.GetTable<TARIF_PN>();
			}
		}
		
		public System.Data.Linq.Table<TipBoleznDb> TipBoleznDb
		{
			get
			{
				return this.GetTable<TipBoleznDb>();
			}
		}
		
		public System.Data.Linq.Table<TravmaTbl> TravmaTbl
		{
			get
			{
				return this.GetTable<TravmaTbl>();
			}
		}
		
		public System.Data.Linq.Table<TypeSluchDb> TypeSluchDb
		{
			get
			{
				return this.GetTable<TypeSluchDb>();
			}
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<USL_ASSIST> USL_ASSIST
		{
			get
			{
				return this.GetTable<USL_ASSIST>();
			}
		}
		
		public System.Data.Linq.Table<V001> V001
		{
			get
			{
				return this.GetTable<V001>();
			}
		}
		
		public System.Data.Linq.Table<V002> V002
		{
			get
			{
				return this.GetTable<V002>();
			}
		}
		
		public System.Data.Linq.Table<V003> V003
		{
			get
			{
				return this.GetTable<V003>();
			}
		}
		
		public System.Data.Linq.Table<V004> V004
		{
			get
			{
				return this.GetTable<V004>();
			}
		}
		
		public System.Data.Linq.Table<V005> V005
		{
			get
			{
				return this.GetTable<V005>();
			}
		}
		
		public System.Data.Linq.Table<V006> V006
		{
			get
			{
				return this.GetTable<V006>();
			}
		}
		
		public System.Data.Linq.Table<V007> V007
		{
			get
			{
				return this.GetTable<V007>();
			}
		}
		
		public System.Data.Linq.Table<V008> V008
		{
			get
			{
				return this.GetTable<V008>();
			}
		}
		
		public System.Data.Linq.Table<V009> V009
		{
			get
			{
				return this.GetTable<V009>();
			}
		}
		
		public System.Data.Linq.Table<V010> V010
		{
			get
			{
				return this.GetTable<V010>();
			}
		}
		
		public System.Data.Linq.Table<V012> V012
		{
			get
			{
				return this.GetTable<V012>();
			}
		}
		
		public System.Data.Linq.Table<V015> V015
		{
			get
			{
				return this.GetTable<V015>();
			}
		}
		
		public System.Data.Linq.Table<V015_V002> V015_V002
		{
			get
			{
				return this.GetTable<V015_V002>();
			}
		}
		
		public System.Data.Linq.Table<V018> V018
		{
			get
			{
				return this.GetTable<V018>();
			}
		}
		
		public System.Data.Linq.Table<V019> V019
		{
			get
			{
				return this.GetTable<V019>();
			}
		}
		
		public System.Data.Linq.Table<VeteranDb> VeteranDb
		{
			get
			{
				return this.GetTable<VeteranDb>();
			}
		}
		
		public System.Data.Linq.Table<VMP_TARIF> VMP_TARIF
		{
			get
			{
				return this.GetTable<VMP_TARIF>();
			}
		}
		
		public System.Data.Linq.Table<WORK_DAY> WORK_DAY
		{
			get
			{
				return this.GetTable<WORK_DAY>();
			}
		}
		
		public System.Data.Linq.Table<WorkStatDb> WorkStatDb
		{
			get
			{
				return this.GetTable<WorkStatDb>();
			}
		}
		
		public System.Data.Linq.Table<YesNoTbl> YesNoTbl
		{
			get
			{
				return this.GetTable<YesNoTbl>();
			}
		}
		
		public System.Data.Linq.Table<YamedRegistry> YamedRegistry
		{
			get
			{
				return this.GetTable<YamedRegistry>();
			}
		}
		
		public System.Data.Linq.Table<SANK_IMP_TT> SANK_IMP_TT
		{
			get
			{
				return this.GetTable<SANK_IMP_TT>();
			}
		}
		
		public System.Data.Linq.Table<CalcKsgTarif> CalcKsgTarif
		{
			get
			{
				return this.GetTable<CalcKsgTarif>();
			}
		}
		
		public System.Data.Linq.Table<SprKsg> SprKsg
		{
			get
			{
				return this.GetTable<SprKsg>();
			}
		}
		
		public System.Data.Linq.Table<PACIENT> PACIENT
		{
			get
			{
				return this.GetTable<PACIENT>();
			}
		}
		
		public System.Data.Linq.Table<USL_KSLP> USL_KSLP
		{
			get
			{
				return this.GetTable<USL_KSLP>();
			}
		}
		
		public System.Data.Linq.Table<SCHET> SCHET
		{
			get
			{
				return this.GetTable<SCHET>();
			}
		}
		
		public System.Data.Linq.Table<SLUCH> SLUCH
		{
			get
			{
				return this.GetTable<SLUCH>();
			}
		}
		
		public System.Data.Linq.Table<USL> USL
		{
			get
			{
				return this.GetTable<USL>();
			}
		}
		
		public System.Data.Linq.Table<V016> V016
		{
			get
			{
				return this.GetTable<V016>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Mek_Calc")]
		public int Mek_Calc([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> schet_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schet_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Mek_Del")]
		public int Mek_Del([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> schet_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schet_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sank_Calc")]
		public int Sank_Calc([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> schet_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schet_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sank_Calc_")]
		public int Sank_Calc_([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> schet_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schet_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sank_Del")]
		public int Sank_Del([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> schet_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schet_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Schet_Calc")]
		public int Schet_Calc([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> schet_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schet_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.schet_delete")]
		public int schet_delete([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> schet_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schet_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sluch_Calc")]
		public int Sluch_Calc([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> schet_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schet_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sluch_Calc_")]
		public int Sluch_Calc_([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> schet_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schet_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.count_update")]
		public int count_update([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> s)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), s);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AKT_EKMP_TBL")]
	public partial class AKT_EKMP_TBL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _EKMP_TYPE;
		
		private System.Nullable<System.DateTime> _AKT_DATE;
		
		private System.Nullable<int> _USERID;
		
		private string _CONTRACT;
		
		private string _SMONAME;
		
		private string _MONAME;
		
		private string _SCHET_NUM;
		
		private string _POLIS_NUM;
		
		private string _CARD_NUM;
		
		private string _DS1;
		
		private string _DS_EXP;
		
		private System.Nullable<System.DateTime> _PERIOD1;
		
		private System.Nullable<System.DateTime> _PERIOD2;
		
		private System.Nullable<decimal> _SUMV;
		
		private System.Nullable<decimal> _BOL_DLIT;
		
		private string _DOCT;
		
		private string _DOC_CHECKED;
		
		private string _ZAKL;
		
		private string _RECOMEND;
		
		private string _COD_PU;
		
		private System.Nullable<decimal> _SUMP;
		
		private System.Nullable<decimal> _SUMNP;
		
		private System.Nullable<decimal> _SUM_MULCT;
		
		private int _SLID;
		
		private int _SANKID;
		
		private int _AKT_NUMBER;
		
		private System.Nullable<int> _SANK_AUTO_ID;
		
		private System.Nullable<int> _SUM_PR;
		
		private System.Nullable<decimal> _SUM_UM;
		
		private System.Nullable<int> _PID;
		
		private string _COD_PU_TS;
		
		private EntityRef<EKMP_TYPE_DB> _EKMP_TYPE_DB;
		
		private EntityRef<ExpertsDB> _ExpertsDB;
		
		private EntityRef<F014> _F014;
		
		private EntityRef<SANK> _SANK;
		
		private EntityRef<SANK_AUTO> _SANK_AUTO;
		
		private EntityRef<PACIENT> _PACIENT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEKMP_TYPEChanging(System.Nullable<int> value);
    partial void OnEKMP_TYPEChanged();
    partial void OnAKT_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnAKT_DATEChanged();
    partial void OnUSERIDChanging(System.Nullable<int> value);
    partial void OnUSERIDChanged();
    partial void OnCONTRACTChanging(string value);
    partial void OnCONTRACTChanged();
    partial void OnSMONAMEChanging(string value);
    partial void OnSMONAMEChanged();
    partial void OnMONAMEChanging(string value);
    partial void OnMONAMEChanged();
    partial void OnSCHET_NUMChanging(string value);
    partial void OnSCHET_NUMChanged();
    partial void OnPOLIS_NUMChanging(string value);
    partial void OnPOLIS_NUMChanged();
    partial void OnCARD_NUMChanging(string value);
    partial void OnCARD_NUMChanged();
    partial void OnDS1Changing(string value);
    partial void OnDS1Changed();
    partial void OnDS_EXPChanging(string value);
    partial void OnDS_EXPChanged();
    partial void OnPERIOD1Changing(System.Nullable<System.DateTime> value);
    partial void OnPERIOD1Changed();
    partial void OnPERIOD2Changing(System.Nullable<System.DateTime> value);
    partial void OnPERIOD2Changed();
    partial void OnSUMVChanging(System.Nullable<decimal> value);
    partial void OnSUMVChanged();
    partial void OnBOL_DLITChanging(System.Nullable<decimal> value);
    partial void OnBOL_DLITChanged();
    partial void OnDOCTChanging(string value);
    partial void OnDOCTChanged();
    partial void OnDOC_CHECKEDChanging(string value);
    partial void OnDOC_CHECKEDChanged();
    partial void OnZAKLChanging(string value);
    partial void OnZAKLChanged();
    partial void OnRECOMENDChanging(string value);
    partial void OnRECOMENDChanged();
    partial void OnCOD_PUChanging(string value);
    partial void OnCOD_PUChanged();
    partial void OnSUMPChanging(System.Nullable<decimal> value);
    partial void OnSUMPChanged();
    partial void OnSUMNPChanging(System.Nullable<decimal> value);
    partial void OnSUMNPChanged();
    partial void OnSUM_MULCTChanging(System.Nullable<decimal> value);
    partial void OnSUM_MULCTChanged();
    partial void OnSLIDChanging(int value);
    partial void OnSLIDChanged();
    partial void OnSANKIDChanging(int value);
    partial void OnSANKIDChanged();
    partial void OnAKT_NUMBERChanging(int value);
    partial void OnAKT_NUMBERChanged();
    partial void OnSANK_AUTO_IDChanging(System.Nullable<int> value);
    partial void OnSANK_AUTO_IDChanged();
    partial void OnSUM_PRChanging(System.Nullable<int> value);
    partial void OnSUM_PRChanged();
    partial void OnSUM_UMChanging(System.Nullable<decimal> value);
    partial void OnSUM_UMChanged();
    partial void OnPIDChanging(System.Nullable<int> value);
    partial void OnPIDChanged();
    partial void OnCOD_PU_TSChanging(string value);
    partial void OnCOD_PU_TSChanged();
    #endregion
		
		public AKT_EKMP_TBL()
		{
			this._EKMP_TYPE_DB = default(EntityRef<EKMP_TYPE_DB>);
			this._ExpertsDB = default(EntityRef<ExpertsDB>);
			this._F014 = default(EntityRef<F014>);
			this._SANK = default(EntityRef<SANK>);
			this._SANK_AUTO = default(EntityRef<SANK_AUTO>);
			this._PACIENT = default(EntityRef<PACIENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EKMP_TYPE", DbType="Int")]
		public System.Nullable<int> EKMP_TYPE
		{
			get
			{
				return this._EKMP_TYPE;
			}
			set
			{
				if ((this._EKMP_TYPE != value))
				{
					if (this._EKMP_TYPE_DB.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEKMP_TYPEChanging(value);
					this.SendPropertyChanging();
					this._EKMP_TYPE = value;
					this.SendPropertyChanged("EKMP_TYPE");
					this.OnEKMP_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AKT_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> AKT_DATE
		{
			get
			{
				return this._AKT_DATE;
			}
			set
			{
				if ((this._AKT_DATE != value))
				{
					this.OnAKT_DATEChanging(value);
					this.SendPropertyChanging();
					this._AKT_DATE = value;
					this.SendPropertyChanged("AKT_DATE");
					this.OnAKT_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="Int")]
		public System.Nullable<int> USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					if (this._ExpertsDB.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTRACT", DbType="VarChar(120)")]
		public string CONTRACT
		{
			get
			{
				return this._CONTRACT;
			}
			set
			{
				if ((this._CONTRACT != value))
				{
					this.OnCONTRACTChanging(value);
					this.SendPropertyChanging();
					this._CONTRACT = value;
					this.SendPropertyChanged("CONTRACT");
					this.OnCONTRACTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMONAME", DbType="NVarChar(75)")]
		public string SMONAME
		{
			get
			{
				return this._SMONAME;
			}
			set
			{
				if ((this._SMONAME != value))
				{
					this.OnSMONAMEChanging(value);
					this.SendPropertyChanging();
					this._SMONAME = value;
					this.SendPropertyChanged("SMONAME");
					this.OnSMONAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MONAME", DbType="NVarChar(250)")]
		public string MONAME
		{
			get
			{
				return this._MONAME;
			}
			set
			{
				if ((this._MONAME != value))
				{
					this.OnMONAMEChanging(value);
					this.SendPropertyChanging();
					this._MONAME = value;
					this.SendPropertyChanged("MONAME");
					this.OnMONAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHET_NUM", DbType="NVarChar(50)")]
		public string SCHET_NUM
		{
			get
			{
				return this._SCHET_NUM;
			}
			set
			{
				if ((this._SCHET_NUM != value))
				{
					this.OnSCHET_NUMChanging(value);
					this.SendPropertyChanging();
					this._SCHET_NUM = value;
					this.SendPropertyChanged("SCHET_NUM");
					this.OnSCHET_NUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POLIS_NUM", DbType="NVarChar(400)")]
		public string POLIS_NUM
		{
			get
			{
				return this._POLIS_NUM;
			}
			set
			{
				if ((this._POLIS_NUM != value))
				{
					this.OnPOLIS_NUMChanging(value);
					this.SendPropertyChanging();
					this._POLIS_NUM = value;
					this.SendPropertyChanged("POLIS_NUM");
					this.OnPOLIS_NUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CARD_NUM", DbType="NVarChar(400)")]
		public string CARD_NUM
		{
			get
			{
				return this._CARD_NUM;
			}
			set
			{
				if ((this._CARD_NUM != value))
				{
					this.OnCARD_NUMChanging(value);
					this.SendPropertyChanging();
					this._CARD_NUM = value;
					this.SendPropertyChanged("CARD_NUM");
					this.OnCARD_NUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS1", DbType="NVarChar(200)")]
		public string DS1
		{
			get
			{
				return this._DS1;
			}
			set
			{
				if ((this._DS1 != value))
				{
					this.OnDS1Changing(value);
					this.SendPropertyChanging();
					this._DS1 = value;
					this.SendPropertyChanged("DS1");
					this.OnDS1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS_EXP", DbType="NVarChar(500)")]
		public string DS_EXP
		{
			get
			{
				return this._DS_EXP;
			}
			set
			{
				if ((this._DS_EXP != value))
				{
					this.OnDS_EXPChanging(value);
					this.SendPropertyChanging();
					this._DS_EXP = value;
					this.SendPropertyChanged("DS_EXP");
					this.OnDS_EXPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERIOD1", DbType="DateTime")]
		public System.Nullable<System.DateTime> PERIOD1
		{
			get
			{
				return this._PERIOD1;
			}
			set
			{
				if ((this._PERIOD1 != value))
				{
					this.OnPERIOD1Changing(value);
					this.SendPropertyChanging();
					this._PERIOD1 = value;
					this.SendPropertyChanged("PERIOD1");
					this.OnPERIOD1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERIOD2", DbType="DateTime")]
		public System.Nullable<System.DateTime> PERIOD2
		{
			get
			{
				return this._PERIOD2;
			}
			set
			{
				if ((this._PERIOD2 != value))
				{
					this.OnPERIOD2Changing(value);
					this.SendPropertyChanging();
					this._PERIOD2 = value;
					this.SendPropertyChanged("PERIOD2");
					this.OnPERIOD2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUMV", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUMV
		{
			get
			{
				return this._SUMV;
			}
			set
			{
				if ((this._SUMV != value))
				{
					this.OnSUMVChanging(value);
					this.SendPropertyChanging();
					this._SUMV = value;
					this.SendPropertyChanged("SUMV");
					this.OnSUMVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOL_DLIT", DbType="Decimal(5,0)")]
		public System.Nullable<decimal> BOL_DLIT
		{
			get
			{
				return this._BOL_DLIT;
			}
			set
			{
				if ((this._BOL_DLIT != value))
				{
					this.OnBOL_DLITChanging(value);
					this.SendPropertyChanging();
					this._BOL_DLIT = value;
					this.SendPropertyChanged("BOL_DLIT");
					this.OnBOL_DLITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCT", DbType="NVarChar(150)")]
		public string DOCT
		{
			get
			{
				return this._DOCT;
			}
			set
			{
				if ((this._DOCT != value))
				{
					this.OnDOCTChanging(value);
					this.SendPropertyChanging();
					this._DOCT = value;
					this.SendPropertyChanged("DOCT");
					this.OnDOCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOC_CHECKED", DbType="NVarChar(300)")]
		public string DOC_CHECKED
		{
			get
			{
				return this._DOC_CHECKED;
			}
			set
			{
				if ((this._DOC_CHECKED != value))
				{
					this.OnDOC_CHECKEDChanging(value);
					this.SendPropertyChanging();
					this._DOC_CHECKED = value;
					this.SendPropertyChanged("DOC_CHECKED");
					this.OnDOC_CHECKEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZAKL", DbType="NVarChar(1000)")]
		public string ZAKL
		{
			get
			{
				return this._ZAKL;
			}
			set
			{
				if ((this._ZAKL != value))
				{
					this.OnZAKLChanging(value);
					this.SendPropertyChanging();
					this._ZAKL = value;
					this.SendPropertyChanged("ZAKL");
					this.OnZAKLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECOMEND", DbType="NVarChar(1000)")]
		public string RECOMEND
		{
			get
			{
				return this._RECOMEND;
			}
			set
			{
				if ((this._RECOMEND != value))
				{
					this.OnRECOMENDChanging(value);
					this.SendPropertyChanging();
					this._RECOMEND = value;
					this.SendPropertyChanged("RECOMEND");
					this.OnRECOMENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COD_PU", DbType="NVarChar(20)")]
		public string COD_PU
		{
			get
			{
				return this._COD_PU;
			}
			set
			{
				if ((this._COD_PU != value))
				{
					if (this._F014.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOD_PUChanging(value);
					this.SendPropertyChanging();
					this._COD_PU = value;
					this.SendPropertyChanged("COD_PU");
					this.OnCOD_PUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUMP", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUMP
		{
			get
			{
				return this._SUMP;
			}
			set
			{
				if ((this._SUMP != value))
				{
					this.OnSUMPChanging(value);
					this.SendPropertyChanging();
					this._SUMP = value;
					this.SendPropertyChanged("SUMP");
					this.OnSUMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUMNP", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUMNP
		{
			get
			{
				return this._SUMNP;
			}
			set
			{
				if ((this._SUMNP != value))
				{
					this.OnSUMNPChanging(value);
					this.SendPropertyChanging();
					this._SUMNP = value;
					this.SendPropertyChanged("SUMNP");
					this.OnSUMNPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUM_MULCT", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUM_MULCT
		{
			get
			{
				return this._SUM_MULCT;
			}
			set
			{
				if ((this._SUM_MULCT != value))
				{
					this.OnSUM_MULCTChanging(value);
					this.SendPropertyChanging();
					this._SUM_MULCT = value;
					this.SendPropertyChanged("SUM_MULCT");
					this.OnSUM_MULCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLID", DbType="Int NOT NULL")]
		public int SLID
		{
			get
			{
				return this._SLID;
			}
			set
			{
				if ((this._SLID != value))
				{
					this.OnSLIDChanging(value);
					this.SendPropertyChanging();
					this._SLID = value;
					this.SendPropertyChanged("SLID");
					this.OnSLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANKID", DbType="Int NOT NULL")]
		public int SANKID
		{
			get
			{
				return this._SANKID;
			}
			set
			{
				if ((this._SANKID != value))
				{
					if (this._SANK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSANKIDChanging(value);
					this.SendPropertyChanging();
					this._SANKID = value;
					this.SendPropertyChanged("SANKID");
					this.OnSANKIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AKT_NUMBER", DbType="Int NOT NULL")]
		public int AKT_NUMBER
		{
			get
			{
				return this._AKT_NUMBER;
			}
			set
			{
				if ((this._AKT_NUMBER != value))
				{
					this.OnAKT_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._AKT_NUMBER = value;
					this.SendPropertyChanged("AKT_NUMBER");
					this.OnAKT_NUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANK_AUTO_ID", DbType="Int")]
		public System.Nullable<int> SANK_AUTO_ID
		{
			get
			{
				return this._SANK_AUTO_ID;
			}
			set
			{
				if ((this._SANK_AUTO_ID != value))
				{
					if (this._SANK_AUTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSANK_AUTO_IDChanging(value);
					this.SendPropertyChanging();
					this._SANK_AUTO_ID = value;
					this.SendPropertyChanged("SANK_AUTO_ID");
					this.OnSANK_AUTO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUM_PR", DbType="Int")]
		public System.Nullable<int> SUM_PR
		{
			get
			{
				return this._SUM_PR;
			}
			set
			{
				if ((this._SUM_PR != value))
				{
					this.OnSUM_PRChanging(value);
					this.SendPropertyChanging();
					this._SUM_PR = value;
					this.SendPropertyChanged("SUM_PR");
					this.OnSUM_PRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUM_UM", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUM_UM
		{
			get
			{
				return this._SUM_UM;
			}
			set
			{
				if ((this._SUM_UM != value))
				{
					this.OnSUM_UMChanging(value);
					this.SendPropertyChanging();
					this._SUM_UM = value;
					this.SendPropertyChanged("SUM_UM");
					this.OnSUM_UMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int")]
		public System.Nullable<int> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					if (this._PACIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COD_PU_TS", DbType="NVarChar(20)")]
		public string COD_PU_TS
		{
			get
			{
				return this._COD_PU_TS;
			}
			set
			{
				if ((this._COD_PU_TS != value))
				{
					this.OnCOD_PU_TSChanging(value);
					this.SendPropertyChanging();
					this._COD_PU_TS = value;
					this.SendPropertyChanged("COD_PU_TS");
					this.OnCOD_PU_TSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EKMP_TYPE_DB_AKT_EKMP_TBL", Storage="_EKMP_TYPE_DB", ThisKey="EKMP_TYPE", OtherKey="Id", IsForeignKey=true)]
		public EKMP_TYPE_DB EKMP_TYPE_DB
		{
			get
			{
				return this._EKMP_TYPE_DB.Entity;
			}
			set
			{
				EKMP_TYPE_DB previousValue = this._EKMP_TYPE_DB.Entity;
				if (((previousValue != value) 
							|| (this._EKMP_TYPE_DB.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EKMP_TYPE_DB.Entity = null;
						previousValue.AKT_EKMP_TBL.Remove(this);
					}
					this._EKMP_TYPE_DB.Entity = value;
					if ((value != null))
					{
						value.AKT_EKMP_TBL.Add(this);
						this._EKMP_TYPE = value.Id;
					}
					else
					{
						this._EKMP_TYPE = default(Nullable<int>);
					}
					this.SendPropertyChanged("EKMP_TYPE_DB");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExpertsDB_AKT_EKMP_TBL", Storage="_ExpertsDB", ThisKey="USERID", OtherKey="Id", IsForeignKey=true)]
		public ExpertsDB ExpertsDB
		{
			get
			{
				return this._ExpertsDB.Entity;
			}
			set
			{
				ExpertsDB previousValue = this._ExpertsDB.Entity;
				if (((previousValue != value) 
							|| (this._ExpertsDB.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExpertsDB.Entity = null;
						previousValue.AKT_EKMP_TBL.Remove(this);
					}
					this._ExpertsDB.Entity = value;
					if ((value != null))
					{
						value.AKT_EKMP_TBL.Add(this);
						this._USERID = value.Id;
					}
					else
					{
						this._USERID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExpertsDB");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F014_AKT_EKMP_TBL", Storage="_F014", ThisKey="COD_PU", OtherKey="Osn", IsForeignKey=true)]
		public F014 F014
		{
			get
			{
				return this._F014.Entity;
			}
			set
			{
				F014 previousValue = this._F014.Entity;
				if (((previousValue != value) 
							|| (this._F014.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F014.Entity = null;
						previousValue.AKT_EKMP_TBL.Remove(this);
					}
					this._F014.Entity = value;
					if ((value != null))
					{
						value.AKT_EKMP_TBL.Add(this);
						this._COD_PU = value.Osn;
					}
					else
					{
						this._COD_PU = default(string);
					}
					this.SendPropertyChanged("F014");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANK_AKT_EKMP_TBL", Storage="_SANK", ThisKey="SANKID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SANK SANK
		{
			get
			{
				return this._SANK.Entity;
			}
			set
			{
				SANK previousValue = this._SANK.Entity;
				if (((previousValue != value) 
							|| (this._SANK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANK.Entity = null;
						previousValue.AKT_EKMP_TBL.Remove(this);
					}
					this._SANK.Entity = value;
					if ((value != null))
					{
						value.AKT_EKMP_TBL.Add(this);
						this._SANKID = value.ID;
					}
					else
					{
						this._SANKID = default(int);
					}
					this.SendPropertyChanged("SANK");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANK_AUTO_AKT_EKMP_TBL", Storage="_SANK_AUTO", ThisKey="SANK_AUTO_ID", OtherKey="ID", IsForeignKey=true)]
		public SANK_AUTO SANK_AUTO
		{
			get
			{
				return this._SANK_AUTO.Entity;
			}
			set
			{
				SANK_AUTO previousValue = this._SANK_AUTO.Entity;
				if (((previousValue != value) 
							|| (this._SANK_AUTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANK_AUTO.Entity = null;
						previousValue.AKT_EKMP_TBL.Remove(this);
					}
					this._SANK_AUTO.Entity = value;
					if ((value != null))
					{
						value.AKT_EKMP_TBL.Add(this);
						this._SANK_AUTO_ID = value.ID;
					}
					else
					{
						this._SANK_AUTO_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SANK_AUTO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENT_AKT_EKMP_TBL", Storage="_PACIENT", ThisKey="PID", OtherKey="ID", IsForeignKey=true)]
		public PACIENT PACIENT
		{
			get
			{
				return this._PACIENT.Entity;
			}
			set
			{
				PACIENT previousValue = this._PACIENT.Entity;
				if (((previousValue != value) 
							|| (this._PACIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENT.Entity = null;
						previousValue.AKT_EKMP_TBL.Remove(this);
					}
					this._PACIENT.Entity = value;
					if ((value != null))
					{
						value.AKT_EKMP_TBL.Add(this);
						this._PID = value.ID;
					}
					else
					{
						this._PID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PACIENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AKT_MEE")]
	public partial class AKT_MEE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _AKT_DATE;
		
		private string _AKT_NAME;
		
		private string _AKT_COMENT;
		
		private string _NameWithID;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAKT_DATEChanging(System.DateTime value);
    partial void OnAKT_DATEChanged();
    partial void OnAKT_NAMEChanging(string value);
    partial void OnAKT_NAMEChanged();
    partial void OnAKT_COMENTChanging(string value);
    partial void OnAKT_COMENTChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public AKT_MEE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AKT_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime AKT_DATE
		{
			get
			{
				return this._AKT_DATE;
			}
			set
			{
				if ((this._AKT_DATE != value))
				{
					this.OnAKT_DATEChanging(value);
					this.SendPropertyChanging();
					this._AKT_DATE = value;
					this.SendPropertyChanged("AKT_DATE");
					this.OnAKT_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AKT_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AKT_NAME
		{
			get
			{
				return this._AKT_NAME;
			}
			set
			{
				if ((this._AKT_NAME != value))
				{
					this.OnAKT_NAMEChanging(value);
					this.SendPropertyChanging();
					this._AKT_NAME = value;
					this.SendPropertyChanged("AKT_NAME");
					this.OnAKT_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AKT_COMENT", DbType="VarChar(150)")]
		public string AKT_COMENT
		{
			get
			{
				return this._AKT_COMENT;
			}
			set
			{
				if ((this._AKT_COMENT != value))
				{
					this.OnAKT_COMENTChanging(value);
					this.SendPropertyChanging();
					this._AKT_COMENT = value;
					this.SendPropertyChanged("AKT_COMENT");
					this.OnAKT_COMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="VarChar(83)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AKT_MEE_TBL")]
	public partial class AKT_MEE_TBL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _AKT_DATE;
		
		private string _USERID;
		
		private string _SMONAME;
		
		private string _MONAME;
		
		private string _SCHET_NUM;
		
		private string _POLIS_NUM;
		
		private string _CARD_NUM;
		
		private string _DS1;
		
		private string _DS2;
		
		private System.Nullable<System.DateTime> _PERIOD1;
		
		private System.Nullable<System.DateTime> _PERIOD2;
		
		private System.Nullable<decimal> _SUMV;
		
		private System.Nullable<decimal> _BOL_DLIT;
		
		private string _DOCT;
		
		private string _DOC_CHECKED;
		
		private string _ZAKL;
		
		private string _COD_PU;
		
		private System.Nullable<decimal> _SUMP;
		
		private System.Nullable<decimal> _SUMNP;
		
		private int _SLID;
		
		private int _SANKID;
		
		private int _AKT_NUMBER;
		
		private System.Nullable<int> _SANK_AUTO_ID;
		
		private System.Nullable<int> _SUM_PR;
		
		private System.Nullable<decimal> _SUM_UM;
		
		private System.Nullable<decimal> _SUM_MULCT;
		
		private System.Nullable<int> _PID;
		
		private string _COD_PU_TS;
		
		private EntityRef<F014> _F014;
		
		private EntityRef<SANK> _SANK;
		
		private EntityRef<SANK_AUTO> _SANK_AUTO;
		
		private EntityRef<PACIENT> _PACIENT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAKT_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnAKT_DATEChanged();
    partial void OnUSERIDChanging(string value);
    partial void OnUSERIDChanged();
    partial void OnSMONAMEChanging(string value);
    partial void OnSMONAMEChanged();
    partial void OnMONAMEChanging(string value);
    partial void OnMONAMEChanged();
    partial void OnSCHET_NUMChanging(string value);
    partial void OnSCHET_NUMChanged();
    partial void OnPOLIS_NUMChanging(string value);
    partial void OnPOLIS_NUMChanged();
    partial void OnCARD_NUMChanging(string value);
    partial void OnCARD_NUMChanged();
    partial void OnDS1Changing(string value);
    partial void OnDS1Changed();
    partial void OnDS2Changing(string value);
    partial void OnDS2Changed();
    partial void OnPERIOD1Changing(System.Nullable<System.DateTime> value);
    partial void OnPERIOD1Changed();
    partial void OnPERIOD2Changing(System.Nullable<System.DateTime> value);
    partial void OnPERIOD2Changed();
    partial void OnSUMVChanging(System.Nullable<decimal> value);
    partial void OnSUMVChanged();
    partial void OnBOL_DLITChanging(System.Nullable<decimal> value);
    partial void OnBOL_DLITChanged();
    partial void OnDOCTChanging(string value);
    partial void OnDOCTChanged();
    partial void OnDOC_CHECKEDChanging(string value);
    partial void OnDOC_CHECKEDChanged();
    partial void OnZAKLChanging(string value);
    partial void OnZAKLChanged();
    partial void OnCOD_PUChanging(string value);
    partial void OnCOD_PUChanged();
    partial void OnSUMPChanging(System.Nullable<decimal> value);
    partial void OnSUMPChanged();
    partial void OnSUMNPChanging(System.Nullable<decimal> value);
    partial void OnSUMNPChanged();
    partial void OnSLIDChanging(int value);
    partial void OnSLIDChanged();
    partial void OnSANKIDChanging(int value);
    partial void OnSANKIDChanged();
    partial void OnAKT_NUMBERChanging(int value);
    partial void OnAKT_NUMBERChanged();
    partial void OnSANK_AUTO_IDChanging(System.Nullable<int> value);
    partial void OnSANK_AUTO_IDChanged();
    partial void OnSUM_PRChanging(System.Nullable<int> value);
    partial void OnSUM_PRChanged();
    partial void OnSUM_UMChanging(System.Nullable<decimal> value);
    partial void OnSUM_UMChanged();
    partial void OnSUM_MULCTChanging(System.Nullable<decimal> value);
    partial void OnSUM_MULCTChanged();
    partial void OnPIDChanging(System.Nullable<int> value);
    partial void OnPIDChanged();
    partial void OnCOD_PU_TSChanging(string value);
    partial void OnCOD_PU_TSChanged();
    #endregion
		
		public AKT_MEE_TBL()
		{
			this._F014 = default(EntityRef<F014>);
			this._SANK = default(EntityRef<SANK>);
			this._SANK_AUTO = default(EntityRef<SANK_AUTO>);
			this._PACIENT = default(EntityRef<PACIENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AKT_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> AKT_DATE
		{
			get
			{
				return this._AKT_DATE;
			}
			set
			{
				if ((this._AKT_DATE != value))
				{
					this.OnAKT_DATEChanging(value);
					this.SendPropertyChanging();
					this._AKT_DATE = value;
					this.SendPropertyChanged("AKT_DATE");
					this.OnAKT_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="VarChar(120)")]
		public string USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMONAME", DbType="NVarChar(75)")]
		public string SMONAME
		{
			get
			{
				return this._SMONAME;
			}
			set
			{
				if ((this._SMONAME != value))
				{
					this.OnSMONAMEChanging(value);
					this.SendPropertyChanging();
					this._SMONAME = value;
					this.SendPropertyChanged("SMONAME");
					this.OnSMONAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MONAME", DbType="NVarChar(250)")]
		public string MONAME
		{
			get
			{
				return this._MONAME;
			}
			set
			{
				if ((this._MONAME != value))
				{
					this.OnMONAMEChanging(value);
					this.SendPropertyChanging();
					this._MONAME = value;
					this.SendPropertyChanged("MONAME");
					this.OnMONAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHET_NUM", DbType="NVarChar(50)")]
		public string SCHET_NUM
		{
			get
			{
				return this._SCHET_NUM;
			}
			set
			{
				if ((this._SCHET_NUM != value))
				{
					this.OnSCHET_NUMChanging(value);
					this.SendPropertyChanging();
					this._SCHET_NUM = value;
					this.SendPropertyChanged("SCHET_NUM");
					this.OnSCHET_NUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POLIS_NUM", DbType="NVarChar(400)")]
		public string POLIS_NUM
		{
			get
			{
				return this._POLIS_NUM;
			}
			set
			{
				if ((this._POLIS_NUM != value))
				{
					this.OnPOLIS_NUMChanging(value);
					this.SendPropertyChanging();
					this._POLIS_NUM = value;
					this.SendPropertyChanged("POLIS_NUM");
					this.OnPOLIS_NUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CARD_NUM", DbType="NVarChar(400)")]
		public string CARD_NUM
		{
			get
			{
				return this._CARD_NUM;
			}
			set
			{
				if ((this._CARD_NUM != value))
				{
					this.OnCARD_NUMChanging(value);
					this.SendPropertyChanging();
					this._CARD_NUM = value;
					this.SendPropertyChanged("CARD_NUM");
					this.OnCARD_NUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS1", DbType="NVarChar(200)")]
		public string DS1
		{
			get
			{
				return this._DS1;
			}
			set
			{
				if ((this._DS1 != value))
				{
					this.OnDS1Changing(value);
					this.SendPropertyChanging();
					this._DS1 = value;
					this.SendPropertyChanged("DS1");
					this.OnDS1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS2", DbType="NVarChar(200)")]
		public string DS2
		{
			get
			{
				return this._DS2;
			}
			set
			{
				if ((this._DS2 != value))
				{
					this.OnDS2Changing(value);
					this.SendPropertyChanging();
					this._DS2 = value;
					this.SendPropertyChanged("DS2");
					this.OnDS2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERIOD1", DbType="DateTime")]
		public System.Nullable<System.DateTime> PERIOD1
		{
			get
			{
				return this._PERIOD1;
			}
			set
			{
				if ((this._PERIOD1 != value))
				{
					this.OnPERIOD1Changing(value);
					this.SendPropertyChanging();
					this._PERIOD1 = value;
					this.SendPropertyChanged("PERIOD1");
					this.OnPERIOD1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERIOD2", DbType="DateTime")]
		public System.Nullable<System.DateTime> PERIOD2
		{
			get
			{
				return this._PERIOD2;
			}
			set
			{
				if ((this._PERIOD2 != value))
				{
					this.OnPERIOD2Changing(value);
					this.SendPropertyChanging();
					this._PERIOD2 = value;
					this.SendPropertyChanged("PERIOD2");
					this.OnPERIOD2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUMV", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUMV
		{
			get
			{
				return this._SUMV;
			}
			set
			{
				if ((this._SUMV != value))
				{
					this.OnSUMVChanging(value);
					this.SendPropertyChanging();
					this._SUMV = value;
					this.SendPropertyChanged("SUMV");
					this.OnSUMVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOL_DLIT", DbType="Decimal(5,0)")]
		public System.Nullable<decimal> BOL_DLIT
		{
			get
			{
				return this._BOL_DLIT;
			}
			set
			{
				if ((this._BOL_DLIT != value))
				{
					this.OnBOL_DLITChanging(value);
					this.SendPropertyChanging();
					this._BOL_DLIT = value;
					this.SendPropertyChanged("BOL_DLIT");
					this.OnBOL_DLITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCT", DbType="NVarChar(150)")]
		public string DOCT
		{
			get
			{
				return this._DOCT;
			}
			set
			{
				if ((this._DOCT != value))
				{
					this.OnDOCTChanging(value);
					this.SendPropertyChanging();
					this._DOCT = value;
					this.SendPropertyChanged("DOCT");
					this.OnDOCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOC_CHECKED", DbType="NVarChar(300)")]
		public string DOC_CHECKED
		{
			get
			{
				return this._DOC_CHECKED;
			}
			set
			{
				if ((this._DOC_CHECKED != value))
				{
					this.OnDOC_CHECKEDChanging(value);
					this.SendPropertyChanging();
					this._DOC_CHECKED = value;
					this.SendPropertyChanged("DOC_CHECKED");
					this.OnDOC_CHECKEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZAKL", DbType="NVarChar(1000)")]
		public string ZAKL
		{
			get
			{
				return this._ZAKL;
			}
			set
			{
				if ((this._ZAKL != value))
				{
					this.OnZAKLChanging(value);
					this.SendPropertyChanging();
					this._ZAKL = value;
					this.SendPropertyChanged("ZAKL");
					this.OnZAKLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COD_PU", DbType="NVarChar(20)")]
		public string COD_PU
		{
			get
			{
				return this._COD_PU;
			}
			set
			{
				if ((this._COD_PU != value))
				{
					if (this._F014.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOD_PUChanging(value);
					this.SendPropertyChanging();
					this._COD_PU = value;
					this.SendPropertyChanged("COD_PU");
					this.OnCOD_PUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUMP", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUMP
		{
			get
			{
				return this._SUMP;
			}
			set
			{
				if ((this._SUMP != value))
				{
					this.OnSUMPChanging(value);
					this.SendPropertyChanging();
					this._SUMP = value;
					this.SendPropertyChanged("SUMP");
					this.OnSUMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUMNP", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUMNP
		{
			get
			{
				return this._SUMNP;
			}
			set
			{
				if ((this._SUMNP != value))
				{
					this.OnSUMNPChanging(value);
					this.SendPropertyChanging();
					this._SUMNP = value;
					this.SendPropertyChanged("SUMNP");
					this.OnSUMNPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLID", DbType="Int NOT NULL")]
		public int SLID
		{
			get
			{
				return this._SLID;
			}
			set
			{
				if ((this._SLID != value))
				{
					this.OnSLIDChanging(value);
					this.SendPropertyChanging();
					this._SLID = value;
					this.SendPropertyChanged("SLID");
					this.OnSLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANKID", DbType="Int NOT NULL")]
		public int SANKID
		{
			get
			{
				return this._SANKID;
			}
			set
			{
				if ((this._SANKID != value))
				{
					if (this._SANK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSANKIDChanging(value);
					this.SendPropertyChanging();
					this._SANKID = value;
					this.SendPropertyChanged("SANKID");
					this.OnSANKIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AKT_NUMBER", DbType="Int NOT NULL")]
		public int AKT_NUMBER
		{
			get
			{
				return this._AKT_NUMBER;
			}
			set
			{
				if ((this._AKT_NUMBER != value))
				{
					this.OnAKT_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._AKT_NUMBER = value;
					this.SendPropertyChanged("AKT_NUMBER");
					this.OnAKT_NUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANK_AUTO_ID", DbType="Int")]
		public System.Nullable<int> SANK_AUTO_ID
		{
			get
			{
				return this._SANK_AUTO_ID;
			}
			set
			{
				if ((this._SANK_AUTO_ID != value))
				{
					if (this._SANK_AUTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSANK_AUTO_IDChanging(value);
					this.SendPropertyChanging();
					this._SANK_AUTO_ID = value;
					this.SendPropertyChanged("SANK_AUTO_ID");
					this.OnSANK_AUTO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUM_PR", DbType="Int")]
		public System.Nullable<int> SUM_PR
		{
			get
			{
				return this._SUM_PR;
			}
			set
			{
				if ((this._SUM_PR != value))
				{
					this.OnSUM_PRChanging(value);
					this.SendPropertyChanging();
					this._SUM_PR = value;
					this.SendPropertyChanged("SUM_PR");
					this.OnSUM_PRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUM_UM", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUM_UM
		{
			get
			{
				return this._SUM_UM;
			}
			set
			{
				if ((this._SUM_UM != value))
				{
					this.OnSUM_UMChanging(value);
					this.SendPropertyChanging();
					this._SUM_UM = value;
					this.SendPropertyChanged("SUM_UM");
					this.OnSUM_UMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUM_MULCT", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUM_MULCT
		{
			get
			{
				return this._SUM_MULCT;
			}
			set
			{
				if ((this._SUM_MULCT != value))
				{
					this.OnSUM_MULCTChanging(value);
					this.SendPropertyChanging();
					this._SUM_MULCT = value;
					this.SendPropertyChanged("SUM_MULCT");
					this.OnSUM_MULCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int")]
		public System.Nullable<int> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					if (this._PACIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COD_PU_TS", DbType="NVarChar(20)")]
		public string COD_PU_TS
		{
			get
			{
				return this._COD_PU_TS;
			}
			set
			{
				if ((this._COD_PU_TS != value))
				{
					this.OnCOD_PU_TSChanging(value);
					this.SendPropertyChanging();
					this._COD_PU_TS = value;
					this.SendPropertyChanged("COD_PU_TS");
					this.OnCOD_PU_TSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F014_AKT_MEE_TBL", Storage="_F014", ThisKey="COD_PU", OtherKey="Osn", IsForeignKey=true)]
		public F014 F014
		{
			get
			{
				return this._F014.Entity;
			}
			set
			{
				F014 previousValue = this._F014.Entity;
				if (((previousValue != value) 
							|| (this._F014.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F014.Entity = null;
						previousValue.AKT_MEE_TBL.Remove(this);
					}
					this._F014.Entity = value;
					if ((value != null))
					{
						value.AKT_MEE_TBL.Add(this);
						this._COD_PU = value.Osn;
					}
					else
					{
						this._COD_PU = default(string);
					}
					this.SendPropertyChanged("F014");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANK_AKT_MEE_TBL", Storage="_SANK", ThisKey="SANKID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SANK SANK
		{
			get
			{
				return this._SANK.Entity;
			}
			set
			{
				SANK previousValue = this._SANK.Entity;
				if (((previousValue != value) 
							|| (this._SANK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANK.Entity = null;
						previousValue.AKT_MEE_TBL.Remove(this);
					}
					this._SANK.Entity = value;
					if ((value != null))
					{
						value.AKT_MEE_TBL.Add(this);
						this._SANKID = value.ID;
					}
					else
					{
						this._SANKID = default(int);
					}
					this.SendPropertyChanged("SANK");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANK_AUTO_AKT_MEE_TBL", Storage="_SANK_AUTO", ThisKey="SANK_AUTO_ID", OtherKey="ID", IsForeignKey=true)]
		public SANK_AUTO SANK_AUTO
		{
			get
			{
				return this._SANK_AUTO.Entity;
			}
			set
			{
				SANK_AUTO previousValue = this._SANK_AUTO.Entity;
				if (((previousValue != value) 
							|| (this._SANK_AUTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANK_AUTO.Entity = null;
						previousValue.AKT_MEE_TBL.Remove(this);
					}
					this._SANK_AUTO.Entity = value;
					if ((value != null))
					{
						value.AKT_MEE_TBL.Add(this);
						this._SANK_AUTO_ID = value.ID;
					}
					else
					{
						this._SANK_AUTO_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SANK_AUTO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENT_AKT_MEE_TBL", Storage="_PACIENT", ThisKey="PID", OtherKey="ID", IsForeignKey=true)]
		public PACIENT PACIENT
		{
			get
			{
				return this._PACIENT.Entity;
			}
			set
			{
				PACIENT previousValue = this._PACIENT.Entity;
				if (((previousValue != value) 
							|| (this._PACIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENT.Entity = null;
						previousValue.AKT_MEE_TBL.Remove(this);
					}
					this._PACIENT.Entity = value;
					if ((value != null))
					{
						value.AKT_MEE_TBL.Add(this);
						this._PID = value.ID;
					}
					else
					{
						this._PID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PACIENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AmbulanceMKB")]
	public partial class AmbulanceMKB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DS;
		
		private int _SluchType;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDSChanging(string value);
    partial void OnDSChanged();
    partial void OnSluchTypeChanging(int value);
    partial void OnSluchTypeChanged();
    #endregion
		
		public AmbulanceMKB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string DS
		{
			get
			{
				return this._DS;
			}
			set
			{
				if ((this._DS != value))
				{
					this.OnDSChanging(value);
					this.SendPropertyChanging();
					this._DS = value;
					this.SendPropertyChanged("DS");
					this.OnDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SluchType", DbType="Int NOT NULL")]
		public int SluchType
		{
			get
			{
				return this._SluchType;
			}
			set
			{
				if ((this._SluchType != value))
				{
					this.OnSluchTypeChanging(value);
					this.SendPropertyChanging();
					this._SluchType = value;
					this.SendPropertyChanged("SluchType");
					this.OnSluchTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttachedDoctorSpr")]
	public partial class AttachedDoctorSpr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FAM;
		
		private string _IM;
		
		private string _OT;
		
		private System.Nullable<System.DateTime> _DR;
		
		private string _SNILS;
		
		private System.Nullable<int> _PROFIL;
		
		private string _NameWithID;
		
		private EntityRef<V002> _V002;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFAMChanging(string value);
    partial void OnFAMChanged();
    partial void OnIMChanging(string value);
    partial void OnIMChanged();
    partial void OnOTChanging(string value);
    partial void OnOTChanged();
    partial void OnDRChanging(System.Nullable<System.DateTime> value);
    partial void OnDRChanged();
    partial void OnSNILSChanging(string value);
    partial void OnSNILSChanged();
    partial void OnPROFILChanging(System.Nullable<int> value);
    partial void OnPROFILChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public AttachedDoctorSpr()
		{
			this._V002 = default(EntityRef<V002>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAM", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FAM
		{
			get
			{
				return this._FAM;
			}
			set
			{
				if ((this._FAM != value))
				{
					this.OnFAMChanging(value);
					this.SendPropertyChanging();
					this._FAM = value;
					this.SendPropertyChanged("FAM");
					this.OnFAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IM", DbType="NVarChar(50)")]
		public string IM
		{
			get
			{
				return this._IM;
			}
			set
			{
				if ((this._IM != value))
				{
					this.OnIMChanging(value);
					this.SendPropertyChanging();
					this._IM = value;
					this.SendPropertyChanged("IM");
					this.OnIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT", DbType="NVarChar(50)")]
		public string OT
		{
			get
			{
				return this._OT;
			}
			set
			{
				if ((this._OT != value))
				{
					this.OnOTChanging(value);
					this.SendPropertyChanging();
					this._OT = value;
					this.SendPropertyChanged("OT");
					this.OnOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DR", DbType="DateTime")]
		public System.Nullable<System.DateTime> DR
		{
			get
			{
				return this._DR;
			}
			set
			{
				if ((this._DR != value))
				{
					this.OnDRChanging(value);
					this.SendPropertyChanging();
					this._DR = value;
					this.SendPropertyChanged("DR");
					this.OnDRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNILS", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
		public string SNILS
		{
			get
			{
				return this._SNILS;
			}
			set
			{
				if ((this._SNILS != value))
				{
					this.OnSNILSChanging(value);
					this.SendPropertyChanging();
					this._SNILS = value;
					this.SendPropertyChanged("SNILS");
					this.OnSNILSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROFIL", DbType="Int")]
		public System.Nullable<int> PROFIL
		{
			get
			{
				return this._PROFIL;
			}
			set
			{
				if ((this._PROFIL != value))
				{
					if (this._V002.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPROFILChanging(value);
					this.SendPropertyChanging();
					this._PROFIL = value;
					this.SendPropertyChanged("PROFIL");
					this.OnPROFILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(73)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V002_AttachedDoctorSpr", Storage="_V002", ThisKey="PROFIL", OtherKey="Id", IsForeignKey=true)]
		public V002 V002
		{
			get
			{
				return this._V002.Entity;
			}
			set
			{
				V002 previousValue = this._V002.Entity;
				if (((previousValue != value) 
							|| (this._V002.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V002.Entity = null;
						previousValue.AttachedDoctorSpr.Remove(this);
					}
					this._V002.Entity = value;
					if ((value != null))
					{
						value.AttachedDoctorSpr.Add(this);
						this._PROFIL = value.Id;
					}
					else
					{
						this._PROFIL = default(Nullable<int>);
					}
					this.SendPropertyChanged("V002");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttachedJournalSpr")]
	public partial class AttachedJournalSpr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FAM;
		
		private string _IM;
		
		private string _OT;
		
		private System.Nullable<System.DateTime> _DR;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFAMChanging(string value);
    partial void OnFAMChanged();
    partial void OnIMChanging(string value);
    partial void OnIMChanged();
    partial void OnOTChanging(string value);
    partial void OnOTChanged();
    partial void OnDRChanging(System.Nullable<System.DateTime> value);
    partial void OnDRChanged();
    #endregion
		
		public AttachedJournalSpr()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAM", DbType="NVarChar(50)")]
		public string FAM
		{
			get
			{
				return this._FAM;
			}
			set
			{
				if ((this._FAM != value))
				{
					this.OnFAMChanging(value);
					this.SendPropertyChanging();
					this._FAM = value;
					this.SendPropertyChanged("FAM");
					this.OnFAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IM", DbType="NVarChar(50)")]
		public string IM
		{
			get
			{
				return this._IM;
			}
			set
			{
				if ((this._IM != value))
				{
					this.OnIMChanging(value);
					this.SendPropertyChanging();
					this._IM = value;
					this.SendPropertyChanged("IM");
					this.OnIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT", DbType="NVarChar(50)")]
		public string OT
		{
			get
			{
				return this._OT;
			}
			set
			{
				if ((this._OT != value))
				{
					this.OnOTChanging(value);
					this.SendPropertyChanging();
					this._OT = value;
					this.SendPropertyChanged("OT");
					this.OnOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DR", DbType="DateTime")]
		public System.Nullable<System.DateTime> DR
		{
			get
			{
				return this._DR;
			}
			set
			{
				if ((this._DR != value))
				{
					this.OnDRChanging(value);
					this.SendPropertyChanging();
					this._DR = value;
					this.SendPropertyChanged("DR");
					this.OnDRChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttachedPeopleSpr")]
	public partial class AttachedPeopleSpr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FAM;
		
		private string _IM;
		
		private string _OT;
		
		private System.Nullable<System.DateTime> _DR;
		
		private System.Nullable<int> _W;
		
		private string _MR;
		
		private System.Nullable<int> _TUDL;
		
		private string _NUDL;
		
		private System.Nullable<System.DateTime> _DUDL;
		
		private string _OUDL;
		
		private string _SNILS;
		
		private string _TempID;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFAMChanging(string value);
    partial void OnFAMChanged();
    partial void OnIMChanging(string value);
    partial void OnIMChanged();
    partial void OnOTChanging(string value);
    partial void OnOTChanged();
    partial void OnDRChanging(System.Nullable<System.DateTime> value);
    partial void OnDRChanged();
    partial void OnWChanging(System.Nullable<int> value);
    partial void OnWChanged();
    partial void OnMRChanging(string value);
    partial void OnMRChanged();
    partial void OnTUDLChanging(System.Nullable<int> value);
    partial void OnTUDLChanged();
    partial void OnNUDLChanging(string value);
    partial void OnNUDLChanged();
    partial void OnDUDLChanging(System.Nullable<System.DateTime> value);
    partial void OnDUDLChanged();
    partial void OnOUDLChanging(string value);
    partial void OnOUDLChanged();
    partial void OnSNILSChanging(string value);
    partial void OnSNILSChanged();
    partial void OnTempIDChanging(string value);
    partial void OnTempIDChanged();
    #endregion
		
		public AttachedPeopleSpr()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAM", DbType="NVarChar(50)")]
		public string FAM
		{
			get
			{
				return this._FAM;
			}
			set
			{
				if ((this._FAM != value))
				{
					this.OnFAMChanging(value);
					this.SendPropertyChanging();
					this._FAM = value;
					this.SendPropertyChanged("FAM");
					this.OnFAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IM", DbType="NVarChar(50)")]
		public string IM
		{
			get
			{
				return this._IM;
			}
			set
			{
				if ((this._IM != value))
				{
					this.OnIMChanging(value);
					this.SendPropertyChanging();
					this._IM = value;
					this.SendPropertyChanged("IM");
					this.OnIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT", DbType="NVarChar(50)")]
		public string OT
		{
			get
			{
				return this._OT;
			}
			set
			{
				if ((this._OT != value))
				{
					this.OnOTChanging(value);
					this.SendPropertyChanging();
					this._OT = value;
					this.SendPropertyChanged("OT");
					this.OnOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DR", DbType="DateTime")]
		public System.Nullable<System.DateTime> DR
		{
			get
			{
				return this._DR;
			}
			set
			{
				if ((this._DR != value))
				{
					this.OnDRChanging(value);
					this.SendPropertyChanging();
					this._DR = value;
					this.SendPropertyChanged("DR");
					this.OnDRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_W", DbType="Int")]
		public System.Nullable<int> W
		{
			get
			{
				return this._W;
			}
			set
			{
				if ((this._W != value))
				{
					this.OnWChanging(value);
					this.SendPropertyChanging();
					this._W = value;
					this.SendPropertyChanged("W");
					this.OnWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MR", DbType="NVarChar(100)")]
		public string MR
		{
			get
			{
				return this._MR;
			}
			set
			{
				if ((this._MR != value))
				{
					this.OnMRChanging(value);
					this.SendPropertyChanging();
					this._MR = value;
					this.SendPropertyChanged("MR");
					this.OnMRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TUDL", DbType="Int")]
		public System.Nullable<int> TUDL
		{
			get
			{
				return this._TUDL;
			}
			set
			{
				if ((this._TUDL != value))
				{
					this.OnTUDLChanging(value);
					this.SendPropertyChanging();
					this._TUDL = value;
					this.SendPropertyChanged("TUDL");
					this.OnTUDLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUDL", DbType="NVarChar(40)")]
		public string NUDL
		{
			get
			{
				return this._NUDL;
			}
			set
			{
				if ((this._NUDL != value))
				{
					this.OnNUDLChanging(value);
					this.SendPropertyChanging();
					this._NUDL = value;
					this.SendPropertyChanged("NUDL");
					this.OnNUDLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DUDL", DbType="DateTime")]
		public System.Nullable<System.DateTime> DUDL
		{
			get
			{
				return this._DUDL;
			}
			set
			{
				if ((this._DUDL != value))
				{
					this.OnDUDLChanging(value);
					this.SendPropertyChanging();
					this._DUDL = value;
					this.SendPropertyChanged("DUDL");
					this.OnDUDLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUDL", DbType="NVarChar(200)")]
		public string OUDL
		{
			get
			{
				return this._OUDL;
			}
			set
			{
				if ((this._OUDL != value))
				{
					this.OnOUDLChanging(value);
					this.SendPropertyChanging();
					this._OUDL = value;
					this.SendPropertyChanged("OUDL");
					this.OnOUDLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNILS", DbType="NVarChar(200)")]
		public string SNILS
		{
			get
			{
				return this._SNILS;
			}
			set
			{
				if ((this._SNILS != value))
				{
					this.OnSNILSChanging(value);
					this.SendPropertyChanging();
					this._SNILS = value;
					this.SendPropertyChanged("SNILS");
					this.OnSNILSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempID", DbType="NVarChar(16)")]
		public string TempID
		{
			get
			{
				return this._TempID;
			}
			set
			{
				if ((this._TempID != value))
				{
					this.OnTempIDChanging(value);
					this.SendPropertyChanging();
					this._TempID = value;
					this.SendPropertyChanged("TempID");
					this.OnTempIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CalcAmbTARIF")]
	public partial class CalcAmbTARIF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<decimal> _TARIF1;
		
		private System.Nullable<decimal> _TARIF2;
		
		private System.Nullable<decimal> _TARIF3;
		
		private System.Nullable<decimal> _TARIF4;
		
		private System.Nullable<decimal> _TARIF5;
		
		private System.Nullable<decimal> _TARIF6;
		
		private System.Nullable<decimal> _TARIF7;
		
		private System.Nullable<decimal> _TARIF8;
		
		private System.Nullable<decimal> _TARIF9;
		
		private System.Nullable<decimal> _TARIF10;
		
		private System.Nullable<decimal> _TARIF11;
		
		private System.Nullable<decimal> _TARIF12;
		
		private int _PROFIL;
		
		private System.Nullable<int> _OS_SLUCH;
		
		private int _USL_OK;
		
		private int _IDSP;
		
		private System.DateTime _TBEG;
		
		private System.DateTime _TEND;
		
		private EntityRef<OsobSluchDb> _OsobSluchDb;
		
		private EntityRef<V002> _V002;
		
		private EntityRef<V006> _V006;
		
		private EntityRef<V010> _V010;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTARIF1Changing(System.Nullable<decimal> value);
    partial void OnTARIF1Changed();
    partial void OnTARIF2Changing(System.Nullable<decimal> value);
    partial void OnTARIF2Changed();
    partial void OnTARIF3Changing(System.Nullable<decimal> value);
    partial void OnTARIF3Changed();
    partial void OnTARIF4Changing(System.Nullable<decimal> value);
    partial void OnTARIF4Changed();
    partial void OnTARIF5Changing(System.Nullable<decimal> value);
    partial void OnTARIF5Changed();
    partial void OnTARIF6Changing(System.Nullable<decimal> value);
    partial void OnTARIF6Changed();
    partial void OnTARIF7Changing(System.Nullable<decimal> value);
    partial void OnTARIF7Changed();
    partial void OnTARIF8Changing(System.Nullable<decimal> value);
    partial void OnTARIF8Changed();
    partial void OnTARIF9Changing(System.Nullable<decimal> value);
    partial void OnTARIF9Changed();
    partial void OnTARIF10Changing(System.Nullable<decimal> value);
    partial void OnTARIF10Changed();
    partial void OnTARIF11Changing(System.Nullable<decimal> value);
    partial void OnTARIF11Changed();
    partial void OnTARIF12Changing(System.Nullable<decimal> value);
    partial void OnTARIF12Changed();
    partial void OnPROFILChanging(int value);
    partial void OnPROFILChanged();
    partial void OnOS_SLUCHChanging(System.Nullable<int> value);
    partial void OnOS_SLUCHChanged();
    partial void OnUSL_OKChanging(int value);
    partial void OnUSL_OKChanged();
    partial void OnIDSPChanging(int value);
    partial void OnIDSPChanged();
    partial void OnTBEGChanging(System.DateTime value);
    partial void OnTBEGChanged();
    partial void OnTENDChanging(System.DateTime value);
    partial void OnTENDChanged();
    #endregion
		
		public CalcAmbTARIF()
		{
			this._OsobSluchDb = default(EntityRef<OsobSluchDb>);
			this._V002 = default(EntityRef<V002>);
			this._V006 = default(EntityRef<V006>);
			this._V010 = default(EntityRef<V010>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF1", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TARIF1
		{
			get
			{
				return this._TARIF1;
			}
			set
			{
				if ((this._TARIF1 != value))
				{
					this.OnTARIF1Changing(value);
					this.SendPropertyChanging();
					this._TARIF1 = value;
					this.SendPropertyChanged("TARIF1");
					this.OnTARIF1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF2", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TARIF2
		{
			get
			{
				return this._TARIF2;
			}
			set
			{
				if ((this._TARIF2 != value))
				{
					this.OnTARIF2Changing(value);
					this.SendPropertyChanging();
					this._TARIF2 = value;
					this.SendPropertyChanged("TARIF2");
					this.OnTARIF2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF3", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TARIF3
		{
			get
			{
				return this._TARIF3;
			}
			set
			{
				if ((this._TARIF3 != value))
				{
					this.OnTARIF3Changing(value);
					this.SendPropertyChanging();
					this._TARIF3 = value;
					this.SendPropertyChanged("TARIF3");
					this.OnTARIF3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF4", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TARIF4
		{
			get
			{
				return this._TARIF4;
			}
			set
			{
				if ((this._TARIF4 != value))
				{
					this.OnTARIF4Changing(value);
					this.SendPropertyChanging();
					this._TARIF4 = value;
					this.SendPropertyChanged("TARIF4");
					this.OnTARIF4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF5", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TARIF5
		{
			get
			{
				return this._TARIF5;
			}
			set
			{
				if ((this._TARIF5 != value))
				{
					this.OnTARIF5Changing(value);
					this.SendPropertyChanging();
					this._TARIF5 = value;
					this.SendPropertyChanged("TARIF5");
					this.OnTARIF5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF6", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TARIF6
		{
			get
			{
				return this._TARIF6;
			}
			set
			{
				if ((this._TARIF6 != value))
				{
					this.OnTARIF6Changing(value);
					this.SendPropertyChanging();
					this._TARIF6 = value;
					this.SendPropertyChanged("TARIF6");
					this.OnTARIF6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF7", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TARIF7
		{
			get
			{
				return this._TARIF7;
			}
			set
			{
				if ((this._TARIF7 != value))
				{
					this.OnTARIF7Changing(value);
					this.SendPropertyChanging();
					this._TARIF7 = value;
					this.SendPropertyChanged("TARIF7");
					this.OnTARIF7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF8", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TARIF8
		{
			get
			{
				return this._TARIF8;
			}
			set
			{
				if ((this._TARIF8 != value))
				{
					this.OnTARIF8Changing(value);
					this.SendPropertyChanging();
					this._TARIF8 = value;
					this.SendPropertyChanged("TARIF8");
					this.OnTARIF8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF9", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TARIF9
		{
			get
			{
				return this._TARIF9;
			}
			set
			{
				if ((this._TARIF9 != value))
				{
					this.OnTARIF9Changing(value);
					this.SendPropertyChanging();
					this._TARIF9 = value;
					this.SendPropertyChanged("TARIF9");
					this.OnTARIF9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF10", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TARIF10
		{
			get
			{
				return this._TARIF10;
			}
			set
			{
				if ((this._TARIF10 != value))
				{
					this.OnTARIF10Changing(value);
					this.SendPropertyChanging();
					this._TARIF10 = value;
					this.SendPropertyChanged("TARIF10");
					this.OnTARIF10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF11", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TARIF11
		{
			get
			{
				return this._TARIF11;
			}
			set
			{
				if ((this._TARIF11 != value))
				{
					this.OnTARIF11Changing(value);
					this.SendPropertyChanging();
					this._TARIF11 = value;
					this.SendPropertyChanged("TARIF11");
					this.OnTARIF11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF12", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TARIF12
		{
			get
			{
				return this._TARIF12;
			}
			set
			{
				if ((this._TARIF12 != value))
				{
					this.OnTARIF12Changing(value);
					this.SendPropertyChanging();
					this._TARIF12 = value;
					this.SendPropertyChanged("TARIF12");
					this.OnTARIF12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROFIL", DbType="Int NOT NULL")]
		public int PROFIL
		{
			get
			{
				return this._PROFIL;
			}
			set
			{
				if ((this._PROFIL != value))
				{
					if (this._V002.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPROFILChanging(value);
					this.SendPropertyChanging();
					this._PROFIL = value;
					this.SendPropertyChanged("PROFIL");
					this.OnPROFILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS_SLUCH", DbType="Int")]
		public System.Nullable<int> OS_SLUCH
		{
			get
			{
				return this._OS_SLUCH;
			}
			set
			{
				if ((this._OS_SLUCH != value))
				{
					if (this._OsobSluchDb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOS_SLUCHChanging(value);
					this.SendPropertyChanging();
					this._OS_SLUCH = value;
					this.SendPropertyChanged("OS_SLUCH");
					this.OnOS_SLUCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USL_OK", DbType="Int NOT NULL")]
		public int USL_OK
		{
			get
			{
				return this._USL_OK;
			}
			set
			{
				if ((this._USL_OK != value))
				{
					if (this._V006.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSL_OKChanging(value);
					this.SendPropertyChanging();
					this._USL_OK = value;
					this.SendPropertyChanged("USL_OK");
					this.OnUSL_OKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSP", DbType="Int NOT NULL")]
		public int IDSP
		{
			get
			{
				return this._IDSP;
			}
			set
			{
				if ((this._IDSP != value))
				{
					if (this._V010.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSPChanging(value);
					this.SendPropertyChanging();
					this._IDSP = value;
					this.SendPropertyChanged("IDSP");
					this.OnIDSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TBEG", DbType="DateTime NOT NULL")]
		public System.DateTime TBEG
		{
			get
			{
				return this._TBEG;
			}
			set
			{
				if ((this._TBEG != value))
				{
					this.OnTBEGChanging(value);
					this.SendPropertyChanging();
					this._TBEG = value;
					this.SendPropertyChanged("TBEG");
					this.OnTBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEND", DbType="DateTime NOT NULL")]
		public System.DateTime TEND
		{
			get
			{
				return this._TEND;
			}
			set
			{
				if ((this._TEND != value))
				{
					this.OnTENDChanging(value);
					this.SendPropertyChanging();
					this._TEND = value;
					this.SendPropertyChanged("TEND");
					this.OnTENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OsobSluchDb_CalcAmbTARIF", Storage="_OsobSluchDb", ThisKey="OS_SLUCH", OtherKey="Id", IsForeignKey=true)]
		public OsobSluchDb OsobSluchDb
		{
			get
			{
				return this._OsobSluchDb.Entity;
			}
			set
			{
				OsobSluchDb previousValue = this._OsobSluchDb.Entity;
				if (((previousValue != value) 
							|| (this._OsobSluchDb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OsobSluchDb.Entity = null;
						previousValue.CalcAmbTARIF.Remove(this);
					}
					this._OsobSluchDb.Entity = value;
					if ((value != null))
					{
						value.CalcAmbTARIF.Add(this);
						this._OS_SLUCH = value.Id;
					}
					else
					{
						this._OS_SLUCH = default(Nullable<int>);
					}
					this.SendPropertyChanged("OsobSluchDb");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V002_CalcAmbTARIF", Storage="_V002", ThisKey="PROFIL", OtherKey="Id", IsForeignKey=true)]
		public V002 V002
		{
			get
			{
				return this._V002.Entity;
			}
			set
			{
				V002 previousValue = this._V002.Entity;
				if (((previousValue != value) 
							|| (this._V002.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V002.Entity = null;
						previousValue.CalcAmbTARIF.Remove(this);
					}
					this._V002.Entity = value;
					if ((value != null))
					{
						value.CalcAmbTARIF.Add(this);
						this._PROFIL = value.Id;
					}
					else
					{
						this._PROFIL = default(int);
					}
					this.SendPropertyChanged("V002");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V006_CalcAmbTARIF", Storage="_V006", ThisKey="USL_OK", OtherKey="id", IsForeignKey=true)]
		public V006 V006
		{
			get
			{
				return this._V006.Entity;
			}
			set
			{
				V006 previousValue = this._V006.Entity;
				if (((previousValue != value) 
							|| (this._V006.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V006.Entity = null;
						previousValue.CalcAmbTARIF.Remove(this);
					}
					this._V006.Entity = value;
					if ((value != null))
					{
						value.CalcAmbTARIF.Add(this);
						this._USL_OK = value.id;
					}
					else
					{
						this._USL_OK = default(int);
					}
					this.SendPropertyChanged("V006");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V010_CalcAmbTARIF", Storage="_V010", ThisKey="IDSP", OtherKey="Id", IsForeignKey=true)]
		public V010 V010
		{
			get
			{
				return this._V010.Entity;
			}
			set
			{
				V010 previousValue = this._V010.Entity;
				if (((previousValue != value) 
							|| (this._V010.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V010.Entity = null;
						previousValue.CalcAmbTARIF.Remove(this);
					}
					this._V010.Entity = value;
					if ((value != null))
					{
						value.CalcAmbTARIF.Add(this);
						this._IDSP = value.Id;
					}
					else
					{
						this._IDSP = default(int);
					}
					this.SendPropertyChanged("V010");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CalcMok")]
	public partial class CalcMok : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _KOD_LPU;
		
		private System.Nullable<decimal> _KUS;
		
		private System.Nullable<decimal> _KZMP;
		
		private System.DateTime _DATESTART;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnKOD_LPUChanging(string value);
    partial void OnKOD_LPUChanged();
    partial void OnKUSChanging(System.Nullable<decimal> value);
    partial void OnKUSChanged();
    partial void OnKZMPChanging(System.Nullable<decimal> value);
    partial void OnKZMPChanged();
    partial void OnDATESTARTChanging(System.DateTime value);
    partial void OnDATESTARTChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    #endregion
		
		public CalcMok()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KOD_LPU", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string KOD_LPU
		{
			get
			{
				return this._KOD_LPU;
			}
			set
			{
				if ((this._KOD_LPU != value))
				{
					this.OnKOD_LPUChanging(value);
					this.SendPropertyChanging();
					this._KOD_LPU = value;
					this.SendPropertyChanged("KOD_LPU");
					this.OnKOD_LPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KUS", DbType="Decimal(6,4)")]
		public System.Nullable<decimal> KUS
		{
			get
			{
				return this._KUS;
			}
			set
			{
				if ((this._KUS != value))
				{
					this.OnKUSChanging(value);
					this.SendPropertyChanging();
					this._KUS = value;
					this.SendPropertyChanged("KUS");
					this.OnKUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KZMP", DbType="Decimal(6,4)")]
		public System.Nullable<decimal> KZMP
		{
			get
			{
				return this._KZMP;
			}
			set
			{
				if ((this._KZMP != value))
				{
					this.OnKZMPChanging(value);
					this.SendPropertyChanging();
					this._KZMP = value;
					this.SendPropertyChanged("KZMP");
					this.OnKZMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATESTART", DbType="DateTime NOT NULL")]
		public System.DateTime DATESTART
		{
			get
			{
				return this._DATESTART;
			}
			set
			{
				if ((this._DATESTART != value))
				{
					this.OnDATESTARTChanging(value);
					this.SendPropertyChanging();
					this._DATESTART = value;
					this.SendPropertyChanged("DATESTART");
					this.OnDATESTARTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CalcUprk")]
	public partial class CalcUprk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDKSG;
		
		private decimal _UPR;
		
		private System.DateTime _TBEG;
		
		private System.DateTime _TEND;
		
		private EntityRef<SprKsg> _SprKsg;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDKSGChanging(int value);
    partial void OnIDKSGChanged();
    partial void OnUPRChanging(decimal value);
    partial void OnUPRChanged();
    partial void OnTBEGChanging(System.DateTime value);
    partial void OnTBEGChanged();
    partial void OnTENDChanging(System.DateTime value);
    partial void OnTENDChanged();
    #endregion
		
		public CalcUprk()
		{
			this._SprKsg = default(EntityRef<SprKsg>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKSG", DbType="Int NOT NULL")]
		public int IDKSG
		{
			get
			{
				return this._IDKSG;
			}
			set
			{
				if ((this._IDKSG != value))
				{
					if (this._SprKsg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKSGChanging(value);
					this.SendPropertyChanging();
					this._IDKSG = value;
					this.SendPropertyChanged("IDKSG");
					this.OnIDKSGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPR", DbType="Decimal(6,4) NOT NULL")]
		public decimal UPR
		{
			get
			{
				return this._UPR;
			}
			set
			{
				if ((this._UPR != value))
				{
					this.OnUPRChanging(value);
					this.SendPropertyChanging();
					this._UPR = value;
					this.SendPropertyChanged("UPR");
					this.OnUPRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TBEG", DbType="DateTime NOT NULL")]
		public System.DateTime TBEG
		{
			get
			{
				return this._TBEG;
			}
			set
			{
				if ((this._TBEG != value))
				{
					this.OnTBEGChanging(value);
					this.SendPropertyChanging();
					this._TBEG = value;
					this.SendPropertyChanged("TBEG");
					this.OnTBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEND", DbType="DateTime NOT NULL")]
		public System.DateTime TEND
		{
			get
			{
				return this._TEND;
			}
			set
			{
				if ((this._TEND != value))
				{
					this.OnTENDChanging(value);
					this.SendPropertyChanging();
					this._TEND = value;
					this.SendPropertyChanged("TEND");
					this.OnTENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprKsg_CalcUprk", Storage="_SprKsg", ThisKey="IDKSG", OtherKey="ID", IsForeignKey=true)]
		public SprKsg SprKsg
		{
			get
			{
				return this._SprKsg.Entity;
			}
			set
			{
				SprKsg previousValue = this._SprKsg.Entity;
				if (((previousValue != value) 
							|| (this._SprKsg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SprKsg.Entity = null;
						previousValue.CalcUprk.Remove(this);
					}
					this._SprKsg.Entity = value;
					if ((value != null))
					{
						value.CalcUprk.Add(this);
						this._IDKSG = value.ID;
					}
					else
					{
						this._IDKSG = default(int);
					}
					this.SendPropertyChanged("SprKsg");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CalcVmpTarif")]
	public partial class CalcVmpTarif : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDGR;
		
		private decimal _TARIF;
		
		private System.DateTime _TBEG;
		
		private System.DateTime _TEND;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDGRChanging(int value);
    partial void OnIDGRChanged();
    partial void OnTARIFChanging(decimal value);
    partial void OnTARIFChanged();
    partial void OnTBEGChanging(System.DateTime value);
    partial void OnTBEGChanged();
    partial void OnTENDChanging(System.DateTime value);
    partial void OnTENDChanged();
    #endregion
		
		public CalcVmpTarif()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGR", DbType="Int NOT NULL")]
		public int IDGR
		{
			get
			{
				return this._IDGR;
			}
			set
			{
				if ((this._IDGR != value))
				{
					this.OnIDGRChanging(value);
					this.SendPropertyChanging();
					this._IDGR = value;
					this.SendPropertyChanged("IDGR");
					this.OnIDGRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF", DbType="Decimal(15,2) NOT NULL")]
		public decimal TARIF
		{
			get
			{
				return this._TARIF;
			}
			set
			{
				if ((this._TARIF != value))
				{
					this.OnTARIFChanging(value);
					this.SendPropertyChanging();
					this._TARIF = value;
					this.SendPropertyChanged("TARIF");
					this.OnTARIFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TBEG", DbType="DateTime NOT NULL")]
		public System.DateTime TBEG
		{
			get
			{
				return this._TBEG;
			}
			set
			{
				if ((this._TBEG != value))
				{
					this.OnTBEGChanging(value);
					this.SendPropertyChanging();
					this._TBEG = value;
					this.SendPropertyChanged("TBEG");
					this.OnTBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEND", DbType="DateTime NOT NULL")]
		public System.DateTime TEND
		{
			get
			{
				return this._TEND;
			}
			set
			{
				if ((this._TEND != value))
				{
					this.OnTENDChanging(value);
					this.SendPropertyChanging();
					this._TEND = value;
					this.SendPropertyChanged("TEND");
					this.OnTENDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CalNotKus")]
	public partial class CalNotKus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDKSG;
		
		private System.DateTime _TBEG;
		
		private System.DateTime _TEND;
		
		private EntityRef<SprKsg> _SprKsg;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDKSGChanging(int value);
    partial void OnIDKSGChanged();
    partial void OnTBEGChanging(System.DateTime value);
    partial void OnTBEGChanged();
    partial void OnTENDChanging(System.DateTime value);
    partial void OnTENDChanged();
    #endregion
		
		public CalNotKus()
		{
			this._SprKsg = default(EntityRef<SprKsg>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKSG", DbType="Int NOT NULL")]
		public int IDKSG
		{
			get
			{
				return this._IDKSG;
			}
			set
			{
				if ((this._IDKSG != value))
				{
					if (this._SprKsg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKSGChanging(value);
					this.SendPropertyChanging();
					this._IDKSG = value;
					this.SendPropertyChanged("IDKSG");
					this.OnIDKSGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TBEG", DbType="DateTime NOT NULL")]
		public System.DateTime TBEG
		{
			get
			{
				return this._TBEG;
			}
			set
			{
				if ((this._TBEG != value))
				{
					this.OnTBEGChanging(value);
					this.SendPropertyChanging();
					this._TBEG = value;
					this.SendPropertyChanged("TBEG");
					this.OnTBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEND", DbType="DateTime NOT NULL")]
		public System.DateTime TEND
		{
			get
			{
				return this._TEND;
			}
			set
			{
				if ((this._TEND != value))
				{
					this.OnTENDChanging(value);
					this.SendPropertyChanging();
					this._TEND = value;
					this.SendPropertyChanged("TEND");
					this.OnTENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprKsg_CalNotKus", Storage="_SprKsg", ThisKey="IDKSG", OtherKey="ID", IsForeignKey=true)]
		public SprKsg SprKsg
		{
			get
			{
				return this._SprKsg.Entity;
			}
			set
			{
				SprKsg previousValue = this._SprKsg.Entity;
				if (((previousValue != value) 
							|| (this._SprKsg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SprKsg.Entity = null;
						previousValue.CalNotKus.Remove(this);
					}
					this._SprKsg.Entity = value;
					if ((value != null))
					{
						value.CalNotKus.Add(this);
						this._IDKSG = value.ID;
					}
					else
					{
						this._IDKSG = default(int);
					}
					this.SendPropertyChanged("SprKsg");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DbVersion")]
	public partial class DbVersion
	{
		
		private System.Nullable<int> _Version;
		
		public DbVersion()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dd_vd")]
	public partial class dd_vd
	{
		
		private int _Column1;
		
		private string _Column2;
		
		private System.Nullable<decimal> _s1;
		
		private System.Nullable<int> _c2;
		
		private System.Nullable<decimal> _s2;
		
		private System.Nullable<int> _c3;
		
		private System.Nullable<decimal> _s3;
		
		private System.Nullable<decimal> _s4;
		
		private System.Nullable<int> _c5;
		
		private System.Nullable<decimal> _s5;
		
		private System.Nullable<int> _c6;
		
		private System.Nullable<decimal> _s6;
		
		private System.Nullable<int> _c7;
		
		private System.Nullable<int> _c8;
		
		private System.Nullable<int> _c9;
		
		private System.Nullable<int> _c10;
		
		private System.Nullable<int> _c11;
		
		private System.Nullable<int> _c12;
		
		public dd_vd()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Column1", DbType="Int NOT NULL")]
		public int Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Column2", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Column2
		{
			get
			{
				return this._Column2;
			}
			set
			{
				if ((this._Column2 != value))
				{
					this._Column2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s1", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> s1
		{
			get
			{
				return this._s1;
			}
			set
			{
				if ((this._s1 != value))
				{
					this._s1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c2", DbType="Int")]
		public System.Nullable<int> c2
		{
			get
			{
				return this._c2;
			}
			set
			{
				if ((this._c2 != value))
				{
					this._c2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s2", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> s2
		{
			get
			{
				return this._s2;
			}
			set
			{
				if ((this._s2 != value))
				{
					this._s2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c3", DbType="Int")]
		public System.Nullable<int> c3
		{
			get
			{
				return this._c3;
			}
			set
			{
				if ((this._c3 != value))
				{
					this._c3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s3", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> s3
		{
			get
			{
				return this._s3;
			}
			set
			{
				if ((this._s3 != value))
				{
					this._s3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s4", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> s4
		{
			get
			{
				return this._s4;
			}
			set
			{
				if ((this._s4 != value))
				{
					this._s4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c5", DbType="Int")]
		public System.Nullable<int> c5
		{
			get
			{
				return this._c5;
			}
			set
			{
				if ((this._c5 != value))
				{
					this._c5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s5", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> s5
		{
			get
			{
				return this._s5;
			}
			set
			{
				if ((this._s5 != value))
				{
					this._s5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c6", DbType="Int")]
		public System.Nullable<int> c6
		{
			get
			{
				return this._c6;
			}
			set
			{
				if ((this._c6 != value))
				{
					this._c6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s6", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> s6
		{
			get
			{
				return this._s6;
			}
			set
			{
				if ((this._s6 != value))
				{
					this._s6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c7", DbType="Int")]
		public System.Nullable<int> c7
		{
			get
			{
				return this._c7;
			}
			set
			{
				if ((this._c7 != value))
				{
					this._c7 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c8", DbType="Int")]
		public System.Nullable<int> c8
		{
			get
			{
				return this._c8;
			}
			set
			{
				if ((this._c8 != value))
				{
					this._c8 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c9", DbType="Int")]
		public System.Nullable<int> c9
		{
			get
			{
				return this._c9;
			}
			set
			{
				if ((this._c9 != value))
				{
					this._c9 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c10", DbType="Int")]
		public System.Nullable<int> c10
		{
			get
			{
				return this._c10;
			}
			set
			{
				if ((this._c10 != value))
				{
					this._c10 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c11", DbType="Int")]
		public System.Nullable<int> c11
		{
			get
			{
				return this._c11;
			}
			set
			{
				if ((this._c11 != value))
				{
					this._c11 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c12", DbType="Int")]
		public System.Nullable<int> c12
		{
			get
			{
				return this._c12;
			}
			set
			{
				if ((this._c12 != value))
				{
					this._c12 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetProfilDb")]
	public partial class DetProfilDb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Id;
		
		private string _Name;
		
		private string _NameWithID;
		
		private EntitySet<SLUCH> _SLUCH;
		
		private EntitySet<USL> _USL;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(byte value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public DetProfilDb()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			this._USL = new EntitySet<USL>(new Action<USL>(this.attach_USL), new Action<USL>(this.detach_USL));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(10)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NChar(15)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DetProfilDb_SLUCH", Storage="_SLUCH", ThisKey="Id", OtherKey="DET")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DetProfilDb_USL", Storage="_USL", ThisKey="Id", OtherKey="DET")]
		public EntitySet<USL> USL
		{
			get
			{
				return this._USL;
			}
			set
			{
				this._USL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.DetProfilDb = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.DetProfilDb = null;
		}
		
		private void attach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.DetProfilDb = this;
		}
		
		private void detach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.DetProfilDb = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DISP_SPR")]
	public partial class DISP_SPR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private string _USL;
		
		private System.Nullable<int> _PR;
		
		private System.Nullable<int> _SP;
		
		private string _IDDISP;
		
		private string _NAME_K;
		
		private System.Nullable<int> _VOZR;
		
		private System.Nullable<int> _POL;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnUSLChanging(string value);
    partial void OnUSLChanged();
    partial void OnPRChanging(System.Nullable<int> value);
    partial void OnPRChanged();
    partial void OnSPChanging(System.Nullable<int> value);
    partial void OnSPChanged();
    partial void OnIDDISPChanging(string value);
    partial void OnIDDISPChanged();
    partial void OnNAME_KChanging(string value);
    partial void OnNAME_KChanged();
    partial void OnVOZRChanging(System.Nullable<int> value);
    partial void OnVOZRChanged();
    partial void OnPOLChanging(System.Nullable<int> value);
    partial void OnPOLChanged();
    #endregion
		
		public DISP_SPR()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(255)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USL", DbType="NVarChar(255)")]
		public string USL
		{
			get
			{
				return this._USL;
			}
			set
			{
				if ((this._USL != value))
				{
					this.OnUSLChanging(value);
					this.SendPropertyChanging();
					this._USL = value;
					this.SendPropertyChanged("USL");
					this.OnUSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR", DbType="Int")]
		public System.Nullable<int> PR
		{
			get
			{
				return this._PR;
			}
			set
			{
				if ((this._PR != value))
				{
					this.OnPRChanging(value);
					this.SendPropertyChanging();
					this._PR = value;
					this.SendPropertyChanged("PR");
					this.OnPRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SP", DbType="Int")]
		public System.Nullable<int> SP
		{
			get
			{
				return this._SP;
			}
			set
			{
				if ((this._SP != value))
				{
					this.OnSPChanging(value);
					this.SendPropertyChanging();
					this._SP = value;
					this.SendPropertyChanged("SP");
					this.OnSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDISP", DbType="NVarChar(13) NOT NULL", CanBeNull=false)]
		public string IDDISP
		{
			get
			{
				return this._IDDISP;
			}
			set
			{
				if ((this._IDDISP != value))
				{
					this.OnIDDISPChanging(value);
					this.SendPropertyChanging();
					this._IDDISP = value;
					this.SendPropertyChanged("IDDISP");
					this.OnIDDISPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_K", DbType="NVarChar(255)")]
		public string NAME_K
		{
			get
			{
				return this._NAME_K;
			}
			set
			{
				if ((this._NAME_K != value))
				{
					this.OnNAME_KChanging(value);
					this.SendPropertyChanging();
					this._NAME_K = value;
					this.SendPropertyChanged("NAME_K");
					this.OnNAME_KChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VOZR", DbType="Int")]
		public System.Nullable<int> VOZR
		{
			get
			{
				return this._VOZR;
			}
			set
			{
				if ((this._VOZR != value))
				{
					this.OnVOZRChanging(value);
					this.SendPropertyChanging();
					this._VOZR = value;
					this.SendPropertyChanged("VOZR");
					this.OnVOZRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POL", DbType="Int")]
		public System.Nullable<int> POL
		{
			get
			{
				return this._POL;
			}
			set
			{
				if ((this._POL != value))
				{
					this.OnPOLChanging(value);
					this.SendPropertyChanging();
					this._POL = value;
					this.SendPropertyChanged("POL");
					this.OnPOLChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorBd")]
	public partial class DoctorBd : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _FIO;
		
		private System.Nullable<int> _SpecID;
		
		private string _SpecName;
		
		private string _Room;
		
		private System.Nullable<int> _Otdelenie;
		
		private System.Nullable<int> _Area;
		
		private string _FAM;
		
		private string _IM;
		
		private string _OT;
		
		private System.Nullable<int> _Profil;
		
		private string _SNILS;
		
		private string _FioWithId;
		
		private EntitySet<USL_ASSIST> _USL_ASSIST;
		
		private EntitySet<SLUCH> _SLUCH;
		
		private EntitySet<SLUCH> _SLUCH1;
		
		private EntitySet<USL> _USL;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnFIOChanging(string value);
    partial void OnFIOChanged();
    partial void OnSpecIDChanging(System.Nullable<int> value);
    partial void OnSpecIDChanged();
    partial void OnSpecNameChanging(string value);
    partial void OnSpecNameChanged();
    partial void OnRoomChanging(string value);
    partial void OnRoomChanged();
    partial void OnOtdelenieChanging(System.Nullable<int> value);
    partial void OnOtdelenieChanged();
    partial void OnAreaChanging(System.Nullable<int> value);
    partial void OnAreaChanged();
    partial void OnFAMChanging(string value);
    partial void OnFAMChanged();
    partial void OnIMChanging(string value);
    partial void OnIMChanged();
    partial void OnOTChanging(string value);
    partial void OnOTChanged();
    partial void OnProfilChanging(System.Nullable<int> value);
    partial void OnProfilChanged();
    partial void OnSNILSChanging(string value);
    partial void OnSNILSChanged();
    partial void OnFioWithIdChanging(string value);
    partial void OnFioWithIdChanged();
    #endregion
		
		public DoctorBd()
		{
			this._USL_ASSIST = new EntitySet<USL_ASSIST>(new Action<USL_ASSIST>(this.attach_USL_ASSIST), new Action<USL_ASSIST>(this.detach_USL_ASSIST));
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			this._SLUCH1 = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH1), new Action<SLUCH>(this.detach_SLUCH1));
			this._USL = new EntitySet<USL>(new Action<USL>(this.attach_USL), new Action<USL>(this.detach_USL));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIO", DbType="VarChar(60)")]
		public string FIO
		{
			get
			{
				return this._FIO;
			}
			set
			{
				if ((this._FIO != value))
				{
					this.OnFIOChanging(value);
					this.SendPropertyChanging();
					this._FIO = value;
					this.SendPropertyChanged("FIO");
					this.OnFIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecID", DbType="Int")]
		public System.Nullable<int> SpecID
		{
			get
			{
				return this._SpecID;
			}
			set
			{
				if ((this._SpecID != value))
				{
					this.OnSpecIDChanging(value);
					this.SendPropertyChanging();
					this._SpecID = value;
					this.SendPropertyChanged("SpecID");
					this.OnSpecIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecName", DbType="VarChar(30)")]
		public string SpecName
		{
			get
			{
				return this._SpecName;
			}
			set
			{
				if ((this._SpecName != value))
				{
					this.OnSpecNameChanging(value);
					this.SendPropertyChanging();
					this._SpecName = value;
					this.SendPropertyChanged("SpecName");
					this.OnSpecNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room", DbType="VarChar(15)")]
		public string Room
		{
			get
			{
				return this._Room;
			}
			set
			{
				if ((this._Room != value))
				{
					this.OnRoomChanging(value);
					this.SendPropertyChanging();
					this._Room = value;
					this.SendPropertyChanged("Room");
					this.OnRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Otdelenie", DbType="Int")]
		public System.Nullable<int> Otdelenie
		{
			get
			{
				return this._Otdelenie;
			}
			set
			{
				if ((this._Otdelenie != value))
				{
					this.OnOtdelenieChanging(value);
					this.SendPropertyChanging();
					this._Otdelenie = value;
					this.SendPropertyChanged("Otdelenie");
					this.OnOtdelenieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="Int")]
		public System.Nullable<int> Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAM", DbType="VarChar(50)")]
		public string FAM
		{
			get
			{
				return this._FAM;
			}
			set
			{
				if ((this._FAM != value))
				{
					this.OnFAMChanging(value);
					this.SendPropertyChanging();
					this._FAM = value;
					this.SendPropertyChanged("FAM");
					this.OnFAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IM", DbType="VarChar(50)")]
		public string IM
		{
			get
			{
				return this._IM;
			}
			set
			{
				if ((this._IM != value))
				{
					this.OnIMChanging(value);
					this.SendPropertyChanging();
					this._IM = value;
					this.SendPropertyChanged("IM");
					this.OnIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT", DbType="VarChar(50)")]
		public string OT
		{
			get
			{
				return this._OT;
			}
			set
			{
				if ((this._OT != value))
				{
					this.OnOTChanging(value);
					this.SendPropertyChanging();
					this._OT = value;
					this.SendPropertyChanged("OT");
					this.OnOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profil", DbType="Int")]
		public System.Nullable<int> Profil
		{
			get
			{
				return this._Profil;
			}
			set
			{
				if ((this._Profil != value))
				{
					this.OnProfilChanging(value);
					this.SendPropertyChanging();
					this._Profil = value;
					this.SendPropertyChanged("Profil");
					this.OnProfilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNILS", DbType="VarChar(14)")]
		public string SNILS
		{
			get
			{
				return this._SNILS;
			}
			set
			{
				if ((this._SNILS != value))
				{
					this.OnSNILSChanging(value);
					this.SendPropertyChanging();
					this._SNILS = value;
					this.SendPropertyChanged("SNILS");
					this.OnSNILSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FioWithId", AutoSync=AutoSync.Always, DbType="VarChar(62)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string FioWithId
		{
			get
			{
				return this._FioWithId;
			}
			set
			{
				if ((this._FioWithId != value))
				{
					this.OnFioWithIdChanging(value);
					this.SendPropertyChanging();
					this._FioWithId = value;
					this.SendPropertyChanged("FioWithId");
					this.OnFioWithIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorBd_USL_ASSIST", Storage="_USL_ASSIST", ThisKey="id", OtherKey="IDDOCT")]
		public EntitySet<USL_ASSIST> USL_ASSIST
		{
			get
			{
				return this._USL_ASSIST;
			}
			set
			{
				this._USL_ASSIST.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorBd_SLUCH", Storage="_SLUCH", ThisKey="id", OtherKey="IDDOKTO")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorBd_SLUCH1", Storage="_SLUCH1", ThisKey="id", OtherKey="IDDOKTP")]
		public EntitySet<SLUCH> SLUCH1
		{
			get
			{
				return this._SLUCH1;
			}
			set
			{
				this._SLUCH1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorBd_USL", Storage="_USL", ThisKey="id", OtherKey="CODE_MDLPU")]
		public EntitySet<USL> USL
		{
			get
			{
				return this._USL;
			}
			set
			{
				this._USL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_USL_ASSIST(USL_ASSIST entity)
		{
			this.SendPropertyChanging();
			entity.DoctorBd = this;
		}
		
		private void detach_USL_ASSIST(USL_ASSIST entity)
		{
			this.SendPropertyChanging();
			entity.DoctorBd = null;
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.DoctorBd = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.DoctorBd = null;
		}
		
		private void attach_SLUCH1(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.DoctorBd1 = this;
		}
		
		private void detach_SLUCH1(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.DoctorBd1 = null;
		}
		
		private void attach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.DoctorBd = this;
		}
		
		private void detach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.DoctorBd = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorTbl")]
	public partial class DoctorTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SNILS;
		
		private string _FAM;
		
		private string _IM;
		
		private string _OT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSNILSChanging(string value);
    partial void OnSNILSChanged();
    partial void OnFAMChanging(string value);
    partial void OnFAMChanged();
    partial void OnIMChanging(string value);
    partial void OnIMChanged();
    partial void OnOTChanging(string value);
    partial void OnOTChanged();
    #endregion
		
		public DoctorTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNILS", DbType="NVarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SNILS
		{
			get
			{
				return this._SNILS;
			}
			set
			{
				if ((this._SNILS != value))
				{
					this.OnSNILSChanging(value);
					this.SendPropertyChanging();
					this._SNILS = value;
					this.SendPropertyChanged("SNILS");
					this.OnSNILSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAM", DbType="NVarChar(50)")]
		public string FAM
		{
			get
			{
				return this._FAM;
			}
			set
			{
				if ((this._FAM != value))
				{
					this.OnFAMChanging(value);
					this.SendPropertyChanging();
					this._FAM = value;
					this.SendPropertyChanged("FAM");
					this.OnFAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IM", DbType="NVarChar(50)")]
		public string IM
		{
			get
			{
				return this._IM;
			}
			set
			{
				if ((this._IM != value))
				{
					this.OnIMChanging(value);
					this.SendPropertyChanging();
					this._IM = value;
					this.SendPropertyChanged("IM");
					this.OnIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT", DbType="NVarChar(50)")]
		public string OT
		{
			get
			{
				return this._OT;
			}
			set
			{
				if ((this._OT != value))
				{
					this.OnOTChanging(value);
					this.SendPropertyChanging();
					this._OT = value;
					this.SendPropertyChanged("OT");
					this.OnOTChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dostav")]
	public partial class Dostav : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _NameWithId;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIdChanging(string value);
    partial void OnNameWithIdChanged();
    #endregion
		
		public Dostav()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithId", AutoSync=AutoSync.Always, DbType="VarChar(53)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithId
		{
			get
			{
				return this._NameWithId;
			}
			set
			{
				if ((this._NameWithId != value))
				{
					this.OnNameWithIdChanging(value);
					this.SendPropertyChanging();
					this._NameWithId = value;
					this.SendPropertyChanged("NameWithId");
					this.OnNameWithIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dostav_SLUCH", Storage="_SLUCH", ThisKey="ID", OtherKey="VR_DOST")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.Dostav = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.Dostav = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DST_NKD")]
	public partial class DST_NKD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _NORM;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNORMChanging(int value);
    partial void OnNORMChanged();
    #endregion
		
		public DST_NKD()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NORM", DbType="Int NOT NULL")]
		public int NORM
		{
			get
			{
				return this._NORM;
			}
			set
			{
				if ((this._NORM != value))
				{
					this.OnNORMChanging(value);
					this.SendPropertyChanging();
					this._NORM = value;
					this.SendPropertyChanged("NORM");
					this.OnNORMChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EKMP_TYPE_DB")]
	public partial class EKMP_TYPE_DB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _NameWithID;
		
		private EntitySet<AKT_EKMP_TBL> _AKT_EKMP_TBL;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public EKMP_TYPE_DB()
		{
			this._AKT_EKMP_TBL = new EntitySet<AKT_EKMP_TBL>(new Action<AKT_EKMP_TBL>(this.attach_AKT_EKMP_TBL), new Action<AKT_EKMP_TBL>(this.detach_AKT_EKMP_TBL));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="VarChar(104)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EKMP_TYPE_DB_AKT_EKMP_TBL", Storage="_AKT_EKMP_TBL", ThisKey="Id", OtherKey="EKMP_TYPE")]
		public EntitySet<AKT_EKMP_TBL> AKT_EKMP_TBL
		{
			get
			{
				return this._AKT_EKMP_TBL;
			}
			set
			{
				this._AKT_EKMP_TBL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AKT_EKMP_TBL(AKT_EKMP_TBL entity)
		{
			this.SendPropertyChanging();
			entity.EKMP_TYPE_DB = this;
		}
		
		private void detach_AKT_EKMP_TBL(AKT_EKMP_TBL entity)
		{
			this.SendPropertyChanging();
			entity.EKMP_TYPE_DB = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.enp_update")]
	public partial class enp_update
	{
		
		private int _id;
		
		private System.Nullable<int> _ch;
		
		public enp_update()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ch", DbType="Int")]
		public System.Nullable<int> ch
		{
			get
			{
				return this._ch;
			}
			set
			{
				if ((this._ch != value))
				{
					this._ch = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExpertsDB")]
	public partial class ExpertsDB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FAM;
		
		private string _IM;
		
		private string _OT;
		
		private string _KOD;
		
		private string _NameWithID;
		
		private EntitySet<AKT_EKMP_TBL> _AKT_EKMP_TBL;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFAMChanging(string value);
    partial void OnFAMChanged();
    partial void OnIMChanging(string value);
    partial void OnIMChanged();
    partial void OnOTChanging(string value);
    partial void OnOTChanged();
    partial void OnKODChanging(string value);
    partial void OnKODChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public ExpertsDB()
		{
			this._AKT_EKMP_TBL = new EntitySet<AKT_EKMP_TBL>(new Action<AKT_EKMP_TBL>(this.attach_AKT_EKMP_TBL), new Action<AKT_EKMP_TBL>(this.detach_AKT_EKMP_TBL));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAM", DbType="VarChar(50)")]
		public string FAM
		{
			get
			{
				return this._FAM;
			}
			set
			{
				if ((this._FAM != value))
				{
					this.OnFAMChanging(value);
					this.SendPropertyChanging();
					this._FAM = value;
					this.SendPropertyChanged("FAM");
					this.OnFAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IM", DbType="VarChar(50)")]
		public string IM
		{
			get
			{
				return this._IM;
			}
			set
			{
				if ((this._IM != value))
				{
					this.OnIMChanging(value);
					this.SendPropertyChanging();
					this._IM = value;
					this.SendPropertyChanged("IM");
					this.OnIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT", DbType="VarChar(50)")]
		public string OT
		{
			get
			{
				return this._OT;
			}
			set
			{
				if ((this._OT != value))
				{
					this.OnOTChanging(value);
					this.SendPropertyChanging();
					this._OT = value;
					this.SendPropertyChanged("OT");
					this.OnOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KOD", DbType="VarChar(50)")]
		public string KOD
		{
			get
			{
				return this._KOD;
			}
			set
			{
				if ((this._KOD != value))
				{
					this.OnKODChanging(value);
					this.SendPropertyChanging();
					this._KOD = value;
					this.SendPropertyChanged("KOD");
					this.OnKODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="VarChar(203) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExpertsDB_AKT_EKMP_TBL", Storage="_AKT_EKMP_TBL", ThisKey="Id", OtherKey="USERID")]
		public EntitySet<AKT_EKMP_TBL> AKT_EKMP_TBL
		{
			get
			{
				return this._AKT_EKMP_TBL;
			}
			set
			{
				this._AKT_EKMP_TBL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AKT_EKMP_TBL(AKT_EKMP_TBL entity)
		{
			this.SendPropertyChanging();
			entity.ExpertsDB = this;
		}
		
		private void detach_AKT_EKMP_TBL(AKT_EKMP_TBL entity)
		{
			this.SendPropertyChanging();
			entity.ExpertsDB = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F001")]
	public partial class F001 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _tf_code;
		
		private string _tf_okato;
		
		private string _tf_ogrn;
		
		private string _name_tfp;
		
		private string _name_tfk;
		
		private string _post_index;
		
		private string _address;
		
		private string _fam_dir;
		
		private string _im_dir;
		
		private string _ot_dir;
		
		private string _phone;
		
		private string _fax;
		
		private string _e_mail;
		
		private decimal _kf_tf;
		
		private string _www;
		
		private System.DateTime _d_edit;
		
		private System.Nullable<System.DateTime> _d_end;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Ontf_codeChanging(string value);
    partial void Ontf_codeChanged();
    partial void Ontf_okatoChanging(string value);
    partial void Ontf_okatoChanged();
    partial void Ontf_ogrnChanging(string value);
    partial void Ontf_ogrnChanged();
    partial void Onname_tfpChanging(string value);
    partial void Onname_tfpChanged();
    partial void Onname_tfkChanging(string value);
    partial void Onname_tfkChanged();
    partial void Onpost_indexChanging(string value);
    partial void Onpost_indexChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onfam_dirChanging(string value);
    partial void Onfam_dirChanged();
    partial void Onim_dirChanging(string value);
    partial void Onim_dirChanged();
    partial void Onot_dirChanging(string value);
    partial void Onot_dirChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void One_mailChanging(string value);
    partial void One_mailChanged();
    partial void Onkf_tfChanging(decimal value);
    partial void Onkf_tfChanged();
    partial void OnwwwChanging(string value);
    partial void OnwwwChanged();
    partial void Ond_editChanging(System.DateTime value);
    partial void Ond_editChanged();
    partial void Ond_endChanging(System.Nullable<System.DateTime> value);
    partial void Ond_endChanged();
    #endregion
		
		public F001()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tf_code", DbType="NVarChar(2)")]
		public string tf_code
		{
			get
			{
				return this._tf_code;
			}
			set
			{
				if ((this._tf_code != value))
				{
					this.Ontf_codeChanging(value);
					this.SendPropertyChanging();
					this._tf_code = value;
					this.SendPropertyChanged("tf_code");
					this.Ontf_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tf_okato", DbType="NVarChar(5)")]
		public string tf_okato
		{
			get
			{
				return this._tf_okato;
			}
			set
			{
				if ((this._tf_okato != value))
				{
					this.Ontf_okatoChanging(value);
					this.SendPropertyChanging();
					this._tf_okato = value;
					this.SendPropertyChanged("tf_okato");
					this.Ontf_okatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tf_ogrn", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string tf_ogrn
		{
			get
			{
				return this._tf_ogrn;
			}
			set
			{
				if ((this._tf_ogrn != value))
				{
					this.Ontf_ogrnChanging(value);
					this.SendPropertyChanging();
					this._tf_ogrn = value;
					this.SendPropertyChanged("tf_ogrn");
					this.Ontf_ogrnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_tfp", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string name_tfp
		{
			get
			{
				return this._name_tfp;
			}
			set
			{
				if ((this._name_tfp != value))
				{
					this.Onname_tfpChanging(value);
					this.SendPropertyChanging();
					this._name_tfp = value;
					this.SendPropertyChanged("name_tfp");
					this.Onname_tfpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_tfk", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string name_tfk
		{
			get
			{
				return this._name_tfk;
			}
			set
			{
				if ((this._name_tfk != value))
				{
					this.Onname_tfkChanging(value);
					this.SendPropertyChanging();
					this._name_tfk = value;
					this.SendPropertyChanged("name_tfk");
					this.Onname_tfkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_index", DbType="NVarChar(6)")]
		public string post_index
		{
			get
			{
				return this._post_index;
			}
			set
			{
				if ((this._post_index != value))
				{
					this.Onpost_indexChanging(value);
					this.SendPropertyChanging();
					this._post_index = value;
					this.SendPropertyChanged("post_index");
					this.Onpost_indexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fam_dir", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string fam_dir
		{
			get
			{
				return this._fam_dir;
			}
			set
			{
				if ((this._fam_dir != value))
				{
					this.Onfam_dirChanging(value);
					this.SendPropertyChanging();
					this._fam_dir = value;
					this.SendPropertyChanged("fam_dir");
					this.Onfam_dirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_im_dir", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string im_dir
		{
			get
			{
				return this._im_dir;
			}
			set
			{
				if ((this._im_dir != value))
				{
					this.Onim_dirChanging(value);
					this.SendPropertyChanging();
					this._im_dir = value;
					this.SendPropertyChanged("im_dir");
					this.Onim_dirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ot_dir", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string ot_dir
		{
			get
			{
				return this._ot_dir;
			}
			set
			{
				if ((this._ot_dir != value))
				{
					this.Onot_dirChanging(value);
					this.SendPropertyChanging();
					this._ot_dir = value;
					this.SendPropertyChanged("ot_dir");
					this.Onot_dirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_mail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string e_mail
		{
			get
			{
				return this._e_mail;
			}
			set
			{
				if ((this._e_mail != value))
				{
					this.One_mailChanging(value);
					this.SendPropertyChanging();
					this._e_mail = value;
					this.SendPropertyChanged("e_mail");
					this.One_mailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kf_tf", DbType="Decimal(4,0) NOT NULL")]
		public decimal kf_tf
		{
			get
			{
				return this._kf_tf;
			}
			set
			{
				if ((this._kf_tf != value))
				{
					this.Onkf_tfChanging(value);
					this.SendPropertyChanging();
					this._kf_tf = value;
					this.SendPropertyChanged("kf_tf");
					this.Onkf_tfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_www", DbType="NVarChar(100)")]
		public string www
		{
			get
			{
				return this._www;
			}
			set
			{
				if ((this._www != value))
				{
					this.OnwwwChanging(value);
					this.SendPropertyChanging();
					this._www = value;
					this.SendPropertyChanged("www");
					this.OnwwwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_edit", DbType="DateTime NOT NULL")]
		public System.DateTime d_edit
		{
			get
			{
				return this._d_edit;
			}
			set
			{
				if ((this._d_edit != value))
				{
					this.Ond_editChanging(value);
					this.SendPropertyChanging();
					this._d_edit = value;
					this.SendPropertyChanged("d_edit");
					this.Ond_editChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_end
		{
			get
			{
				return this._d_end;
			}
			set
			{
				if ((this._d_end != value))
				{
					this.Ond_endChanging(value);
					this.SendPropertyChanging();
					this._d_end = value;
					this.SendPropertyChanged("d_end");
					this.Ond_endChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F002")]
	public partial class F002 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _smocod;
		
		private string _tf_okato;
		
		private string _nam_smop;
		
		private string _nam_smok;
		
		private string _inn;
		
		private string _Ogrn;
		
		private string _KPP;
		
		private string _index_j;
		
		private string _addr_j;
		
		private string _index_f;
		
		private string _addr_f;
		
		private string _okopf;
		
		private string _fam_ruk;
		
		private string _im_ruk;
		
		private string _ot_ruk;
		
		private string _phone;
		
		private string _fax;
		
		private string _e_mail;
		
		private string _www;
		
		private System.Nullable<decimal> _org;
		
		private System.Nullable<System.DateTime> _d_begin;
		
		private System.Nullable<System.DateTime> _d_end;
		
		private string _name_e;
		
		private string _Nal_p;
		
		private System.Nullable<System.DateTime> _DUVED;
		
		private System.Nullable<decimal> _kol_zl;
		
		private System.Nullable<System.DateTime> _d_edit;
		
		private string _n_doc;
		
		private System.Nullable<System.DateTime> _d_start;
		
		private System.Nullable<System.DateTime> _data_e;
		
		private int _id;
		
		private string _NameWithID;
		
		private EntitySet<PACIENT> _PACIENT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsmocodChanging(string value);
    partial void OnsmocodChanged();
    partial void Ontf_okatoChanging(string value);
    partial void Ontf_okatoChanged();
    partial void Onnam_smopChanging(string value);
    partial void Onnam_smopChanged();
    partial void Onnam_smokChanging(string value);
    partial void Onnam_smokChanged();
    partial void OninnChanging(string value);
    partial void OninnChanged();
    partial void OnOgrnChanging(string value);
    partial void OnOgrnChanged();
    partial void OnKPPChanging(string value);
    partial void OnKPPChanged();
    partial void Onindex_jChanging(string value);
    partial void Onindex_jChanged();
    partial void Onaddr_jChanging(string value);
    partial void Onaddr_jChanged();
    partial void Onindex_fChanging(string value);
    partial void Onindex_fChanged();
    partial void Onaddr_fChanging(string value);
    partial void Onaddr_fChanged();
    partial void OnokopfChanging(string value);
    partial void OnokopfChanged();
    partial void Onfam_rukChanging(string value);
    partial void Onfam_rukChanged();
    partial void Onim_rukChanging(string value);
    partial void Onim_rukChanged();
    partial void Onot_rukChanging(string value);
    partial void Onot_rukChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void One_mailChanging(string value);
    partial void One_mailChanged();
    partial void OnwwwChanging(string value);
    partial void OnwwwChanged();
    partial void OnorgChanging(System.Nullable<decimal> value);
    partial void OnorgChanged();
    partial void Ond_beginChanging(System.Nullable<System.DateTime> value);
    partial void Ond_beginChanged();
    partial void Ond_endChanging(System.Nullable<System.DateTime> value);
    partial void Ond_endChanged();
    partial void Onname_eChanging(string value);
    partial void Onname_eChanged();
    partial void OnNal_pChanging(string value);
    partial void OnNal_pChanged();
    partial void OnDUVEDChanging(System.Nullable<System.DateTime> value);
    partial void OnDUVEDChanged();
    partial void Onkol_zlChanging(System.Nullable<decimal> value);
    partial void Onkol_zlChanged();
    partial void Ond_editChanging(System.Nullable<System.DateTime> value);
    partial void Ond_editChanged();
    partial void Onn_docChanging(string value);
    partial void Onn_docChanged();
    partial void Ond_startChanging(System.Nullable<System.DateTime> value);
    partial void Ond_startChanged();
    partial void Ondata_eChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_eChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public F002()
		{
			this._PACIENT = new EntitySet<PACIENT>(new Action<PACIENT>(this.attach_PACIENT), new Action<PACIENT>(this.detach_PACIENT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_smocod", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string smocod
		{
			get
			{
				return this._smocod;
			}
			set
			{
				if ((this._smocod != value))
				{
					this.OnsmocodChanging(value);
					this.SendPropertyChanging();
					this._smocod = value;
					this.SendPropertyChanged("smocod");
					this.OnsmocodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tf_okato", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string tf_okato
		{
			get
			{
				return this._tf_okato;
			}
			set
			{
				if ((this._tf_okato != value))
				{
					this.Ontf_okatoChanging(value);
					this.SendPropertyChanging();
					this._tf_okato = value;
					this.SendPropertyChanged("tf_okato");
					this.Ontf_okatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nam_smop", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string nam_smop
		{
			get
			{
				return this._nam_smop;
			}
			set
			{
				if ((this._nam_smop != value))
				{
					this.Onnam_smopChanging(value);
					this.SendPropertyChanging();
					this._nam_smop = value;
					this.SendPropertyChanged("nam_smop");
					this.Onnam_smopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nam_smok", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string nam_smok
		{
			get
			{
				return this._nam_smok;
			}
			set
			{
				if ((this._nam_smok != value))
				{
					this.Onnam_smokChanging(value);
					this.SendPropertyChanging();
					this._nam_smok = value;
					this.SendPropertyChanged("nam_smok");
					this.Onnam_smokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inn", DbType="NVarChar(12)")]
		public string inn
		{
			get
			{
				return this._inn;
			}
			set
			{
				if ((this._inn != value))
				{
					this.OninnChanging(value);
					this.SendPropertyChanging();
					this._inn = value;
					this.SendPropertyChanged("inn");
					this.OninnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ogrn", DbType="NVarChar(15)")]
		public string Ogrn
		{
			get
			{
				return this._Ogrn;
			}
			set
			{
				if ((this._Ogrn != value))
				{
					this.OnOgrnChanging(value);
					this.SendPropertyChanging();
					this._Ogrn = value;
					this.SendPropertyChanged("Ogrn");
					this.OnOgrnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPP", DbType="NVarChar(9)")]
		public string KPP
		{
			get
			{
				return this._KPP;
			}
			set
			{
				if ((this._KPP != value))
				{
					this.OnKPPChanging(value);
					this.SendPropertyChanging();
					this._KPP = value;
					this.SendPropertyChanged("KPP");
					this.OnKPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_index_j", DbType="NVarChar(6)")]
		public string index_j
		{
			get
			{
				return this._index_j;
			}
			set
			{
				if ((this._index_j != value))
				{
					this.Onindex_jChanging(value);
					this.SendPropertyChanging();
					this._index_j = value;
					this.SendPropertyChanged("index_j");
					this.Onindex_jChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addr_j", DbType="NVarChar(254)")]
		public string addr_j
		{
			get
			{
				return this._addr_j;
			}
			set
			{
				if ((this._addr_j != value))
				{
					this.Onaddr_jChanging(value);
					this.SendPropertyChanging();
					this._addr_j = value;
					this.SendPropertyChanged("addr_j");
					this.Onaddr_jChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_index_f", DbType="NVarChar(6)")]
		public string index_f
		{
			get
			{
				return this._index_f;
			}
			set
			{
				if ((this._index_f != value))
				{
					this.Onindex_fChanging(value);
					this.SendPropertyChanging();
					this._index_f = value;
					this.SendPropertyChanged("index_f");
					this.Onindex_fChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addr_f", DbType="NVarChar(254)")]
		public string addr_f
		{
			get
			{
				return this._addr_f;
			}
			set
			{
				if ((this._addr_f != value))
				{
					this.Onaddr_fChanging(value);
					this.SendPropertyChanging();
					this._addr_f = value;
					this.SendPropertyChanged("addr_f");
					this.Onaddr_fChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_okopf", DbType="NVarChar(5)")]
		public string okopf
		{
			get
			{
				return this._okopf;
			}
			set
			{
				if ((this._okopf != value))
				{
					this.OnokopfChanging(value);
					this.SendPropertyChanging();
					this._okopf = value;
					this.SendPropertyChanged("okopf");
					this.OnokopfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fam_ruk", DbType="NVarChar(40)")]
		public string fam_ruk
		{
			get
			{
				return this._fam_ruk;
			}
			set
			{
				if ((this._fam_ruk != value))
				{
					this.Onfam_rukChanging(value);
					this.SendPropertyChanging();
					this._fam_ruk = value;
					this.SendPropertyChanged("fam_ruk");
					this.Onfam_rukChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_im_ruk", DbType="NVarChar(40)")]
		public string im_ruk
		{
			get
			{
				return this._im_ruk;
			}
			set
			{
				if ((this._im_ruk != value))
				{
					this.Onim_rukChanging(value);
					this.SendPropertyChanging();
					this._im_ruk = value;
					this.SendPropertyChanged("im_ruk");
					this.Onim_rukChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ot_ruk", DbType="NVarChar(40)")]
		public string ot_ruk
		{
			get
			{
				return this._ot_ruk;
			}
			set
			{
				if ((this._ot_ruk != value))
				{
					this.Onot_rukChanging(value);
					this.SendPropertyChanging();
					this._ot_ruk = value;
					this.SendPropertyChanged("ot_ruk");
					this.Onot_rukChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(40)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="NVarChar(40)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_mail", DbType="NVarChar(40)")]
		public string e_mail
		{
			get
			{
				return this._e_mail;
			}
			set
			{
				if ((this._e_mail != value))
				{
					this.One_mailChanging(value);
					this.SendPropertyChanging();
					this._e_mail = value;
					this.SendPropertyChanged("e_mail");
					this.One_mailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_www", DbType="NVarChar(100)")]
		public string www
		{
			get
			{
				return this._www;
			}
			set
			{
				if ((this._www != value))
				{
					this.OnwwwChanging(value);
					this.SendPropertyChanging();
					this._www = value;
					this.SendPropertyChanged("www");
					this.OnwwwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_org", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> org
		{
			get
			{
				return this._org;
			}
			set
			{
				if ((this._org != value))
				{
					this.OnorgChanging(value);
					this.SendPropertyChanging();
					this._org = value;
					this.SendPropertyChanged("org");
					this.OnorgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_begin", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_begin
		{
			get
			{
				return this._d_begin;
			}
			set
			{
				if ((this._d_begin != value))
				{
					this.Ond_beginChanging(value);
					this.SendPropertyChanging();
					this._d_begin = value;
					this.SendPropertyChanged("d_begin");
					this.Ond_beginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_end
		{
			get
			{
				return this._d_end;
			}
			set
			{
				if ((this._d_end != value))
				{
					this.Ond_endChanging(value);
					this.SendPropertyChanging();
					this._d_end = value;
					this.SendPropertyChanged("d_end");
					this.Ond_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_e", DbType="NVarChar(15)")]
		public string name_e
		{
			get
			{
				return this._name_e;
			}
			set
			{
				if ((this._name_e != value))
				{
					this.Onname_eChanging(value);
					this.SendPropertyChanging();
					this._name_e = value;
					this.SendPropertyChanged("name_e");
					this.Onname_eChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nal_p", DbType="NVarChar(1)")]
		public string Nal_p
		{
			get
			{
				return this._Nal_p;
			}
			set
			{
				if ((this._Nal_p != value))
				{
					this.OnNal_pChanging(value);
					this.SendPropertyChanging();
					this._Nal_p = value;
					this.SendPropertyChanged("Nal_p");
					this.OnNal_pChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DUVED", DbType="DateTime")]
		public System.Nullable<System.DateTime> DUVED
		{
			get
			{
				return this._DUVED;
			}
			set
			{
				if ((this._DUVED != value))
				{
					this.OnDUVEDChanging(value);
					this.SendPropertyChanging();
					this._DUVED = value;
					this.SendPropertyChanged("DUVED");
					this.OnDUVEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kol_zl", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> kol_zl
		{
			get
			{
				return this._kol_zl;
			}
			set
			{
				if ((this._kol_zl != value))
				{
					this.Onkol_zlChanging(value);
					this.SendPropertyChanging();
					this._kol_zl = value;
					this.SendPropertyChanged("kol_zl");
					this.Onkol_zlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_edit", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_edit
		{
			get
			{
				return this._d_edit;
			}
			set
			{
				if ((this._d_edit != value))
				{
					this.Ond_editChanging(value);
					this.SendPropertyChanging();
					this._d_edit = value;
					this.SendPropertyChanged("d_edit");
					this.Ond_editChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_n_doc", DbType="NVarChar(20)")]
		public string n_doc
		{
			get
			{
				return this._n_doc;
			}
			set
			{
				if ((this._n_doc != value))
				{
					this.Onn_docChanging(value);
					this.SendPropertyChanging();
					this._n_doc = value;
					this.SendPropertyChanged("n_doc");
					this.Onn_docChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_start
		{
			get
			{
				return this._d_start;
			}
			set
			{
				if ((this._d_start != value))
				{
					this.Ond_startChanging(value);
					this.SendPropertyChanging();
					this._d_start = value;
					this.SendPropertyChanged("d_start");
					this.Ond_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_e", DbType="DateTime")]
		public System.Nullable<System.DateTime> data_e
		{
			get
			{
				return this._data_e;
			}
			set
			{
				if ((this._data_e != value))
				{
					this.Ondata_eChanging(value);
					this.SendPropertyChanging();
					this._data_e = value;
					this.SendPropertyChanged("data_e");
					this.Ondata_eChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(257) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F002_PACIENT", Storage="_PACIENT", ThisKey="smocod", OtherKey="SMO")]
		public EntitySet<PACIENT> PACIENT
		{
			get
			{
				return this._PACIENT;
			}
			set
			{
				this._PACIENT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PACIENT(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.F002 = this;
		}
		
		private void detach_PACIENT(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.F002 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F003")]
	public partial class F003 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _Id;
		
		private string _tf_okato;
		
		private string _mcod;
		
		private string _nam_mop;
		
		private string _nam_mok;
		
		private string _inn;
		
		private string _Ogrn;
		
		private string _KPP;
		
		private string _index_j;
		
		private string _addr_j;
		
		private string _okopf;
		
		private System.Nullable<decimal> _vedpri;
		
		private System.Nullable<decimal> _org;
		
		private string _fam_ruk;
		
		private string _im_ruk;
		
		private string _ot_ruk;
		
		private string _phone;
		
		private string _fax;
		
		private string _e_mail;
		
		private string _n_doc;
		
		private System.Nullable<System.DateTime> _d_start;
		
		private System.Nullable<System.DateTime> _data_e;
		
		private string _mp;
		
		private string _www;
		
		private System.Nullable<System.DateTime> _d_begin;
		
		private System.Nullable<System.DateTime> _d_end;
		
		private string _name_e;
		
		private System.Nullable<System.DateTime> _DUVED;
		
		private System.Nullable<System.DateTime> _d_edit;
		
		private string _NameWithID;
		
		private EntitySet<LicenseDb> _LicenseDb;
		
		private EntitySet<MEE_DB> _MEE_DB;
		
		private EntitySet<SCHET_OMS> _SCHET_OMS;
		
		private EntitySet<SCHET_SMO> _SCHET_SMO;
		
		private EntitySet<WORK_DAY> _WORK_DAY;
		
		private EntitySet<SLUCH> _SLUCH;
		
		private EntitySet<SLUCH> _SLUCH1;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Nullable<int> value);
    partial void OnIdChanged();
    partial void Ontf_okatoChanging(string value);
    partial void Ontf_okatoChanged();
    partial void OnmcodChanging(string value);
    partial void OnmcodChanged();
    partial void Onnam_mopChanging(string value);
    partial void Onnam_mopChanged();
    partial void Onnam_mokChanging(string value);
    partial void Onnam_mokChanged();
    partial void OninnChanging(string value);
    partial void OninnChanged();
    partial void OnOgrnChanging(string value);
    partial void OnOgrnChanged();
    partial void OnKPPChanging(string value);
    partial void OnKPPChanged();
    partial void Onindex_jChanging(string value);
    partial void Onindex_jChanged();
    partial void Onaddr_jChanging(string value);
    partial void Onaddr_jChanged();
    partial void OnokopfChanging(string value);
    partial void OnokopfChanged();
    partial void OnvedpriChanging(System.Nullable<decimal> value);
    partial void OnvedpriChanged();
    partial void OnorgChanging(System.Nullable<decimal> value);
    partial void OnorgChanged();
    partial void Onfam_rukChanging(string value);
    partial void Onfam_rukChanged();
    partial void Onim_rukChanging(string value);
    partial void Onim_rukChanged();
    partial void Onot_rukChanging(string value);
    partial void Onot_rukChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void One_mailChanging(string value);
    partial void One_mailChanged();
    partial void Onn_docChanging(string value);
    partial void Onn_docChanged();
    partial void Ond_startChanging(System.Nullable<System.DateTime> value);
    partial void Ond_startChanged();
    partial void Ondata_eChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_eChanged();
    partial void OnmpChanging(string value);
    partial void OnmpChanged();
    partial void OnwwwChanging(string value);
    partial void OnwwwChanged();
    partial void Ond_beginChanging(System.Nullable<System.DateTime> value);
    partial void Ond_beginChanged();
    partial void Ond_endChanging(System.Nullable<System.DateTime> value);
    partial void Ond_endChanged();
    partial void Onname_eChanging(string value);
    partial void Onname_eChanged();
    partial void OnDUVEDChanging(System.Nullable<System.DateTime> value);
    partial void OnDUVEDChanged();
    partial void Ond_editChanging(System.Nullable<System.DateTime> value);
    partial void Ond_editChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public F003()
		{
			this._LicenseDb = new EntitySet<LicenseDb>(new Action<LicenseDb>(this.attach_LicenseDb), new Action<LicenseDb>(this.detach_LicenseDb));
			this._MEE_DB = new EntitySet<MEE_DB>(new Action<MEE_DB>(this.attach_MEE_DB), new Action<MEE_DB>(this.detach_MEE_DB));
			this._SCHET_OMS = new EntitySet<SCHET_OMS>(new Action<SCHET_OMS>(this.attach_SCHET_OMS), new Action<SCHET_OMS>(this.detach_SCHET_OMS));
			this._SCHET_SMO = new EntitySet<SCHET_SMO>(new Action<SCHET_SMO>(this.attach_SCHET_SMO), new Action<SCHET_SMO>(this.detach_SCHET_SMO));
			this._WORK_DAY = new EntitySet<WORK_DAY>(new Action<WORK_DAY>(this.attach_WORK_DAY), new Action<WORK_DAY>(this.detach_WORK_DAY));
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			this._SLUCH1 = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH1), new Action<SLUCH>(this.detach_SLUCH1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int")]
		public System.Nullable<int> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tf_okato", DbType="NVarChar(5)")]
		public string tf_okato
		{
			get
			{
				return this._tf_okato;
			}
			set
			{
				if ((this._tf_okato != value))
				{
					this.Ontf_okatoChanging(value);
					this.SendPropertyChanging();
					this._tf_okato = value;
					this.SendPropertyChanged("tf_okato");
					this.Ontf_okatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mcod", DbType="NVarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mcod
		{
			get
			{
				return this._mcod;
			}
			set
			{
				if ((this._mcod != value))
				{
					this.OnmcodChanging(value);
					this.SendPropertyChanging();
					this._mcod = value;
					this.SendPropertyChanged("mcod");
					this.OnmcodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nam_mop", DbType="NVarChar(250)")]
		public string nam_mop
		{
			get
			{
				return this._nam_mop;
			}
			set
			{
				if ((this._nam_mop != value))
				{
					this.Onnam_mopChanging(value);
					this.SendPropertyChanging();
					this._nam_mop = value;
					this.SendPropertyChanged("nam_mop");
					this.Onnam_mopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nam_mok", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string nam_mok
		{
			get
			{
				return this._nam_mok;
			}
			set
			{
				if ((this._nam_mok != value))
				{
					this.Onnam_mokChanging(value);
					this.SendPropertyChanging();
					this._nam_mok = value;
					this.SendPropertyChanged("nam_mok");
					this.Onnam_mokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inn", DbType="NVarChar(12)")]
		public string inn
		{
			get
			{
				return this._inn;
			}
			set
			{
				if ((this._inn != value))
				{
					this.OninnChanging(value);
					this.SendPropertyChanging();
					this._inn = value;
					this.SendPropertyChanged("inn");
					this.OninnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ogrn", DbType="NVarChar(15)")]
		public string Ogrn
		{
			get
			{
				return this._Ogrn;
			}
			set
			{
				if ((this._Ogrn != value))
				{
					this.OnOgrnChanging(value);
					this.SendPropertyChanging();
					this._Ogrn = value;
					this.SendPropertyChanged("Ogrn");
					this.OnOgrnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPP", DbType="NVarChar(9)")]
		public string KPP
		{
			get
			{
				return this._KPP;
			}
			set
			{
				if ((this._KPP != value))
				{
					this.OnKPPChanging(value);
					this.SendPropertyChanging();
					this._KPP = value;
					this.SendPropertyChanged("KPP");
					this.OnKPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_index_j", DbType="NVarChar(6)")]
		public string index_j
		{
			get
			{
				return this._index_j;
			}
			set
			{
				if ((this._index_j != value))
				{
					this.Onindex_jChanging(value);
					this.SendPropertyChanging();
					this._index_j = value;
					this.SendPropertyChanged("index_j");
					this.Onindex_jChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addr_j", DbType="NVarChar(254)")]
		public string addr_j
		{
			get
			{
				return this._addr_j;
			}
			set
			{
				if ((this._addr_j != value))
				{
					this.Onaddr_jChanging(value);
					this.SendPropertyChanging();
					this._addr_j = value;
					this.SendPropertyChanged("addr_j");
					this.Onaddr_jChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_okopf", DbType="NVarChar(5)")]
		public string okopf
		{
			get
			{
				return this._okopf;
			}
			set
			{
				if ((this._okopf != value))
				{
					this.OnokopfChanging(value);
					this.SendPropertyChanging();
					this._okopf = value;
					this.SendPropertyChanged("okopf");
					this.OnokopfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vedpri", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> vedpri
		{
			get
			{
				return this._vedpri;
			}
			set
			{
				if ((this._vedpri != value))
				{
					this.OnvedpriChanging(value);
					this.SendPropertyChanging();
					this._vedpri = value;
					this.SendPropertyChanged("vedpri");
					this.OnvedpriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_org", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> org
		{
			get
			{
				return this._org;
			}
			set
			{
				if ((this._org != value))
				{
					this.OnorgChanging(value);
					this.SendPropertyChanging();
					this._org = value;
					this.SendPropertyChanged("org");
					this.OnorgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fam_ruk", DbType="NVarChar(40)")]
		public string fam_ruk
		{
			get
			{
				return this._fam_ruk;
			}
			set
			{
				if ((this._fam_ruk != value))
				{
					this.Onfam_rukChanging(value);
					this.SendPropertyChanging();
					this._fam_ruk = value;
					this.SendPropertyChanged("fam_ruk");
					this.Onfam_rukChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_im_ruk", DbType="NVarChar(40)")]
		public string im_ruk
		{
			get
			{
				return this._im_ruk;
			}
			set
			{
				if ((this._im_ruk != value))
				{
					this.Onim_rukChanging(value);
					this.SendPropertyChanging();
					this._im_ruk = value;
					this.SendPropertyChanged("im_ruk");
					this.Onim_rukChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ot_ruk", DbType="NVarChar(40)")]
		public string ot_ruk
		{
			get
			{
				return this._ot_ruk;
			}
			set
			{
				if ((this._ot_ruk != value))
				{
					this.Onot_rukChanging(value);
					this.SendPropertyChanging();
					this._ot_ruk = value;
					this.SendPropertyChanged("ot_ruk");
					this.Onot_rukChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(40)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="NVarChar(40)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_mail", DbType="NVarChar(50)")]
		public string e_mail
		{
			get
			{
				return this._e_mail;
			}
			set
			{
				if ((this._e_mail != value))
				{
					this.One_mailChanging(value);
					this.SendPropertyChanging();
					this._e_mail = value;
					this.SendPropertyChanged("e_mail");
					this.One_mailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_n_doc", DbType="NVarChar(30)")]
		public string n_doc
		{
			get
			{
				return this._n_doc;
			}
			set
			{
				if ((this._n_doc != value))
				{
					this.Onn_docChanging(value);
					this.SendPropertyChanging();
					this._n_doc = value;
					this.SendPropertyChanged("n_doc");
					this.Onn_docChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_start
		{
			get
			{
				return this._d_start;
			}
			set
			{
				if ((this._d_start != value))
				{
					this.Ond_startChanging(value);
					this.SendPropertyChanging();
					this._d_start = value;
					this.SendPropertyChanged("d_start");
					this.Ond_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_e", DbType="DateTime")]
		public System.Nullable<System.DateTime> data_e
		{
			get
			{
				return this._data_e;
			}
			set
			{
				if ((this._data_e != value))
				{
					this.Ondata_eChanging(value);
					this.SendPropertyChanging();
					this._data_e = value;
					this.SendPropertyChanged("data_e");
					this.Ondata_eChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mp", DbType="NVarChar(20)")]
		public string mp
		{
			get
			{
				return this._mp;
			}
			set
			{
				if ((this._mp != value))
				{
					this.OnmpChanging(value);
					this.SendPropertyChanging();
					this._mp = value;
					this.SendPropertyChanged("mp");
					this.OnmpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_www", DbType="NVarChar(100)")]
		public string www
		{
			get
			{
				return this._www;
			}
			set
			{
				if ((this._www != value))
				{
					this.OnwwwChanging(value);
					this.SendPropertyChanging();
					this._www = value;
					this.SendPropertyChanged("www");
					this.OnwwwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_begin", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_begin
		{
			get
			{
				return this._d_begin;
			}
			set
			{
				if ((this._d_begin != value))
				{
					this.Ond_beginChanging(value);
					this.SendPropertyChanging();
					this._d_begin = value;
					this.SendPropertyChanged("d_begin");
					this.Ond_beginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_end
		{
			get
			{
				return this._d_end;
			}
			set
			{
				if ((this._d_end != value))
				{
					this.Ond_endChanging(value);
					this.SendPropertyChanging();
					this._d_end = value;
					this.SendPropertyChanged("d_end");
					this.Ond_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_e", DbType="NVarChar(10)")]
		public string name_e
		{
			get
			{
				return this._name_e;
			}
			set
			{
				if ((this._name_e != value))
				{
					this.Onname_eChanging(value);
					this.SendPropertyChanging();
					this._name_e = value;
					this.SendPropertyChanged("name_e");
					this.Onname_eChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DUVED", DbType="DateTime")]
		public System.Nullable<System.DateTime> DUVED
		{
			get
			{
				return this._DUVED;
			}
			set
			{
				if ((this._DUVED != value))
				{
					this.OnDUVEDChanging(value);
					this.SendPropertyChanging();
					this._DUVED = value;
					this.SendPropertyChanged("DUVED");
					this.OnDUVEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_edit", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_edit
		{
			get
			{
				return this._d_edit;
			}
			set
			{
				if ((this._d_edit != value))
				{
					this.Ond_editChanging(value);
					this.SendPropertyChanging();
					this._d_edit = value;
					this.SendPropertyChanged("d_edit");
					this.Ond_editChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(260)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F003_LicenseDb", Storage="_LicenseDb", ThisKey="mcod", OtherKey="MedOrg")]
		public EntitySet<LicenseDb> LicenseDb
		{
			get
			{
				return this._LicenseDb;
			}
			set
			{
				this._LicenseDb.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F003_MEE_DB", Storage="_MEE_DB", ThisKey="mcod", OtherKey="LPU")]
		public EntitySet<MEE_DB> MEE_DB
		{
			get
			{
				return this._MEE_DB;
			}
			set
			{
				this._MEE_DB.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F003_SCHET_OMS", Storage="_SCHET_OMS", ThisKey="mcod", OtherKey="CODE_MO")]
		public EntitySet<SCHET_OMS> SCHET_OMS
		{
			get
			{
				return this._SCHET_OMS;
			}
			set
			{
				this._SCHET_OMS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F003_SCHET_SMO", Storage="_SCHET_SMO", ThisKey="mcod", OtherKey="CODE_MO")]
		public EntitySet<SCHET_SMO> SCHET_SMO
		{
			get
			{
				return this._SCHET_SMO;
			}
			set
			{
				this._SCHET_SMO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F003_WORK_DAY", Storage="_WORK_DAY", ThisKey="mcod", OtherKey="LPU")]
		public EntitySet<WORK_DAY> WORK_DAY
		{
			get
			{
				return this._WORK_DAY;
			}
			set
			{
				this._WORK_DAY.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F003_SLUCH", Storage="_SLUCH", ThisKey="mcod", OtherKey="LPU")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F003_SLUCH1", Storage="_SLUCH1", ThisKey="mcod", OtherKey="NPR_MO")]
		public EntitySet<SLUCH> SLUCH1
		{
			get
			{
				return this._SLUCH1;
			}
			set
			{
				this._SLUCH1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LicenseDb(LicenseDb entity)
		{
			this.SendPropertyChanging();
			entity.F003 = this;
		}
		
		private void detach_LicenseDb(LicenseDb entity)
		{
			this.SendPropertyChanging();
			entity.F003 = null;
		}
		
		private void attach_MEE_DB(MEE_DB entity)
		{
			this.SendPropertyChanging();
			entity.F003 = this;
		}
		
		private void detach_MEE_DB(MEE_DB entity)
		{
			this.SendPropertyChanging();
			entity.F003 = null;
		}
		
		private void attach_SCHET_OMS(SCHET_OMS entity)
		{
			this.SendPropertyChanging();
			entity.F003 = this;
		}
		
		private void detach_SCHET_OMS(SCHET_OMS entity)
		{
			this.SendPropertyChanging();
			entity.F003 = null;
		}
		
		private void attach_SCHET_SMO(SCHET_SMO entity)
		{
			this.SendPropertyChanging();
			entity.F003 = this;
		}
		
		private void detach_SCHET_SMO(SCHET_SMO entity)
		{
			this.SendPropertyChanging();
			entity.F003 = null;
		}
		
		private void attach_WORK_DAY(WORK_DAY entity)
		{
			this.SendPropertyChanging();
			entity.F003 = this;
		}
		
		private void detach_WORK_DAY(WORK_DAY entity)
		{
			this.SendPropertyChanging();
			entity.F003 = null;
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.F003 = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.F003 = null;
		}
		
		private void attach_SLUCH1(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.F0031 = this;
		}
		
		private void detach_SLUCH1(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.F0031 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F003_59")]
	public partial class F003_59
	{
		
		private string _tf_okato;
		
		private string _mcod;
		
		private string _nam_mop;
		
		private string _nam_mok;
		
		private string _inn;
		
		private string _Ogrn;
		
		private string _KPP;
		
		private string _index_j;
		
		private string _addr_j;
		
		private string _okopf;
		
		private string _vedpri;
		
		private string _org;
		
		private string _fam_ruk;
		
		private string _ot_ruk;
		
		private string _phone;
		
		private string _fax;
		
		private string _e_mail;
		
		private string _n_doc;
		
		private string _d_start;
		
		private string _data_e;
		
		private string _mp;
		
		private string _www;
		
		private string _d_begin;
		
		private string _d_end;
		
		private string _name_e;
		
		private string _DUVED;
		
		private System.Nullable<System.DateTime> _d_edit;
		
		public F003_59()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tf_okato", DbType="NVarChar(254)")]
		public string tf_okato
		{
			get
			{
				return this._tf_okato;
			}
			set
			{
				if ((this._tf_okato != value))
				{
					this._tf_okato = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mcod", DbType="NVarChar(254)")]
		public string mcod
		{
			get
			{
				return this._mcod;
			}
			set
			{
				if ((this._mcod != value))
				{
					this._mcod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nam_mop", DbType="NVarChar(254)")]
		public string nam_mop
		{
			get
			{
				return this._nam_mop;
			}
			set
			{
				if ((this._nam_mop != value))
				{
					this._nam_mop = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nam_mok", DbType="NVarChar(254)")]
		public string nam_mok
		{
			get
			{
				return this._nam_mok;
			}
			set
			{
				if ((this._nam_mok != value))
				{
					this._nam_mok = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inn", DbType="NVarChar(254)")]
		public string inn
		{
			get
			{
				return this._inn;
			}
			set
			{
				if ((this._inn != value))
				{
					this._inn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ogrn", DbType="NVarChar(254)")]
		public string Ogrn
		{
			get
			{
				return this._Ogrn;
			}
			set
			{
				if ((this._Ogrn != value))
				{
					this._Ogrn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPP", DbType="NVarChar(254)")]
		public string KPP
		{
			get
			{
				return this._KPP;
			}
			set
			{
				if ((this._KPP != value))
				{
					this._KPP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_index_j", DbType="NVarChar(254)")]
		public string index_j
		{
			get
			{
				return this._index_j;
			}
			set
			{
				if ((this._index_j != value))
				{
					this._index_j = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addr_j", DbType="NVarChar(254)")]
		public string addr_j
		{
			get
			{
				return this._addr_j;
			}
			set
			{
				if ((this._addr_j != value))
				{
					this._addr_j = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_okopf", DbType="NVarChar(254)")]
		public string okopf
		{
			get
			{
				return this._okopf;
			}
			set
			{
				if ((this._okopf != value))
				{
					this._okopf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vedpri", DbType="NVarChar(254)")]
		public string vedpri
		{
			get
			{
				return this._vedpri;
			}
			set
			{
				if ((this._vedpri != value))
				{
					this._vedpri = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_org", DbType="NVarChar(254)")]
		public string org
		{
			get
			{
				return this._org;
			}
			set
			{
				if ((this._org != value))
				{
					this._org = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fam_ruk", DbType="NVarChar(254)")]
		public string fam_ruk
		{
			get
			{
				return this._fam_ruk;
			}
			set
			{
				if ((this._fam_ruk != value))
				{
					this._fam_ruk = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ot_ruk", DbType="NVarChar(254)")]
		public string ot_ruk
		{
			get
			{
				return this._ot_ruk;
			}
			set
			{
				if ((this._ot_ruk != value))
				{
					this._ot_ruk = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(254)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this._phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="NVarChar(254)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this._fax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_mail", DbType="NVarChar(254)")]
		public string e_mail
		{
			get
			{
				return this._e_mail;
			}
			set
			{
				if ((this._e_mail != value))
				{
					this._e_mail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_n_doc", DbType="NVarChar(254)")]
		public string n_doc
		{
			get
			{
				return this._n_doc;
			}
			set
			{
				if ((this._n_doc != value))
				{
					this._n_doc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_start", DbType="NVarChar(254)")]
		public string d_start
		{
			get
			{
				return this._d_start;
			}
			set
			{
				if ((this._d_start != value))
				{
					this._d_start = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_e", DbType="NVarChar(254)")]
		public string data_e
		{
			get
			{
				return this._data_e;
			}
			set
			{
				if ((this._data_e != value))
				{
					this._data_e = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mp", DbType="NVarChar(254)")]
		public string mp
		{
			get
			{
				return this._mp;
			}
			set
			{
				if ((this._mp != value))
				{
					this._mp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_www", DbType="NVarChar(254)")]
		public string www
		{
			get
			{
				return this._www;
			}
			set
			{
				if ((this._www != value))
				{
					this._www = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_begin", DbType="NVarChar(254)")]
		public string d_begin
		{
			get
			{
				return this._d_begin;
			}
			set
			{
				if ((this._d_begin != value))
				{
					this._d_begin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_end", DbType="NVarChar(254)")]
		public string d_end
		{
			get
			{
				return this._d_end;
			}
			set
			{
				if ((this._d_end != value))
				{
					this._d_end = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_e", DbType="NVarChar(254)")]
		public string name_e
		{
			get
			{
				return this._name_e;
			}
			set
			{
				if ((this._name_e != value))
				{
					this._name_e = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DUVED", DbType="NVarChar(254)")]
		public string DUVED
		{
			get
			{
				return this._DUVED;
			}
			set
			{
				if ((this._DUVED != value))
				{
					this._DUVED = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_edit", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_edit
		{
			get
			{
				return this._d_edit;
			}
			set
			{
				if ((this._d_edit != value))
				{
					this._d_edit = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F003_67")]
	public partial class F003_67
	{
		
		private string _tf_okato;
		
		private string _mcod;
		
		private string _nam_mop;
		
		private string _nam_mok;
		
		private string _inn;
		
		private string _Ogrn;
		
		private string _KPP;
		
		private string _index_j;
		
		private string _addr_j;
		
		private string _okopf;
		
		private string _vedpri;
		
		private string _org;
		
		private string _fam_ruk;
		
		private string _ot_ruk;
		
		private string _phone;
		
		private string _fax;
		
		private string _e_mail;
		
		private string _n_doc;
		
		private string _d_start;
		
		private string _data_e;
		
		private string _mp;
		
		private string _www;
		
		private string _d_begin;
		
		private string _d_end;
		
		private string _name_e;
		
		private string _DUVED;
		
		private System.Nullable<System.DateTime> _d_edit;
		
		public F003_67()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tf_okato", DbType="NVarChar(254)")]
		public string tf_okato
		{
			get
			{
				return this._tf_okato;
			}
			set
			{
				if ((this._tf_okato != value))
				{
					this._tf_okato = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mcod", DbType="NVarChar(254)")]
		public string mcod
		{
			get
			{
				return this._mcod;
			}
			set
			{
				if ((this._mcod != value))
				{
					this._mcod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nam_mop", DbType="NVarChar(254)")]
		public string nam_mop
		{
			get
			{
				return this._nam_mop;
			}
			set
			{
				if ((this._nam_mop != value))
				{
					this._nam_mop = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nam_mok", DbType="NVarChar(254)")]
		public string nam_mok
		{
			get
			{
				return this._nam_mok;
			}
			set
			{
				if ((this._nam_mok != value))
				{
					this._nam_mok = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inn", DbType="NVarChar(254)")]
		public string inn
		{
			get
			{
				return this._inn;
			}
			set
			{
				if ((this._inn != value))
				{
					this._inn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ogrn", DbType="NVarChar(254)")]
		public string Ogrn
		{
			get
			{
				return this._Ogrn;
			}
			set
			{
				if ((this._Ogrn != value))
				{
					this._Ogrn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPP", DbType="NVarChar(254)")]
		public string KPP
		{
			get
			{
				return this._KPP;
			}
			set
			{
				if ((this._KPP != value))
				{
					this._KPP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_index_j", DbType="NVarChar(254)")]
		public string index_j
		{
			get
			{
				return this._index_j;
			}
			set
			{
				if ((this._index_j != value))
				{
					this._index_j = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addr_j", DbType="NVarChar(254)")]
		public string addr_j
		{
			get
			{
				return this._addr_j;
			}
			set
			{
				if ((this._addr_j != value))
				{
					this._addr_j = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_okopf", DbType="NVarChar(254)")]
		public string okopf
		{
			get
			{
				return this._okopf;
			}
			set
			{
				if ((this._okopf != value))
				{
					this._okopf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vedpri", DbType="NVarChar(254)")]
		public string vedpri
		{
			get
			{
				return this._vedpri;
			}
			set
			{
				if ((this._vedpri != value))
				{
					this._vedpri = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_org", DbType="NVarChar(254)")]
		public string org
		{
			get
			{
				return this._org;
			}
			set
			{
				if ((this._org != value))
				{
					this._org = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fam_ruk", DbType="NVarChar(254)")]
		public string fam_ruk
		{
			get
			{
				return this._fam_ruk;
			}
			set
			{
				if ((this._fam_ruk != value))
				{
					this._fam_ruk = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ot_ruk", DbType="NVarChar(254)")]
		public string ot_ruk
		{
			get
			{
				return this._ot_ruk;
			}
			set
			{
				if ((this._ot_ruk != value))
				{
					this._ot_ruk = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(254)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this._phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="NVarChar(254)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this._fax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_mail", DbType="NVarChar(254)")]
		public string e_mail
		{
			get
			{
				return this._e_mail;
			}
			set
			{
				if ((this._e_mail != value))
				{
					this._e_mail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_n_doc", DbType="NVarChar(254)")]
		public string n_doc
		{
			get
			{
				return this._n_doc;
			}
			set
			{
				if ((this._n_doc != value))
				{
					this._n_doc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_start", DbType="NVarChar(254)")]
		public string d_start
		{
			get
			{
				return this._d_start;
			}
			set
			{
				if ((this._d_start != value))
				{
					this._d_start = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_e", DbType="NVarChar(254)")]
		public string data_e
		{
			get
			{
				return this._data_e;
			}
			set
			{
				if ((this._data_e != value))
				{
					this._data_e = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mp", DbType="NVarChar(254)")]
		public string mp
		{
			get
			{
				return this._mp;
			}
			set
			{
				if ((this._mp != value))
				{
					this._mp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_www", DbType="NVarChar(254)")]
		public string www
		{
			get
			{
				return this._www;
			}
			set
			{
				if ((this._www != value))
				{
					this._www = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_begin", DbType="NVarChar(254)")]
		public string d_begin
		{
			get
			{
				return this._d_begin;
			}
			set
			{
				if ((this._d_begin != value))
				{
					this._d_begin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_end", DbType="NVarChar(254)")]
		public string d_end
		{
			get
			{
				return this._d_end;
			}
			set
			{
				if ((this._d_end != value))
				{
					this._d_end = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_e", DbType="NVarChar(254)")]
		public string name_e
		{
			get
			{
				return this._name_e;
			}
			set
			{
				if ((this._name_e != value))
				{
					this._name_e = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DUVED", DbType="NVarChar(254)")]
		public string DUVED
		{
			get
			{
				return this._DUVED;
			}
			set
			{
				if ((this._DUVED != value))
				{
					this._DUVED = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_edit", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_edit
		{
			get
			{
				return this._d_edit;
			}
			set
			{
				if ((this._d_edit != value))
				{
					this._d_edit = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F003Local")]
	public partial class F003Local : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _mcod;
		
		private string _nam_mok;
		
		private string _fam_ruk;
		
		private string _im_ruk;
		
		private string _ot_ruk;
		
		private string _phone;
		
		private string _addr_j;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmcodChanging(string value);
    partial void OnmcodChanged();
    partial void Onnam_mokChanging(string value);
    partial void Onnam_mokChanged();
    partial void Onfam_rukChanging(string value);
    partial void Onfam_rukChanged();
    partial void Onim_rukChanging(string value);
    partial void Onim_rukChanged();
    partial void Onot_rukChanging(string value);
    partial void Onot_rukChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void Onaddr_jChanging(string value);
    partial void Onaddr_jChanged();
    #endregion
		
		public F003Local()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mcod", DbType="NVarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mcod
		{
			get
			{
				return this._mcod;
			}
			set
			{
				if ((this._mcod != value))
				{
					this.OnmcodChanging(value);
					this.SendPropertyChanging();
					this._mcod = value;
					this.SendPropertyChanged("mcod");
					this.OnmcodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nam_mok", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string nam_mok
		{
			get
			{
				return this._nam_mok;
			}
			set
			{
				if ((this._nam_mok != value))
				{
					this.Onnam_mokChanging(value);
					this.SendPropertyChanging();
					this._nam_mok = value;
					this.SendPropertyChanged("nam_mok");
					this.Onnam_mokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fam_ruk", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fam_ruk
		{
			get
			{
				return this._fam_ruk;
			}
			set
			{
				if ((this._fam_ruk != value))
				{
					this.Onfam_rukChanging(value);
					this.SendPropertyChanging();
					this._fam_ruk = value;
					this.SendPropertyChanged("fam_ruk");
					this.Onfam_rukChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_im_ruk", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string im_ruk
		{
			get
			{
				return this._im_ruk;
			}
			set
			{
				if ((this._im_ruk != value))
				{
					this.Onim_rukChanging(value);
					this.SendPropertyChanging();
					this._im_ruk = value;
					this.SendPropertyChanged("im_ruk");
					this.Onim_rukChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ot_ruk", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ot_ruk
		{
			get
			{
				return this._ot_ruk;
			}
			set
			{
				if ((this._ot_ruk != value))
				{
					this.Onot_rukChanging(value);
					this.SendPropertyChanging();
					this._ot_ruk = value;
					this.SendPropertyChanged("ot_ruk");
					this.Onot_rukChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addr_j", DbType="NVarChar(254)")]
		public string addr_j
		{
			get
			{
				return this._addr_j;
			}
			set
			{
				if ((this._addr_j != value))
				{
					this.Onaddr_jChanging(value);
					this.SendPropertyChanging();
					this._addr_j = value;
					this.SendPropertyChanged("addr_j");
					this.Onaddr_jChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F004")]
	public partial class F004 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _fname;
		
		private string _surname;
		
		private string _patronymic;
		
		private System.Nullable<System.DateTime> _birth_date;
		
		private string _SNILS;
		
		private string _phone1;
		
		private string _phone2;
		
		private string _email;
		
		private string _organization_code;
		
		private string _employment_place;
		
		private string _position;
		
		private System.DateTime _date_begin;
		
		private System.Nullable<System.DateTime> _date_end;
		
		private string _exclusion_reason;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnsurnameChanging(string value);
    partial void OnsurnameChanged();
    partial void OnpatronymicChanging(string value);
    partial void OnpatronymicChanged();
    partial void Onbirth_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onbirth_dateChanged();
    partial void OnSNILSChanging(string value);
    partial void OnSNILSChanged();
    partial void Onphone1Changing(string value);
    partial void Onphone1Changed();
    partial void Onphone2Changing(string value);
    partial void Onphone2Changed();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onorganization_codeChanging(string value);
    partial void Onorganization_codeChanged();
    partial void Onemployment_placeChanging(string value);
    partial void Onemployment_placeChanged();
    partial void OnpositionChanging(string value);
    partial void OnpositionChanged();
    partial void Ondate_beginChanging(System.DateTime value);
    partial void Ondate_beginChanged();
    partial void Ondate_endChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_endChanged();
    partial void Onexclusion_reasonChanging(string value);
    partial void Onexclusion_reasonChanged();
    #endregion
		
		public F004()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surname", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string surname
		{
			get
			{
				return this._surname;
			}
			set
			{
				if ((this._surname != value))
				{
					this.OnsurnameChanging(value);
					this.SendPropertyChanging();
					this._surname = value;
					this.SendPropertyChanged("surname");
					this.OnsurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patronymic", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string patronymic
		{
			get
			{
				return this._patronymic;
			}
			set
			{
				if ((this._patronymic != value))
				{
					this.OnpatronymicChanging(value);
					this.SendPropertyChanging();
					this._patronymic = value;
					this.SendPropertyChanged("patronymic");
					this.OnpatronymicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birth_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> birth_date
		{
			get
			{
				return this._birth_date;
			}
			set
			{
				if ((this._birth_date != value))
				{
					this.Onbirth_dateChanging(value);
					this.SendPropertyChanging();
					this._birth_date = value;
					this.SendPropertyChanged("birth_date");
					this.Onbirth_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNILS", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
		public string SNILS
		{
			get
			{
				return this._SNILS;
			}
			set
			{
				if ((this._SNILS != value))
				{
					this.OnSNILSChanging(value);
					this.SendPropertyChanging();
					this._SNILS = value;
					this.SendPropertyChanged("SNILS");
					this.OnSNILSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone1", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string phone1
		{
			get
			{
				return this._phone1;
			}
			set
			{
				if ((this._phone1 != value))
				{
					this.Onphone1Changing(value);
					this.SendPropertyChanging();
					this._phone1 = value;
					this.SendPropertyChanged("phone1");
					this.Onphone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone2", DbType="NVarChar(40)")]
		public string phone2
		{
			get
			{
				return this._phone2;
			}
			set
			{
				if ((this._phone2 != value))
				{
					this.Onphone2Changing(value);
					this.SendPropertyChanging();
					this._phone2 = value;
					this.SendPropertyChanged("phone2");
					this.Onphone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organization_code", DbType="NVarChar(13) NOT NULL", CanBeNull=false)]
		public string organization_code
		{
			get
			{
				return this._organization_code;
			}
			set
			{
				if ((this._organization_code != value))
				{
					this.Onorganization_codeChanging(value);
					this.SendPropertyChanging();
					this._organization_code = value;
					this.SendPropertyChanged("organization_code");
					this.Onorganization_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employment_place", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string employment_place
		{
			get
			{
				return this._employment_place;
			}
			set
			{
				if ((this._employment_place != value))
				{
					this.Onemployment_placeChanging(value);
					this.SendPropertyChanging();
					this._employment_place = value;
					this.SendPropertyChanged("employment_place");
					this.Onemployment_placeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string position
		{
			get
			{
				return this._position;
			}
			set
			{
				if ((this._position != value))
				{
					this.OnpositionChanging(value);
					this.SendPropertyChanging();
					this._position = value;
					this.SendPropertyChanged("position");
					this.OnpositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_begin", DbType="DateTime NOT NULL")]
		public System.DateTime date_begin
		{
			get
			{
				return this._date_begin;
			}
			set
			{
				if ((this._date_begin != value))
				{
					this.Ondate_beginChanging(value);
					this.SendPropertyChanging();
					this._date_begin = value;
					this.SendPropertyChanged("date_begin");
					this.Ondate_beginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_end
		{
			get
			{
				return this._date_end;
			}
			set
			{
				if ((this._date_end != value))
				{
					this.Ondate_endChanging(value);
					this.SendPropertyChanging();
					this._date_end = value;
					this.SendPropertyChanged("date_end");
					this.Ondate_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_exclusion_reason", DbType="NVarChar(6)")]
		public string exclusion_reason
		{
			get
			{
				return this._exclusion_reason;
			}
			set
			{
				if ((this._exclusion_reason != value))
				{
					this.Onexclusion_reasonChanging(value);
					this.SendPropertyChanging();
					this._exclusion_reason = value;
					this.SendPropertyChanged("exclusion_reason");
					this.Onexclusion_reasonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F005")]
	public partial class F005 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _STNAME;
		
		private System.DateTime _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		private string _NameWithId;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnSTNAMEChanging(string value);
    partial void OnSTNAMEChanged();
    partial void OnDATEBEGChanging(System.DateTime value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    partial void OnNameWithIdChanging(string value);
    partial void OnNameWithIdChanged();
    #endregion
		
		public F005()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Decimal(1,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STNAME", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string STNAME
		{
			get
			{
				return this._STNAME;
			}
			set
			{
				if ((this._STNAME != value))
				{
					this.OnSTNAMEChanging(value);
					this.SendPropertyChanging();
					this._STNAME = value;
					this.SendPropertyChanged("STNAME");
					this.OnSTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime NOT NULL")]
		public System.DateTime DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithId", AutoSync=AutoSync.Always, DbType="NVarChar(259)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithId
		{
			get
			{
				return this._NameWithId;
			}
			set
			{
				if ((this._NameWithId != value))
				{
					this.OnNameWithIdChanging(value);
					this.SendPropertyChanging();
					this._NameWithId = value;
					this.SendPropertyChanged("NameWithId");
					this.OnNameWithIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F005_SLUCH", Storage="_SLUCH", ThisKey="Id", OtherKey="OPLATA")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.F005 = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.F005 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F006")]
	public partial class F006 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private decimal _IDVID;
		
		private string _VIDNAME;
		
		private System.DateTime _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		private string _NameWithId;
		
		private EntitySet<SANK> _SANK;
		
		private EntitySet<SANK_RE> _SANK_RE;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIDVIDChanging(decimal value);
    partial void OnIDVIDChanged();
    partial void OnVIDNAMEChanging(string value);
    partial void OnVIDNAMEChanged();
    partial void OnDATEBEGChanging(System.DateTime value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    partial void OnNameWithIdChanging(string value);
    partial void OnNameWithIdChanged();
    #endregion
		
		public F006()
		{
			this._SANK = new EntitySet<SANK>(new Action<SANK>(this.attach_SANK), new Action<SANK>(this.detach_SANK));
			this._SANK_RE = new EntitySet<SANK_RE>(new Action<SANK_RE>(this.attach_SANK_RE), new Action<SANK_RE>(this.detach_SANK_RE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVID", DbType="Decimal(1,0) NOT NULL")]
		public decimal IDVID
		{
			get
			{
				return this._IDVID;
			}
			set
			{
				if ((this._IDVID != value))
				{
					this.OnIDVIDChanging(value);
					this.SendPropertyChanging();
					this._IDVID = value;
					this.SendPropertyChanged("IDVID");
					this.OnIDVIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIDNAME", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string VIDNAME
		{
			get
			{
				return this._VIDNAME;
			}
			set
			{
				if ((this._VIDNAME != value))
				{
					this.OnVIDNAMEChanging(value);
					this.SendPropertyChanging();
					this._VIDNAME = value;
					this.SendPropertyChanged("VIDNAME");
					this.OnVIDNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime NOT NULL")]
		public System.DateTime DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithId", AutoSync=AutoSync.Always, DbType="NVarChar(259)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithId
		{
			get
			{
				return this._NameWithId;
			}
			set
			{
				if ((this._NameWithId != value))
				{
					this.OnNameWithIdChanging(value);
					this.SendPropertyChanging();
					this._NameWithId = value;
					this.SendPropertyChanged("NameWithId");
					this.OnNameWithIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F006_SANK", Storage="_SANK", ThisKey="Id", OtherKey="S_TIP")]
		public EntitySet<SANK> SANK
		{
			get
			{
				return this._SANK;
			}
			set
			{
				this._SANK.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F006_SANK_RE", Storage="_SANK_RE", ThisKey="Id", OtherKey="S_TIP")]
		public EntitySet<SANK_RE> SANK_RE
		{
			get
			{
				return this._SANK_RE;
			}
			set
			{
				this._SANK_RE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANK(SANK entity)
		{
			this.SendPropertyChanging();
			entity.F006 = this;
		}
		
		private void detach_SANK(SANK entity)
		{
			this.SendPropertyChanging();
			entity.F006 = null;
		}
		
		private void attach_SANK_RE(SANK_RE entity)
		{
			this.SendPropertyChanging();
			entity.F006 = this;
		}
		
		private void detach_SANK_RE(SANK_RE entity)
		{
			this.SendPropertyChanging();
			entity.F006 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F007")]
	public partial class F007 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private decimal _IDVED;
		
		private string _VEDNAME;
		
		private System.DateTime _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIDVEDChanging(decimal value);
    partial void OnIDVEDChanged();
    partial void OnVEDNAMEChanging(string value);
    partial void OnVEDNAMEChanged();
    partial void OnDATEBEGChanging(System.DateTime value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    #endregion
		
		public F007()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVED", DbType="Decimal(2,0) NOT NULL")]
		public decimal IDVED
		{
			get
			{
				return this._IDVED;
			}
			set
			{
				if ((this._IDVED != value))
				{
					this.OnIDVEDChanging(value);
					this.SendPropertyChanging();
					this._IDVED = value;
					this.SendPropertyChanged("IDVED");
					this.OnIDVEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VEDNAME", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string VEDNAME
		{
			get
			{
				return this._VEDNAME;
			}
			set
			{
				if ((this._VEDNAME != value))
				{
					this.OnVEDNAMEChanging(value);
					this.SendPropertyChanging();
					this._VEDNAME = value;
					this.SendPropertyChanged("VEDNAME");
					this.OnVEDNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime NOT NULL")]
		public System.DateTime DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F008")]
	public partial class F008 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private decimal _IDDOC;
		
		private string _DOCNAME;
		
		private System.DateTime _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		private string _NameWithId;
		
		private EntitySet<PACIENT> _PACIENT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIDDOCChanging(decimal value);
    partial void OnIDDOCChanged();
    partial void OnDOCNAMEChanging(string value);
    partial void OnDOCNAMEChanged();
    partial void OnDATEBEGChanging(System.DateTime value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    partial void OnNameWithIdChanging(string value);
    partial void OnNameWithIdChanged();
    #endregion
		
		public F008()
		{
			this._PACIENT = new EntitySet<PACIENT>(new Action<PACIENT>(this.attach_PACIENT), new Action<PACIENT>(this.detach_PACIENT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDOC", DbType="Decimal(1,0) NOT NULL")]
		public decimal IDDOC
		{
			get
			{
				return this._IDDOC;
			}
			set
			{
				if ((this._IDDOC != value))
				{
					this.OnIDDOCChanging(value);
					this.SendPropertyChanging();
					this._IDDOC = value;
					this.SendPropertyChanged("IDDOC");
					this.OnIDDOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCNAME", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string DOCNAME
		{
			get
			{
				return this._DOCNAME;
			}
			set
			{
				if ((this._DOCNAME != value))
				{
					this.OnDOCNAMEChanging(value);
					this.SendPropertyChanging();
					this._DOCNAME = value;
					this.SendPropertyChanged("DOCNAME");
					this.OnDOCNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime NOT NULL")]
		public System.DateTime DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithId", AutoSync=AutoSync.Always, DbType="NVarChar(259)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithId
		{
			get
			{
				return this._NameWithId;
			}
			set
			{
				if ((this._NameWithId != value))
				{
					this.OnNameWithIdChanging(value);
					this.SendPropertyChanging();
					this._NameWithId = value;
					this.SendPropertyChanged("NameWithId");
					this.OnNameWithIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F008_PACIENT", Storage="_PACIENT", ThisKey="Id", OtherKey="VPOLIS")]
		public EntitySet<PACIENT> PACIENT
		{
			get
			{
				return this._PACIENT;
			}
			set
			{
				this._PACIENT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PACIENT(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.F008 = this;
		}
		
		private void detach_PACIENT(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.F008 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F009")]
	public partial class F009 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IDStatus;
		
		private string _StatusName;
		
		private System.DateTime _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIDStatusChanging(int value);
    partial void OnIDStatusChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    #endregion
		
		public F009()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStatus", DbType="Int NOT NULL")]
		public int IDStatus
		{
			get
			{
				return this._IDStatus;
			}
			set
			{
				if ((this._IDStatus != value))
				{
					this.OnIDStatusChanging(value);
					this.SendPropertyChanging();
					this._IDStatus = value;
					this.SendPropertyChanged("IDStatus");
					this.OnIDStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime NOT NULL")]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F010")]
	public partial class F010 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _KOD_TF;
		
		private string _KOD_OKATO;
		
		private string _SUBNAME;
		
		private System.DateTime _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		private System.Nullable<decimal> _OKRUG;
		
		private string _OKATO;
		
		private EntitySet<PACIENT> _PACIENT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKOD_TFChanging(string value);
    partial void OnKOD_TFChanged();
    partial void OnKOD_OKATOChanging(string value);
    partial void OnKOD_OKATOChanged();
    partial void OnSUBNAMEChanging(string value);
    partial void OnSUBNAMEChanged();
    partial void OnDATEBEGChanging(System.DateTime value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    partial void OnOKRUGChanging(System.Nullable<decimal> value);
    partial void OnOKRUGChanged();
    partial void OnOKATOChanging(string value);
    partial void OnOKATOChanged();
    #endregion
		
		public F010()
		{
			this._PACIENT = new EntitySet<PACIENT>(new Action<PACIENT>(this.attach_PACIENT), new Action<PACIENT>(this.detach_PACIENT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KOD_TF", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string KOD_TF
		{
			get
			{
				return this._KOD_TF;
			}
			set
			{
				if ((this._KOD_TF != value))
				{
					this.OnKOD_TFChanging(value);
					this.SendPropertyChanging();
					this._KOD_TF = value;
					this.SendPropertyChanged("KOD_TF");
					this.OnKOD_TFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KOD_OKATO", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string KOD_OKATO
		{
			get
			{
				return this._KOD_OKATO;
			}
			set
			{
				if ((this._KOD_OKATO != value))
				{
					this.OnKOD_OKATOChanging(value);
					this.SendPropertyChanging();
					this._KOD_OKATO = value;
					this.SendPropertyChanged("KOD_OKATO");
					this.OnKOD_OKATOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBNAME", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string SUBNAME
		{
			get
			{
				return this._SUBNAME;
			}
			set
			{
				if ((this._SUBNAME != value))
				{
					this.OnSUBNAMEChanging(value);
					this.SendPropertyChanging();
					this._SUBNAME = value;
					this.SendPropertyChanged("SUBNAME");
					this.OnSUBNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime NOT NULL")]
		public System.DateTime DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKRUG", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> OKRUG
		{
			get
			{
				return this._OKRUG;
			}
			set
			{
				if ((this._OKRUG != value))
				{
					this.OnOKRUGChanging(value);
					this.SendPropertyChanging();
					this._OKRUG = value;
					this.SendPropertyChanged("OKRUG");
					this.OnOKRUGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKATO", AutoSync=AutoSync.Always, DbType="NVarChar(262)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string OKATO
		{
			get
			{
				return this._OKATO;
			}
			set
			{
				if ((this._OKATO != value))
				{
					this.OnOKATOChanging(value);
					this.SendPropertyChanging();
					this._OKATO = value;
					this.SendPropertyChanged("OKATO");
					this.OnOKATOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F010_PACIENT", Storage="_PACIENT", ThisKey="KOD_OKATO", OtherKey="SMO_OK")]
		public EntitySet<PACIENT> PACIENT
		{
			get
			{
				return this._PACIENT;
			}
			set
			{
				this._PACIENT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PACIENT(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.F010 = this;
		}
		
		private void detach_PACIENT(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.F010 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F011")]
	public partial class F011 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private decimal _IDDoc;
		
		private string _DocName;
		
		private string _DocSer;
		
		private string _DocNum;
		
		private System.DateTime _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		private string _NameWithID;
		
		private EntitySet<PACIENT> _PACIENT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIDDocChanging(decimal value);
    partial void OnIDDocChanged();
    partial void OnDocNameChanging(string value);
    partial void OnDocNameChanged();
    partial void OnDocSerChanging(string value);
    partial void OnDocSerChanged();
    partial void OnDocNumChanging(string value);
    partial void OnDocNumChanged();
    partial void OnDATEBEGChanging(System.DateTime value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public F011()
		{
			this._PACIENT = new EntitySet<PACIENT>(new Action<PACIENT>(this.attach_PACIENT), new Action<PACIENT>(this.detach_PACIENT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDoc", DbType="Decimal(2,0) NOT NULL")]
		public decimal IDDoc
		{
			get
			{
				return this._IDDoc;
			}
			set
			{
				if ((this._IDDoc != value))
				{
					this.OnIDDocChanging(value);
					this.SendPropertyChanging();
					this._IDDoc = value;
					this.SendPropertyChanged("IDDoc");
					this.OnIDDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocName", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string DocName
		{
			get
			{
				return this._DocName;
			}
			set
			{
				if ((this._DocName != value))
				{
					this.OnDocNameChanging(value);
					this.SendPropertyChanging();
					this._DocName = value;
					this.SendPropertyChanged("DocName");
					this.OnDocNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocSer", DbType="NVarChar(10)")]
		public string DocSer
		{
			get
			{
				return this._DocSer;
			}
			set
			{
				if ((this._DocSer != value))
				{
					this.OnDocSerChanging(value);
					this.SendPropertyChanging();
					this._DocSer = value;
					this.SendPropertyChanged("DocSer");
					this.OnDocSerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocNum", DbType="NVarChar(20)")]
		public string DocNum
		{
			get
			{
				return this._DocNum;
			}
			set
			{
				if ((this._DocNum != value))
				{
					this.OnDocNumChanging(value);
					this.SendPropertyChanging();
					this._DocNum = value;
					this.SendPropertyChanged("DocNum");
					this.OnDocNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime NOT NULL")]
		public System.DateTime DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(259)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F011_PACIENT", Storage="_PACIENT", ThisKey="Id", OtherKey="DOCTYPE")]
		public EntitySet<PACIENT> PACIENT
		{
			get
			{
				return this._PACIENT;
			}
			set
			{
				this._PACIENT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PACIENT(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.F011 = this;
		}
		
		private void detach_PACIENT(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.F011 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F012")]
	public partial class F012 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Kod;
		
		private string _Opis;
		
		private string _DopInfo;
		
		private System.DateTime _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKodChanging(string value);
    partial void OnKodChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnDopInfoChanging(string value);
    partial void OnDopInfoChanged();
    partial void OnDATEBEGChanging(System.DateTime value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    #endregion
		
		public F012()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kod", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string Kod
		{
			get
			{
				return this._Kod;
			}
			set
			{
				if ((this._Kod != value))
				{
					this.OnKodChanging(value);
					this.SendPropertyChanging();
					this._Kod = value;
					this.SendPropertyChanged("Kod");
					this.OnKodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DopInfo", DbType="NVarChar(254)")]
		public string DopInfo
		{
			get
			{
				return this._DopInfo;
			}
			set
			{
				if ((this._DopInfo != value))
				{
					this.OnDopInfoChanging(value);
					this.SendPropertyChanging();
					this._DopInfo = value;
					this.SendPropertyChanged("DopInfo");
					this.OnDopInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime NOT NULL")]
		public System.DateTime DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F013")]
	public partial class F013 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _smocod;
		
		private string _codpvp;
		
		private string _Address;
		
		private string _Phone;
		
		private System.Nullable<System.DateTime> _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnsmocodChanging(string value);
    partial void OnsmocodChanged();
    partial void OncodpvpChanging(string value);
    partial void OncodpvpChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnDATEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    #endregion
		
		public F013()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_smocod", DbType="NVarChar(5)")]
		public string smocod
		{
			get
			{
				return this._smocod;
			}
			set
			{
				if ((this._smocod != value))
				{
					this.OnsmocodChanging(value);
					this.SendPropertyChanging();
					this._smocod = value;
					this.SendPropertyChanged("smocod");
					this.OnsmocodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codpvp", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string codpvp
		{
			get
			{
				return this._codpvp;
			}
			set
			{
				if ((this._codpvp != value))
				{
					this.OncodpvpChanging(value);
					this.SendPropertyChanging();
					this._codpvp = value;
					this.SendPropertyChanged("codpvp");
					this.OncodpvpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F014")]
	public partial class F014 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Kod;
		
		private System.Nullable<int> _IDVID;
		
		private string _Naim;
		
		private string _Osn;
		
		private string _Comments;
		
		private string _KodPG;
		
		private System.Nullable<System.DateTime> _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		private string _NameWithId;
		
		private EntitySet<AKT_EKMP_TBL> _AKT_EKMP_TBL;
		
		private EntitySet<AKT_MEE_TBL> _AKT_MEE_TBL;
		
		private EntitySet<MekDb> _MekDb;
		
		private EntitySet<RMekDb> _RMekDb;
		
		private EntitySet<SANK> _SANK;
		
		private EntitySet<SANK_AUTO> _SANK_AUTO;
		
		private EntitySet<SANK_RE> _SANK_RE;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKodChanging(int value);
    partial void OnKodChanged();
    partial void OnIDVIDChanging(System.Nullable<int> value);
    partial void OnIDVIDChanged();
    partial void OnNaimChanging(string value);
    partial void OnNaimChanged();
    partial void OnOsnChanging(string value);
    partial void OnOsnChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnKodPGChanging(string value);
    partial void OnKodPGChanged();
    partial void OnDATEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    partial void OnNameWithIdChanging(string value);
    partial void OnNameWithIdChanged();
    #endregion
		
		public F014()
		{
			this._AKT_EKMP_TBL = new EntitySet<AKT_EKMP_TBL>(new Action<AKT_EKMP_TBL>(this.attach_AKT_EKMP_TBL), new Action<AKT_EKMP_TBL>(this.detach_AKT_EKMP_TBL));
			this._AKT_MEE_TBL = new EntitySet<AKT_MEE_TBL>(new Action<AKT_MEE_TBL>(this.attach_AKT_MEE_TBL), new Action<AKT_MEE_TBL>(this.detach_AKT_MEE_TBL));
			this._MekDb = new EntitySet<MekDb>(new Action<MekDb>(this.attach_MekDb), new Action<MekDb>(this.detach_MekDb));
			this._RMekDb = new EntitySet<RMekDb>(new Action<RMekDb>(this.attach_RMekDb), new Action<RMekDb>(this.detach_RMekDb));
			this._SANK = new EntitySet<SANK>(new Action<SANK>(this.attach_SANK), new Action<SANK>(this.detach_SANK));
			this._SANK_AUTO = new EntitySet<SANK_AUTO>(new Action<SANK_AUTO>(this.attach_SANK_AUTO), new Action<SANK_AUTO>(this.detach_SANK_AUTO));
			this._SANK_RE = new EntitySet<SANK_RE>(new Action<SANK_RE>(this.attach_SANK_RE), new Action<SANK_RE>(this.detach_SANK_RE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kod", DbType="Int NOT NULL")]
		public int Kod
		{
			get
			{
				return this._Kod;
			}
			set
			{
				if ((this._Kod != value))
				{
					this.OnKodChanging(value);
					this.SendPropertyChanging();
					this._Kod = value;
					this.SendPropertyChanged("Kod");
					this.OnKodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVID", DbType="Int")]
		public System.Nullable<int> IDVID
		{
			get
			{
				return this._IDVID;
			}
			set
			{
				if ((this._IDVID != value))
				{
					this.OnIDVIDChanging(value);
					this.SendPropertyChanging();
					this._IDVID = value;
					this.SendPropertyChanged("IDVID");
					this.OnIDVIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naim", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Naim
		{
			get
			{
				return this._Naim;
			}
			set
			{
				if ((this._Naim != value))
				{
					this.OnNaimChanging(value);
					this.SendPropertyChanging();
					this._Naim = value;
					this.SendPropertyChanged("Naim");
					this.OnNaimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Osn", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Osn
		{
			get
			{
				return this._Osn;
			}
			set
			{
				if ((this._Osn != value))
				{
					this.OnOsnChanging(value);
					this.SendPropertyChanging();
					this._Osn = value;
					this.SendPropertyChanged("Osn");
					this.OnOsnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(100)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KodPG", DbType="NVarChar(20)")]
		public string KodPG
		{
			get
			{
				return this._KodPG;
			}
			set
			{
				if ((this._KodPG != value))
				{
					this.OnKodPGChanging(value);
					this.SendPropertyChanging();
					this._KodPG = value;
					this.SendPropertyChanged("KodPG");
					this.OnKodPGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithId", AutoSync=AutoSync.Always, DbType="NVarChar(1007)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithId
		{
			get
			{
				return this._NameWithId;
			}
			set
			{
				if ((this._NameWithId != value))
				{
					this.OnNameWithIdChanging(value);
					this.SendPropertyChanging();
					this._NameWithId = value;
					this.SendPropertyChanged("NameWithId");
					this.OnNameWithIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F014_AKT_EKMP_TBL", Storage="_AKT_EKMP_TBL", ThisKey="Osn", OtherKey="COD_PU")]
		public EntitySet<AKT_EKMP_TBL> AKT_EKMP_TBL
		{
			get
			{
				return this._AKT_EKMP_TBL;
			}
			set
			{
				this._AKT_EKMP_TBL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F014_AKT_MEE_TBL", Storage="_AKT_MEE_TBL", ThisKey="Osn", OtherKey="COD_PU")]
		public EntitySet<AKT_MEE_TBL> AKT_MEE_TBL
		{
			get
			{
				return this._AKT_MEE_TBL;
			}
			set
			{
				this._AKT_MEE_TBL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F014_MekDb", Storage="_MekDb", ThisKey="Osn", OtherKey="Osn")]
		public EntitySet<MekDb> MekDb
		{
			get
			{
				return this._MekDb;
			}
			set
			{
				this._MekDb.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F014_RMekDb", Storage="_RMekDb", ThisKey="Osn", OtherKey="Osn")]
		public EntitySet<RMekDb> RMekDb
		{
			get
			{
				return this._RMekDb;
			}
			set
			{
				this._RMekDb.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F014_SANK", Storage="_SANK", ThisKey="Osn", OtherKey="S_OSN")]
		public EntitySet<SANK> SANK
		{
			get
			{
				return this._SANK;
			}
			set
			{
				this._SANK.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F014_SANK_AUTO", Storage="_SANK_AUTO", ThisKey="Osn", OtherKey="S_OSN")]
		public EntitySet<SANK_AUTO> SANK_AUTO
		{
			get
			{
				return this._SANK_AUTO;
			}
			set
			{
				this._SANK_AUTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F014_SANK_RE", Storage="_SANK_RE", ThisKey="Osn", OtherKey="S_OSN")]
		public EntitySet<SANK_RE> SANK_RE
		{
			get
			{
				return this._SANK_RE;
			}
			set
			{
				this._SANK_RE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AKT_EKMP_TBL(AKT_EKMP_TBL entity)
		{
			this.SendPropertyChanging();
			entity.F014 = this;
		}
		
		private void detach_AKT_EKMP_TBL(AKT_EKMP_TBL entity)
		{
			this.SendPropertyChanging();
			entity.F014 = null;
		}
		
		private void attach_AKT_MEE_TBL(AKT_MEE_TBL entity)
		{
			this.SendPropertyChanging();
			entity.F014 = this;
		}
		
		private void detach_AKT_MEE_TBL(AKT_MEE_TBL entity)
		{
			this.SendPropertyChanging();
			entity.F014 = null;
		}
		
		private void attach_MekDb(MekDb entity)
		{
			this.SendPropertyChanging();
			entity.F014 = this;
		}
		
		private void detach_MekDb(MekDb entity)
		{
			this.SendPropertyChanging();
			entity.F014 = null;
		}
		
		private void attach_RMekDb(RMekDb entity)
		{
			this.SendPropertyChanging();
			entity.F014 = this;
		}
		
		private void detach_RMekDb(RMekDb entity)
		{
			this.SendPropertyChanging();
			entity.F014 = null;
		}
		
		private void attach_SANK(SANK entity)
		{
			this.SendPropertyChanging();
			entity.F014 = this;
		}
		
		private void detach_SANK(SANK entity)
		{
			this.SendPropertyChanging();
			entity.F014 = null;
		}
		
		private void attach_SANK_AUTO(SANK_AUTO entity)
		{
			this.SendPropertyChanging();
			entity.F014 = this;
		}
		
		private void detach_SANK_AUTO(SANK_AUTO entity)
		{
			this.SendPropertyChanging();
			entity.F014 = null;
		}
		
		private void attach_SANK_RE(SANK_RE entity)
		{
			this.SendPropertyChanging();
			entity.F014 = this;
		}
		
		private void detach_SANK_RE(SANK_RE entity)
		{
			this.SendPropertyChanging();
			entity.F014 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F015")]
	public partial class F015 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<decimal> _KOD_OK;
		
		private string _OKRNAME;
		
		private System.Nullable<System.DateTime> _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKOD_OKChanging(System.Nullable<decimal> value);
    partial void OnKOD_OKChanged();
    partial void OnOKRNAMEChanging(string value);
    partial void OnOKRNAMEChanged();
    partial void OnDATEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    #endregion
		
		public F015()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KOD_OK", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> KOD_OK
		{
			get
			{
				return this._KOD_OK;
			}
			set
			{
				if ((this._KOD_OK != value))
				{
					this.OnKOD_OKChanging(value);
					this.SendPropertyChanging();
					this._KOD_OK = value;
					this.SendPropertyChanged("KOD_OK");
					this.OnKOD_OKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKRNAME", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string OKRNAME
		{
			get
			{
				return this._OKRNAME;
			}
			set
			{
				if ((this._OKRNAME != value))
				{
					this.OnOKRNAMEChanging(value);
					this.SendPropertyChanging();
					this._OKRNAME = value;
					this.SendPropertyChanged("OKRNAME");
					this.OnOKRNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FREP")]
	public partial class FREP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private System.Nullable<int> _RNUMBER;
		
		private System.Nullable<int> _SCHET_ID;
		
		private System.Nullable<int> _RTYPE;
		
		private string _RBODY;
		
		private System.Nullable<System.DateTime> _RDATE;
		
		private System.Nullable<int> _USERID;
		
		private EntityRef<Users> _Users;
		
		private EntityRef<SCHET> _SCHET;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnRNUMBERChanging(System.Nullable<int> value);
    partial void OnRNUMBERChanged();
    partial void OnSCHET_IDChanging(System.Nullable<int> value);
    partial void OnSCHET_IDChanged();
    partial void OnRTYPEChanging(System.Nullable<int> value);
    partial void OnRTYPEChanged();
    partial void OnRBODYChanging(string value);
    partial void OnRBODYChanged();
    partial void OnRDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnRDATEChanged();
    partial void OnUSERIDChanging(System.Nullable<int> value);
    partial void OnUSERIDChanged();
    #endregion
		
		public FREP()
		{
			this._Users = default(EntityRef<Users>);
			this._SCHET = default(EntityRef<SCHET>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(250)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RNUMBER", DbType="Int")]
		public System.Nullable<int> RNUMBER
		{
			get
			{
				return this._RNUMBER;
			}
			set
			{
				if ((this._RNUMBER != value))
				{
					this.OnRNUMBERChanging(value);
					this.SendPropertyChanging();
					this._RNUMBER = value;
					this.SendPropertyChanged("RNUMBER");
					this.OnRNUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHET_ID", DbType="Int")]
		public System.Nullable<int> SCHET_ID
		{
			get
			{
				return this._SCHET_ID;
			}
			set
			{
				if ((this._SCHET_ID != value))
				{
					if (this._SCHET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSCHET_IDChanging(value);
					this.SendPropertyChanging();
					this._SCHET_ID = value;
					this.SendPropertyChanged("SCHET_ID");
					this.OnSCHET_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RTYPE", DbType="Int")]
		public System.Nullable<int> RTYPE
		{
			get
			{
				return this._RTYPE;
			}
			set
			{
				if ((this._RTYPE != value))
				{
					this.OnRTYPEChanging(value);
					this.SendPropertyChanging();
					this._RTYPE = value;
					this.SendPropertyChanged("RTYPE");
					this.OnRTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RBODY", DbType="NVarChar(MAX)")]
		public string RBODY
		{
			get
			{
				return this._RBODY;
			}
			set
			{
				if ((this._RBODY != value))
				{
					this.OnRBODYChanging(value);
					this.SendPropertyChanging();
					this._RBODY = value;
					this.SendPropertyChanged("RBODY");
					this.OnRBODYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> RDATE
		{
			get
			{
				return this._RDATE;
			}
			set
			{
				if ((this._RDATE != value))
				{
					this.OnRDATEChanging(value);
					this.SendPropertyChanging();
					this._RDATE = value;
					this.SendPropertyChanged("RDATE");
					this.OnRDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="Int")]
		public System.Nullable<int> USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_FREP", Storage="_Users", ThisKey="USERID", OtherKey="id", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.FREP.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.FREP.Add(this);
						this._USERID = value.id;
					}
					else
					{
						this._USERID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHET_FREP", Storage="_SCHET", ThisKey="SCHET_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public SCHET SCHET
		{
			get
			{
				return this._SCHET.Entity;
			}
			set
			{
				SCHET previousValue = this._SCHET.Entity;
				if (((previousValue != value) 
							|| (this._SCHET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCHET.Entity = null;
						previousValue.FREP.Remove(this);
					}
					this._SCHET.Entity = value;
					if ((value != null))
					{
						value.FREP.Add(this);
						this._SCHET_ID = value.ID;
					}
					else
					{
						this._SCHET_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SCHET");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gospit")]
	public partial class Gospit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _NameWithId;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIdChanging(string value);
    partial void OnNameWithIdChanged();
    #endregion
		
		public Gospit()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithId", AutoSync=AutoSync.Always, DbType="VarChar(53)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithId
		{
			get
			{
				return this._NameWithId;
			}
			set
			{
				if ((this._NameWithId != value))
				{
					this.OnNameWithIdChanging(value);
					this.SendPropertyChanging();
					this._NameWithId = value;
					this.SendPropertyChanged("NameWithId");
					this.OnNameWithIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gospit_SLUCH", Storage="_SLUCH", ThisKey="ID", OtherKey="GOSP")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.Gospit = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.Gospit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GrZdorovDb")]
	public partial class GrZdorovDb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _NameWithID;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public GrZdorovDb()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="VarChar(54)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GrZdorovDb_SLUCH", Storage="_SLUCH", ThisKey="Id", OtherKey="GR_ZDOROV")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.GrZdorovDb = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.GrZdorovDb = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KatLgot")]
	public partial class KatLgot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _NameWithId;
		
		private EntitySet<PACIENT> _PACIENT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIdChanging(string value);
    partial void OnNameWithIdChanged();
    #endregion
		
		public KatLgot()
		{
			this._PACIENT = new EntitySet<PACIENT>(new Action<PACIENT>(this.attach_PACIENT), new Action<PACIENT>(this.detach_PACIENT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithId", AutoSync=AutoSync.Always, DbType="VarChar(53)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithId
		{
			get
			{
				return this._NameWithId;
			}
			set
			{
				if ((this._NameWithId != value))
				{
					this.OnNameWithIdChanging(value);
					this.SendPropertyChanging();
					this._NameWithId = value;
					this.SendPropertyChanged("NameWithId");
					this.OnNameWithIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KatLgot_PACIENT", Storage="_PACIENT", ThisKey="ID", OtherKey="KAT_LGOT")]
		public EntitySet<PACIENT> PACIENT
		{
			get
			{
				return this._PACIENT;
			}
			set
			{
				this._PACIENT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PACIENT(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.KatLgot = this;
		}
		
		private void detach_PACIENT(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.KatLgot = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KodTer")]
	public partial class KodTer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _NameWithId;
		
		private EntitySet<PACIENT> _PACIENT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIdChanging(string value);
    partial void OnNameWithIdChanged();
    #endregion
		
		public KodTer()
		{
			this._PACIENT = new EntitySet<PACIENT>(new Action<PACIENT>(this.attach_PACIENT), new Action<PACIENT>(this.detach_PACIENT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithId", AutoSync=AutoSync.Always, DbType="VarChar(53)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithId
		{
			get
			{
				return this._NameWithId;
			}
			set
			{
				if ((this._NameWithId != value))
				{
					this.OnNameWithIdChanging(value);
					this.SendPropertyChanging();
					this._NameWithId = value;
					this.SendPropertyChanged("NameWithId");
					this.OnNameWithIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KodTer_PACIENT", Storage="_PACIENT", ThisKey="ID", OtherKey="KOD_TER")]
		public EntitySet<PACIENT> PACIENT
		{
			get
			{
				return this._PACIENT;
			}
			set
			{
				this._PACIENT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PACIENT(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.KodTer = this;
		}
		
		private void detach_PACIENT(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.KodTer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ksg_avg")]
	public partial class ksg_avg
	{
		
		private System.Nullable<short> _idksg;
		
		private System.Nullable<short> _god;
		
		private System.Nullable<byte> _mes;
		
		private System.Nullable<byte> _usl_ok;
		
		private System.Nullable<short> _norm;
		
		public ksg_avg()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idksg", DbType="SmallInt")]
		public System.Nullable<short> idksg
		{
			get
			{
				return this._idksg;
			}
			set
			{
				if ((this._idksg != value))
				{
					this._idksg = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_god", DbType="SmallInt")]
		public System.Nullable<short> god
		{
			get
			{
				return this._god;
			}
			set
			{
				if ((this._god != value))
				{
					this._god = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mes", DbType="TinyInt")]
		public System.Nullable<byte> mes
		{
			get
			{
				return this._mes;
			}
			set
			{
				if ((this._mes != value))
				{
					this._mes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usl_ok", DbType="TinyInt")]
		public System.Nullable<byte> usl_ok
		{
			get
			{
				return this._usl_ok;
			}
			set
			{
				if ((this._usl_ok != value))
				{
					this._usl_ok = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_norm", DbType="SmallInt")]
		public System.Nullable<short> norm
		{
			get
			{
				return this._norm;
			}
			set
			{
				if ((this._norm != value))
				{
					this._norm = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KSG_GR")]
	public partial class KSG_GR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DS;
		
		private string _USL;
		
		private System.Nullable<int> _VOZR;
		
		private string _POL;
		
		private System.Nullable<int> _DLIT;
		
		private System.Nullable<int> _KSG;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDSChanging(string value);
    partial void OnDSChanged();
    partial void OnUSLChanging(string value);
    partial void OnUSLChanged();
    partial void OnVOZRChanging(System.Nullable<int> value);
    partial void OnVOZRChanged();
    partial void OnPOLChanging(string value);
    partial void OnPOLChanged();
    partial void OnDLITChanging(System.Nullable<int> value);
    partial void OnDLITChanged();
    partial void OnKSGChanging(System.Nullable<int> value);
    partial void OnKSGChanged();
    #endregion
		
		public KSG_GR()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS", DbType="NVarChar(10)")]
		public string DS
		{
			get
			{
				return this._DS;
			}
			set
			{
				if ((this._DS != value))
				{
					this.OnDSChanging(value);
					this.SendPropertyChanging();
					this._DS = value;
					this.SendPropertyChanged("DS");
					this.OnDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USL", DbType="NVarChar(16)")]
		public string USL
		{
			get
			{
				return this._USL;
			}
			set
			{
				if ((this._USL != value))
				{
					this.OnUSLChanging(value);
					this.SendPropertyChanging();
					this._USL = value;
					this.SendPropertyChanged("USL");
					this.OnUSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VOZR", DbType="Int")]
		public System.Nullable<int> VOZR
		{
			get
			{
				return this._VOZR;
			}
			set
			{
				if ((this._VOZR != value))
				{
					this.OnVOZRChanging(value);
					this.SendPropertyChanging();
					this._VOZR = value;
					this.SendPropertyChanged("VOZR");
					this.OnVOZRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POL", DbType="NVarChar(1)")]
		public string POL
		{
			get
			{
				return this._POL;
			}
			set
			{
				if ((this._POL != value))
				{
					this.OnPOLChanging(value);
					this.SendPropertyChanging();
					this._POL = value;
					this.SendPropertyChanged("POL");
					this.OnPOLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLIT", DbType="Int")]
		public System.Nullable<int> DLIT
		{
			get
			{
				return this._DLIT;
			}
			set
			{
				if ((this._DLIT != value))
				{
					this.OnDLITChanging(value);
					this.SendPropertyChanging();
					this._DLIT = value;
					this.SendPropertyChanged("DLIT");
					this.OnDLITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG", DbType="Int")]
		public System.Nullable<int> KSG
		{
			get
			{
				return this._KSG;
			}
			set
			{
				if ((this._KSG != value))
				{
					this.OnKSGChanging(value);
					this.SendPropertyChanging();
					this._KSG = value;
					this.SendPropertyChanged("KSG");
					this.OnKSGChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KSG_GROUP")]
	public partial class KSG_GROUP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _KSG_ID;
		
		private string _KSG_NAME;
		
		private string _IDS_MKB;
		
		private System.Nullable<int> _NORM;
		
		private decimal _TARIF3;
		
		private decimal _TARIF4;
		
		private decimal _K_TARIF;
		
		private System.Nullable<int> _ORDERID;
		
		private decimal _TARIF1;
		
		private decimal _TARIF2;
		
		private decimal _D_TARIF;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnKSG_IDChanging(string value);
    partial void OnKSG_IDChanged();
    partial void OnKSG_NAMEChanging(string value);
    partial void OnKSG_NAMEChanged();
    partial void OnIDS_MKBChanging(string value);
    partial void OnIDS_MKBChanged();
    partial void OnNORMChanging(System.Nullable<int> value);
    partial void OnNORMChanged();
    partial void OnTARIF3Changing(decimal value);
    partial void OnTARIF3Changed();
    partial void OnTARIF4Changing(decimal value);
    partial void OnTARIF4Changed();
    partial void OnK_TARIFChanging(decimal value);
    partial void OnK_TARIFChanged();
    partial void OnORDERIDChanging(System.Nullable<int> value);
    partial void OnORDERIDChanged();
    partial void OnTARIF1Changing(decimal value);
    partial void OnTARIF1Changed();
    partial void OnTARIF2Changing(decimal value);
    partial void OnTARIF2Changed();
    partial void OnD_TARIFChanging(decimal value);
    partial void OnD_TARIFChanged();
    #endregion
		
		public KSG_GROUP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG_ID", DbType="VarChar(10)")]
		public string KSG_ID
		{
			get
			{
				return this._KSG_ID;
			}
			set
			{
				if ((this._KSG_ID != value))
				{
					this.OnKSG_IDChanging(value);
					this.SendPropertyChanging();
					this._KSG_ID = value;
					this.SendPropertyChanged("KSG_ID");
					this.OnKSG_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG_NAME", DbType="VarChar(200)")]
		public string KSG_NAME
		{
			get
			{
				return this._KSG_NAME;
			}
			set
			{
				if ((this._KSG_NAME != value))
				{
					this.OnKSG_NAMEChanging(value);
					this.SendPropertyChanging();
					this._KSG_NAME = value;
					this.SendPropertyChanged("KSG_NAME");
					this.OnKSG_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDS_MKB", DbType="NVarChar(MAX)")]
		public string IDS_MKB
		{
			get
			{
				return this._IDS_MKB;
			}
			set
			{
				if ((this._IDS_MKB != value))
				{
					this.OnIDS_MKBChanging(value);
					this.SendPropertyChanging();
					this._IDS_MKB = value;
					this.SendPropertyChanged("IDS_MKB");
					this.OnIDS_MKBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NORM", DbType="Int")]
		public System.Nullable<int> NORM
		{
			get
			{
				return this._NORM;
			}
			set
			{
				if ((this._NORM != value))
				{
					this.OnNORMChanging(value);
					this.SendPropertyChanging();
					this._NORM = value;
					this.SendPropertyChanged("NORM");
					this.OnNORMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF3", DbType="Decimal(15,2) NOT NULL")]
		public decimal TARIF3
		{
			get
			{
				return this._TARIF3;
			}
			set
			{
				if ((this._TARIF3 != value))
				{
					this.OnTARIF3Changing(value);
					this.SendPropertyChanging();
					this._TARIF3 = value;
					this.SendPropertyChanged("TARIF3");
					this.OnTARIF3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF4", DbType="Decimal(15,2) NOT NULL")]
		public decimal TARIF4
		{
			get
			{
				return this._TARIF4;
			}
			set
			{
				if ((this._TARIF4 != value))
				{
					this.OnTARIF4Changing(value);
					this.SendPropertyChanging();
					this._TARIF4 = value;
					this.SendPropertyChanged("TARIF4");
					this.OnTARIF4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K_TARIF", DbType="Decimal(15,4) NOT NULL")]
		public decimal K_TARIF
		{
			get
			{
				return this._K_TARIF;
			}
			set
			{
				if ((this._K_TARIF != value))
				{
					this.OnK_TARIFChanging(value);
					this.SendPropertyChanging();
					this._K_TARIF = value;
					this.SendPropertyChanged("K_TARIF");
					this.OnK_TARIFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDERID", DbType="Int")]
		public System.Nullable<int> ORDERID
		{
			get
			{
				return this._ORDERID;
			}
			set
			{
				if ((this._ORDERID != value))
				{
					this.OnORDERIDChanging(value);
					this.SendPropertyChanging();
					this._ORDERID = value;
					this.SendPropertyChanged("ORDERID");
					this.OnORDERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF1", DbType="Decimal(15,2) NOT NULL")]
		public decimal TARIF1
		{
			get
			{
				return this._TARIF1;
			}
			set
			{
				if ((this._TARIF1 != value))
				{
					this.OnTARIF1Changing(value);
					this.SendPropertyChanging();
					this._TARIF1 = value;
					this.SendPropertyChanged("TARIF1");
					this.OnTARIF1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF2", DbType="Decimal(15,2) NOT NULL")]
		public decimal TARIF2
		{
			get
			{
				return this._TARIF2;
			}
			set
			{
				if ((this._TARIF2 != value))
				{
					this.OnTARIF2Changing(value);
					this.SendPropertyChanging();
					this._TARIF2 = value;
					this.SendPropertyChanged("TARIF2");
					this.OnTARIF2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D_TARIF", DbType="Decimal(15,4) NOT NULL")]
		public decimal D_TARIF
		{
			get
			{
				return this._D_TARIF;
			}
			set
			{
				if ((this._D_TARIF != value))
				{
					this.OnD_TARIFChanging(value);
					this.SendPropertyChanging();
					this._D_TARIF = value;
					this.SendPropertyChanged("D_TARIF");
					this.OnD_TARIFChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KSG_K")]
	public partial class KSG_K : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LPU;
		
		private decimal _K_TARIF;
		
		private decimal _D_TARIF;
		
		private System.DateTime _K_START;
		
		private System.DateTime _K_END;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLPUChanging(string value);
    partial void OnLPUChanged();
    partial void OnK_TARIFChanging(decimal value);
    partial void OnK_TARIFChanged();
    partial void OnD_TARIFChanging(decimal value);
    partial void OnD_TARIFChanged();
    partial void OnK_STARTChanging(System.DateTime value);
    partial void OnK_STARTChanged();
    partial void OnK_ENDChanging(System.DateTime value);
    partial void OnK_ENDChanged();
    #endregion
		
		public KSG_K()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPU", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string LPU
		{
			get
			{
				return this._LPU;
			}
			set
			{
				if ((this._LPU != value))
				{
					this.OnLPUChanging(value);
					this.SendPropertyChanging();
					this._LPU = value;
					this.SendPropertyChanged("LPU");
					this.OnLPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K_TARIF", DbType="Decimal(15,4) NOT NULL")]
		public decimal K_TARIF
		{
			get
			{
				return this._K_TARIF;
			}
			set
			{
				if ((this._K_TARIF != value))
				{
					this.OnK_TARIFChanging(value);
					this.SendPropertyChanging();
					this._K_TARIF = value;
					this.SendPropertyChanged("K_TARIF");
					this.OnK_TARIFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D_TARIF", DbType="Decimal(15,4) NOT NULL")]
		public decimal D_TARIF
		{
			get
			{
				return this._D_TARIF;
			}
			set
			{
				if ((this._D_TARIF != value))
				{
					this.OnD_TARIFChanging(value);
					this.SendPropertyChanging();
					this._D_TARIF = value;
					this.SendPropertyChanged("D_TARIF");
					this.OnD_TARIFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K_START", DbType="DateTime NOT NULL")]
		public System.DateTime K_START
		{
			get
			{
				return this._K_START;
			}
			set
			{
				if ((this._K_START != value))
				{
					this.OnK_STARTChanging(value);
					this.SendPropertyChanging();
					this._K_START = value;
					this.SendPropertyChanged("K_START");
					this.OnK_STARTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K_END", DbType="DateTime NOT NULL")]
		public System.DateTime K_END
		{
			get
			{
				return this._K_END;
			}
			set
			{
				if ((this._K_END != value))
				{
					this.OnK_ENDChanging(value);
					this.SendPropertyChanging();
					this._K_END = value;
					this.SendPropertyChanged("K_END");
					this.OnK_ENDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KSG_OT")]
	public partial class KSG_OT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _NameWithID;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public KSG_OT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="VarChar(54)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KSG_SOD")]
	public partial class KSG_SOD
	{
		
		private int _id;
		
		private decimal _S_TARIF;
		
		private System.DateTime _TarifDateStart;
		
		private System.DateTime _TarifDateEnd;
		
		public KSG_SOD()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_TARIF", DbType="Decimal(15,4) NOT NULL")]
		public decimal S_TARIF
		{
			get
			{
				return this._S_TARIF;
			}
			set
			{
				if ((this._S_TARIF != value))
				{
					this._S_TARIF = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TarifDateStart", DbType="DateTime NOT NULL")]
		public System.DateTime TarifDateStart
		{
			get
			{
				return this._TarifDateStart;
			}
			set
			{
				if ((this._TarifDateStart != value))
				{
					this._TarifDateStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TarifDateEnd", DbType="DateTime NOT NULL")]
		public System.DateTime TarifDateEnd
		{
			get
			{
				return this._TarifDateEnd;
			}
			set
			{
				if ((this._TarifDateEnd != value))
				{
					this._TarifDateEnd = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KSG_SPR")]
	public partial class KSG_SPR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _KSG;
		
		private string _NAME;
		
		private string _KPG;
		
		private string _PROFIL;
		
		private System.Nullable<decimal> _KZ;
		
		private System.Nullable<decimal> _TS;
		
		private System.Nullable<decimal> _TDS;
		
		private System.Nullable<int> _SL;
		
		private System.Nullable<decimal> _UPR_K;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnKSGChanging(System.Nullable<int> value);
    partial void OnKSGChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnKPGChanging(string value);
    partial void OnKPGChanged();
    partial void OnPROFILChanging(string value);
    partial void OnPROFILChanged();
    partial void OnKZChanging(System.Nullable<decimal> value);
    partial void OnKZChanged();
    partial void OnTSChanging(System.Nullable<decimal> value);
    partial void OnTSChanged();
    partial void OnTDSChanging(System.Nullable<decimal> value);
    partial void OnTDSChanged();
    partial void OnSLChanging(System.Nullable<int> value);
    partial void OnSLChanged();
    partial void OnUPR_KChanging(System.Nullable<decimal> value);
    partial void OnUPR_KChanged();
    #endregion
		
		public KSG_SPR()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG", DbType="Int")]
		public System.Nullable<int> KSG
		{
			get
			{
				return this._KSG;
			}
			set
			{
				if ((this._KSG != value))
				{
					this.OnKSGChanging(value);
					this.SendPropertyChanging();
					this._KSG = value;
					this.SendPropertyChanged("KSG");
					this.OnKSGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(255)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPG", DbType="NVarChar(255)")]
		public string KPG
		{
			get
			{
				return this._KPG;
			}
			set
			{
				if ((this._KPG != value))
				{
					this.OnKPGChanging(value);
					this.SendPropertyChanging();
					this._KPG = value;
					this.SendPropertyChanged("KPG");
					this.OnKPGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROFIL", DbType="NVarChar(255)")]
		public string PROFIL
		{
			get
			{
				return this._PROFIL;
			}
			set
			{
				if ((this._PROFIL != value))
				{
					this.OnPROFILChanging(value);
					this.SendPropertyChanging();
					this._PROFIL = value;
					this.SendPropertyChanged("PROFIL");
					this.OnPROFILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KZ", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> KZ
		{
			get
			{
				return this._KZ;
			}
			set
			{
				if ((this._KZ != value))
				{
					this.OnKZChanging(value);
					this.SendPropertyChanging();
					this._KZ = value;
					this.SendPropertyChanged("KZ");
					this.OnKZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> TS
		{
			get
			{
				return this._TS;
			}
			set
			{
				if ((this._TS != value))
				{
					this.OnTSChanging(value);
					this.SendPropertyChanging();
					this._TS = value;
					this.SendPropertyChanged("TS");
					this.OnTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDS", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> TDS
		{
			get
			{
				return this._TDS;
			}
			set
			{
				if ((this._TDS != value))
				{
					this.OnTDSChanging(value);
					this.SendPropertyChanging();
					this._TDS = value;
					this.SendPropertyChanged("TDS");
					this.OnTDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL", DbType="Int")]
		public System.Nullable<int> SL
		{
			get
			{
				return this._SL;
			}
			set
			{
				if ((this._SL != value))
				{
					this.OnSLChanging(value);
					this.SendPropertyChanging();
					this._SL = value;
					this.SendPropertyChanged("SL");
					this.OnSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPR_K", DbType="Decimal(5,4)")]
		public System.Nullable<decimal> UPR_K
		{
			get
			{
				return this._UPR_K;
			}
			set
			{
				if ((this._UPR_K != value))
				{
					this.OnUPR_KChanging(value);
					this.SendPropertyChanging();
					this._UPR_K = value;
					this.SendPropertyChanged("UPR_K");
					this.OnUPR_KChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIC_NUM_TBL")]
	public partial class LIC_NUM_TBL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LPU;
		
		private System.Nullable<System.DateTime> _DATE_1;
		
		private System.Nullable<System.DateTime> _DATE_2;
		
		private System.Nullable<System.DateTime> _DATE_3;
		
		private string _LICN;
		
		private string _VID_MP;
		
		private EntitySet<LIC_TBL> _LIC_TBL;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLPUChanging(string value);
    partial void OnLPUChanged();
    partial void OnDATE_1Changing(System.Nullable<System.DateTime> value);
    partial void OnDATE_1Changed();
    partial void OnDATE_2Changing(System.Nullable<System.DateTime> value);
    partial void OnDATE_2Changed();
    partial void OnDATE_3Changing(System.Nullable<System.DateTime> value);
    partial void OnDATE_3Changed();
    partial void OnLICNChanging(string value);
    partial void OnLICNChanged();
    partial void OnVID_MPChanging(string value);
    partial void OnVID_MPChanged();
    #endregion
		
		public LIC_NUM_TBL()
		{
			this._LIC_TBL = new EntitySet<LIC_TBL>(new Action<LIC_TBL>(this.attach_LIC_TBL), new Action<LIC_TBL>(this.detach_LIC_TBL));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPU", DbType="NVarChar(6)")]
		public string LPU
		{
			get
			{
				return this._LPU;
			}
			set
			{
				if ((this._LPU != value))
				{
					this.OnLPUChanging(value);
					this.SendPropertyChanging();
					this._LPU = value;
					this.SendPropertyChanged("LPU");
					this.OnLPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_1", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_1
		{
			get
			{
				return this._DATE_1;
			}
			set
			{
				if ((this._DATE_1 != value))
				{
					this.OnDATE_1Changing(value);
					this.SendPropertyChanging();
					this._DATE_1 = value;
					this.SendPropertyChanged("DATE_1");
					this.OnDATE_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_2", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_2
		{
			get
			{
				return this._DATE_2;
			}
			set
			{
				if ((this._DATE_2 != value))
				{
					this.OnDATE_2Changing(value);
					this.SendPropertyChanging();
					this._DATE_2 = value;
					this.SendPropertyChanged("DATE_2");
					this.OnDATE_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_3", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_3
		{
			get
			{
				return this._DATE_3;
			}
			set
			{
				if ((this._DATE_3 != value))
				{
					this.OnDATE_3Changing(value);
					this.SendPropertyChanging();
					this._DATE_3 = value;
					this.SendPropertyChanged("DATE_3");
					this.OnDATE_3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICN", DbType="NVarChar(255)")]
		public string LICN
		{
			get
			{
				return this._LICN;
			}
			set
			{
				if ((this._LICN != value))
				{
					this.OnLICNChanging(value);
					this.SendPropertyChanging();
					this._LICN = value;
					this.SendPropertyChanged("LICN");
					this.OnLICNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VID_MP", DbType="NVarChar(255)")]
		public string VID_MP
		{
			get
			{
				return this._VID_MP;
			}
			set
			{
				if ((this._VID_MP != value))
				{
					this.OnVID_MPChanging(value);
					this.SendPropertyChanging();
					this._VID_MP = value;
					this.SendPropertyChanged("VID_MP");
					this.OnVID_MPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LIC_NUM_TBL_LIC_TBL", Storage="_LIC_TBL", ThisKey="ID", OtherKey="LIC_NUM_ID")]
		public EntitySet<LIC_TBL> LIC_TBL
		{
			get
			{
				return this._LIC_TBL;
			}
			set
			{
				this._LIC_TBL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LIC_TBL(LIC_TBL entity)
		{
			this.SendPropertyChanging();
			entity.LIC_NUM_TBL = this;
		}
		
		private void detach_LIC_TBL(LIC_TBL entity)
		{
			this.SendPropertyChanging();
			entity.LIC_NUM_TBL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIC_TBL")]
	public partial class LIC_TBL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _LIC_NUM_ID;
		
		private string _LPU;
		
		private int _USL_MP;
		
		private int _VID_MP;
		
		private int _PROFIL;
		
		private EntityRef<LIC_NUM_TBL> _LIC_NUM_TBL;
		
		private EntityRef<V002> _V002;
		
		private EntityRef<V006> _V006;
		
		private EntityRef<V008> _V008;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLIC_NUM_IDChanging(int value);
    partial void OnLIC_NUM_IDChanged();
    partial void OnLPUChanging(string value);
    partial void OnLPUChanged();
    partial void OnUSL_MPChanging(int value);
    partial void OnUSL_MPChanged();
    partial void OnVID_MPChanging(int value);
    partial void OnVID_MPChanged();
    partial void OnPROFILChanging(int value);
    partial void OnPROFILChanged();
    #endregion
		
		public LIC_TBL()
		{
			this._LIC_NUM_TBL = default(EntityRef<LIC_NUM_TBL>);
			this._V002 = default(EntityRef<V002>);
			this._V006 = default(EntityRef<V006>);
			this._V008 = default(EntityRef<V008>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIC_NUM_ID", DbType="Int NOT NULL")]
		public int LIC_NUM_ID
		{
			get
			{
				return this._LIC_NUM_ID;
			}
			set
			{
				if ((this._LIC_NUM_ID != value))
				{
					if (this._LIC_NUM_TBL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLIC_NUM_IDChanging(value);
					this.SendPropertyChanging();
					this._LIC_NUM_ID = value;
					this.SendPropertyChanged("LIC_NUM_ID");
					this.OnLIC_NUM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPU", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string LPU
		{
			get
			{
				return this._LPU;
			}
			set
			{
				if ((this._LPU != value))
				{
					this.OnLPUChanging(value);
					this.SendPropertyChanging();
					this._LPU = value;
					this.SendPropertyChanged("LPU");
					this.OnLPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USL_MP", DbType="Int NOT NULL")]
		public int USL_MP
		{
			get
			{
				return this._USL_MP;
			}
			set
			{
				if ((this._USL_MP != value))
				{
					if (this._V006.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSL_MPChanging(value);
					this.SendPropertyChanging();
					this._USL_MP = value;
					this.SendPropertyChanged("USL_MP");
					this.OnUSL_MPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VID_MP", DbType="Int NOT NULL")]
		public int VID_MP
		{
			get
			{
				return this._VID_MP;
			}
			set
			{
				if ((this._VID_MP != value))
				{
					if (this._V008.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVID_MPChanging(value);
					this.SendPropertyChanging();
					this._VID_MP = value;
					this.SendPropertyChanged("VID_MP");
					this.OnVID_MPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROFIL", DbType="Int NOT NULL")]
		public int PROFIL
		{
			get
			{
				return this._PROFIL;
			}
			set
			{
				if ((this._PROFIL != value))
				{
					if (this._V002.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPROFILChanging(value);
					this.SendPropertyChanging();
					this._PROFIL = value;
					this.SendPropertyChanged("PROFIL");
					this.OnPROFILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LIC_NUM_TBL_LIC_TBL", Storage="_LIC_NUM_TBL", ThisKey="LIC_NUM_ID", OtherKey="ID", IsForeignKey=true)]
		public LIC_NUM_TBL LIC_NUM_TBL
		{
			get
			{
				return this._LIC_NUM_TBL.Entity;
			}
			set
			{
				LIC_NUM_TBL previousValue = this._LIC_NUM_TBL.Entity;
				if (((previousValue != value) 
							|| (this._LIC_NUM_TBL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LIC_NUM_TBL.Entity = null;
						previousValue.LIC_TBL.Remove(this);
					}
					this._LIC_NUM_TBL.Entity = value;
					if ((value != null))
					{
						value.LIC_TBL.Add(this);
						this._LIC_NUM_ID = value.ID;
					}
					else
					{
						this._LIC_NUM_ID = default(int);
					}
					this.SendPropertyChanged("LIC_NUM_TBL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V002_LIC_TBL", Storage="_V002", ThisKey="PROFIL", OtherKey="Id", IsForeignKey=true)]
		public V002 V002
		{
			get
			{
				return this._V002.Entity;
			}
			set
			{
				V002 previousValue = this._V002.Entity;
				if (((previousValue != value) 
							|| (this._V002.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V002.Entity = null;
						previousValue.LIC_TBL.Remove(this);
					}
					this._V002.Entity = value;
					if ((value != null))
					{
						value.LIC_TBL.Add(this);
						this._PROFIL = value.Id;
					}
					else
					{
						this._PROFIL = default(int);
					}
					this.SendPropertyChanged("V002");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V006_LIC_TBL", Storage="_V006", ThisKey="USL_MP", OtherKey="id", IsForeignKey=true)]
		public V006 V006
		{
			get
			{
				return this._V006.Entity;
			}
			set
			{
				V006 previousValue = this._V006.Entity;
				if (((previousValue != value) 
							|| (this._V006.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V006.Entity = null;
						previousValue.LIC_TBL.Remove(this);
					}
					this._V006.Entity = value;
					if ((value != null))
					{
						value.LIC_TBL.Add(this);
						this._USL_MP = value.id;
					}
					else
					{
						this._USL_MP = default(int);
					}
					this.SendPropertyChanged("V006");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V008_LIC_TBL", Storage="_V008", ThisKey="VID_MP", OtherKey="Id", IsForeignKey=true)]
		public V008 V008
		{
			get
			{
				return this._V008.Entity;
			}
			set
			{
				V008 previousValue = this._V008.Entity;
				if (((previousValue != value) 
							|| (this._V008.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V008.Entity = null;
						previousValue.LIC_TBL.Remove(this);
					}
					this._V008.Entity = value;
					if ((value != null))
					{
						value.LIC_TBL.Add(this);
						this._VID_MP = value.Id;
					}
					else
					{
						this._VID_MP = default(int);
					}
					this.SendPropertyChanged("V008");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LicenseDb")]
	public partial class LicenseDb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _Profil;
		
		private System.DateTime _LicenseDate;
		
		private System.DateTime _LicenseDateEnd;
		
		private System.Nullable<int> _TypeHelp;
		
		private string _MedOrg;
		
		private bool _IsValid;
		
		private bool _DetProf;
		
		private int _UslOk;
		
		private EntityRef<F003> _F003;
		
		private EntityRef<V002> _V002;
		
		private EntityRef<V006> _V006;
		
		private EntityRef<V008> _V008;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnProfilChanging(int value);
    partial void OnProfilChanged();
    partial void OnLicenseDateChanging(System.DateTime value);
    partial void OnLicenseDateChanged();
    partial void OnLicenseDateEndChanging(System.DateTime value);
    partial void OnLicenseDateEndChanged();
    partial void OnTypeHelpChanging(System.Nullable<int> value);
    partial void OnTypeHelpChanged();
    partial void OnMedOrgChanging(string value);
    partial void OnMedOrgChanged();
    partial void OnIsValidChanging(bool value);
    partial void OnIsValidChanged();
    partial void OnDetProfChanging(bool value);
    partial void OnDetProfChanged();
    partial void OnUslOkChanging(int value);
    partial void OnUslOkChanged();
    #endregion
		
		public LicenseDb()
		{
			this._F003 = default(EntityRef<F003>);
			this._V002 = default(EntityRef<V002>);
			this._V006 = default(EntityRef<V006>);
			this._V008 = default(EntityRef<V008>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profil", DbType="Int NOT NULL")]
		public int Profil
		{
			get
			{
				return this._Profil;
			}
			set
			{
				if ((this._Profil != value))
				{
					if (this._V002.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfilChanging(value);
					this.SendPropertyChanging();
					this._Profil = value;
					this.SendPropertyChanged("Profil");
					this.OnProfilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseDate", DbType="DateTime NOT NULL")]
		public System.DateTime LicenseDate
		{
			get
			{
				return this._LicenseDate;
			}
			set
			{
				if ((this._LicenseDate != value))
				{
					this.OnLicenseDateChanging(value);
					this.SendPropertyChanging();
					this._LicenseDate = value;
					this.SendPropertyChanged("LicenseDate");
					this.OnLicenseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseDateEnd", DbType="DateTime NOT NULL")]
		public System.DateTime LicenseDateEnd
		{
			get
			{
				return this._LicenseDateEnd;
			}
			set
			{
				if ((this._LicenseDateEnd != value))
				{
					this.OnLicenseDateEndChanging(value);
					this.SendPropertyChanging();
					this._LicenseDateEnd = value;
					this.SendPropertyChanged("LicenseDateEnd");
					this.OnLicenseDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeHelp", DbType="Int")]
		public System.Nullable<int> TypeHelp
		{
			get
			{
				return this._TypeHelp;
			}
			set
			{
				if ((this._TypeHelp != value))
				{
					if (this._V008.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeHelpChanging(value);
					this.SendPropertyChanging();
					this._TypeHelp = value;
					this.SendPropertyChanged("TypeHelp");
					this.OnTypeHelpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedOrg", DbType="NVarChar(6)")]
		public string MedOrg
		{
			get
			{
				return this._MedOrg;
			}
			set
			{
				if ((this._MedOrg != value))
				{
					if (this._F003.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMedOrgChanging(value);
					this.SendPropertyChanging();
					this._MedOrg = value;
					this.SendPropertyChanged("MedOrg");
					this.OnMedOrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValid", DbType="Bit NOT NULL")]
		public bool IsValid
		{
			get
			{
				return this._IsValid;
			}
			set
			{
				if ((this._IsValid != value))
				{
					this.OnIsValidChanging(value);
					this.SendPropertyChanging();
					this._IsValid = value;
					this.SendPropertyChanged("IsValid");
					this.OnIsValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetProf", DbType="Bit NOT NULL")]
		public bool DetProf
		{
			get
			{
				return this._DetProf;
			}
			set
			{
				if ((this._DetProf != value))
				{
					this.OnDetProfChanging(value);
					this.SendPropertyChanging();
					this._DetProf = value;
					this.SendPropertyChanged("DetProf");
					this.OnDetProfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UslOk", DbType="Int NOT NULL")]
		public int UslOk
		{
			get
			{
				return this._UslOk;
			}
			set
			{
				if ((this._UslOk != value))
				{
					if (this._V006.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUslOkChanging(value);
					this.SendPropertyChanging();
					this._UslOk = value;
					this.SendPropertyChanged("UslOk");
					this.OnUslOkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F003_LicenseDb", Storage="_F003", ThisKey="MedOrg", OtherKey="mcod", IsForeignKey=true)]
		public F003 F003
		{
			get
			{
				return this._F003.Entity;
			}
			set
			{
				F003 previousValue = this._F003.Entity;
				if (((previousValue != value) 
							|| (this._F003.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F003.Entity = null;
						previousValue.LicenseDb.Remove(this);
					}
					this._F003.Entity = value;
					if ((value != null))
					{
						value.LicenseDb.Add(this);
						this._MedOrg = value.mcod;
					}
					else
					{
						this._MedOrg = default(string);
					}
					this.SendPropertyChanged("F003");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V002_LicenseDb", Storage="_V002", ThisKey="Profil", OtherKey="Id", IsForeignKey=true)]
		public V002 V002
		{
			get
			{
				return this._V002.Entity;
			}
			set
			{
				V002 previousValue = this._V002.Entity;
				if (((previousValue != value) 
							|| (this._V002.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V002.Entity = null;
						previousValue.LicenseDb.Remove(this);
					}
					this._V002.Entity = value;
					if ((value != null))
					{
						value.LicenseDb.Add(this);
						this._Profil = value.Id;
					}
					else
					{
						this._Profil = default(int);
					}
					this.SendPropertyChanged("V002");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V006_LicenseDb", Storage="_V006", ThisKey="UslOk", OtherKey="id", IsForeignKey=true)]
		public V006 V006
		{
			get
			{
				return this._V006.Entity;
			}
			set
			{
				V006 previousValue = this._V006.Entity;
				if (((previousValue != value) 
							|| (this._V006.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V006.Entity = null;
						previousValue.LicenseDb.Remove(this);
					}
					this._V006.Entity = value;
					if ((value != null))
					{
						value.LicenseDb.Add(this);
						this._UslOk = value.id;
					}
					else
					{
						this._UslOk = default(int);
					}
					this.SendPropertyChanged("V006");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V008_LicenseDb", Storage="_V008", ThisKey="TypeHelp", OtherKey="Id", IsForeignKey=true)]
		public V008 V008
		{
			get
			{
				return this._V008.Entity;
			}
			set
			{
				V008 previousValue = this._V008.Entity;
				if (((previousValue != value) 
							|| (this._V008.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V008.Entity = null;
						previousValue.LicenseDb.Remove(this);
					}
					this._V008.Entity = value;
					if ((value != null))
					{
						value.LicenseDb.Add(this);
						this._TypeHelp = value.Id;
					}
					else
					{
						this._TypeHelp = default(Nullable<int>);
					}
					this.SendPropertyChanged("V008");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.localPayment")]
	public partial class localPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _Type;
		
		private string _Name;
		
		private string _Inn;
		
		private string _Ogrn;
		
		private string _KPP;
		
		private string _Account;
		
		private string _CorrespondentAccount;
		
		private string _BIK;
		
		private string _BankName;
		
		private string _AgreementNumber;
		
		private System.Nullable<System.DateTime> _AgreementDate;
		
		private string _Director;
		
		private string _Accounter;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInnChanging(string value);
    partial void OnInnChanged();
    partial void OnOgrnChanging(string value);
    partial void OnOgrnChanged();
    partial void OnKPPChanging(string value);
    partial void OnKPPChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnCorrespondentAccountChanging(string value);
    partial void OnCorrespondentAccountChanged();
    partial void OnBIKChanging(string value);
    partial void OnBIKChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnAgreementNumberChanging(string value);
    partial void OnAgreementNumberChanged();
    partial void OnAgreementDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAgreementDateChanged();
    partial void OnDirectorChanging(string value);
    partial void OnDirectorChanged();
    partial void OnAccounterChanging(string value);
    partial void OnAccounterChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnDateBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    #endregion
		
		public localPayment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(254)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inn", DbType="NVarChar(12)")]
		public string Inn
		{
			get
			{
				return this._Inn;
			}
			set
			{
				if ((this._Inn != value))
				{
					this.OnInnChanging(value);
					this.SendPropertyChanging();
					this._Inn = value;
					this.SendPropertyChanged("Inn");
					this.OnInnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ogrn", DbType="NVarChar(15)")]
		public string Ogrn
		{
			get
			{
				return this._Ogrn;
			}
			set
			{
				if ((this._Ogrn != value))
				{
					this.OnOgrnChanging(value);
					this.SendPropertyChanging();
					this._Ogrn = value;
					this.SendPropertyChanged("Ogrn");
					this.OnOgrnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPP", DbType="NVarChar(9)")]
		public string KPP
		{
			get
			{
				return this._KPP;
			}
			set
			{
				if ((this._KPP != value))
				{
					this.OnKPPChanging(value);
					this.SendPropertyChanging();
					this._KPP = value;
					this.SendPropertyChanged("KPP");
					this.OnKPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(50)")]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondentAccount", DbType="NVarChar(50)")]
		public string CorrespondentAccount
		{
			get
			{
				return this._CorrespondentAccount;
			}
			set
			{
				if ((this._CorrespondentAccount != value))
				{
					this.OnCorrespondentAccountChanging(value);
					this.SendPropertyChanging();
					this._CorrespondentAccount = value;
					this.SendPropertyChanged("CorrespondentAccount");
					this.OnCorrespondentAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BIK", DbType="NVarChar(50)")]
		public string BIK
		{
			get
			{
				return this._BIK;
			}
			set
			{
				if ((this._BIK != value))
				{
					this.OnBIKChanging(value);
					this.SendPropertyChanging();
					this._BIK = value;
					this.SendPropertyChanged("BIK");
					this.OnBIKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(254)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementNumber", DbType="NVarChar(50)")]
		public string AgreementNumber
		{
			get
			{
				return this._AgreementNumber;
			}
			set
			{
				if ((this._AgreementNumber != value))
				{
					this.OnAgreementNumberChanging(value);
					this.SendPropertyChanging();
					this._AgreementNumber = value;
					this.SendPropertyChanged("AgreementNumber");
					this.OnAgreementNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AgreementDate
		{
			get
			{
				return this._AgreementDate;
			}
			set
			{
				if ((this._AgreementDate != value))
				{
					this.OnAgreementDateChanging(value);
					this.SendPropertyChanging();
					this._AgreementDate = value;
					this.SendPropertyChanged("AgreementDate");
					this.OnAgreementDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Director", DbType="NVarChar(254)")]
		public string Director
		{
			get
			{
				return this._Director;
			}
			set
			{
				if ((this._Director != value))
				{
					this.OnDirectorChanging(value);
					this.SendPropertyChanging();
					this._Director = value;
					this.SendPropertyChanged("Director");
					this.OnDirectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accounter", DbType="NVarChar(254)")]
		public string Accounter
		{
			get
			{
				return this._Accounter;
			}
			set
			{
				if ((this._Accounter != value))
				{
					this.OnAccounterChanging(value);
					this.SendPropertyChanging();
					this._Accounter = value;
					this.SendPropertyChanged("Accounter");
					this.OnAccounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(254)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LPU_K")]
	public partial class LPU_K : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LPU;
		
		private string _LPU_NAME;
		
		private System.Nullable<decimal> _KS;
		
		private System.DateTime _TarifDateStart;
		
		private System.DateTime _TarifDateEnd;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLPUChanging(string value);
    partial void OnLPUChanged();
    partial void OnLPU_NAMEChanging(string value);
    partial void OnLPU_NAMEChanged();
    partial void OnKSChanging(System.Nullable<decimal> value);
    partial void OnKSChanged();
    partial void OnTarifDateStartChanging(System.DateTime value);
    partial void OnTarifDateStartChanged();
    partial void OnTarifDateEndChanging(System.DateTime value);
    partial void OnTarifDateEndChanged();
    #endregion
		
		public LPU_K()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPU", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string LPU
		{
			get
			{
				return this._LPU;
			}
			set
			{
				if ((this._LPU != value))
				{
					this.OnLPUChanging(value);
					this.SendPropertyChanging();
					this._LPU = value;
					this.SendPropertyChanged("LPU");
					this.OnLPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPU_NAME", DbType="NVarChar(255)")]
		public string LPU_NAME
		{
			get
			{
				return this._LPU_NAME;
			}
			set
			{
				if ((this._LPU_NAME != value))
				{
					this.OnLPU_NAMEChanging(value);
					this.SendPropertyChanging();
					this._LPU_NAME = value;
					this.SendPropertyChanged("LPU_NAME");
					this.OnLPU_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KS", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> KS
		{
			get
			{
				return this._KS;
			}
			set
			{
				if ((this._KS != value))
				{
					this.OnKSChanging(value);
					this.SendPropertyChanging();
					this._KS = value;
					this.SendPropertyChanged("KS");
					this.OnKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TarifDateStart", DbType="DateTime NOT NULL")]
		public System.DateTime TarifDateStart
		{
			get
			{
				return this._TarifDateStart;
			}
			set
			{
				if ((this._TarifDateStart != value))
				{
					this.OnTarifDateStartChanging(value);
					this.SendPropertyChanging();
					this._TarifDateStart = value;
					this.SendPropertyChanged("TarifDateStart");
					this.OnTarifDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TarifDateEnd", DbType="DateTime NOT NULL")]
		public System.DateTime TarifDateEnd
		{
			get
			{
				return this._TarifDateEnd;
			}
			set
			{
				if ((this._TarifDateEnd != value))
				{
					this.OnTarifDateEndChanging(value);
					this.SendPropertyChanging();
					this._TarifDateEnd = value;
					this.SendPropertyChanged("TarifDateEnd");
					this.OnTarifDateEndChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LPU_K_old")]
	public partial class LPU_K_old : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LPU;
		
		private string _LPU_NAME;
		
		private System.Nullable<decimal> _KS;
		
		private System.DateTime _TarifDateStart;
		
		private System.DateTime _TarifDateEnd;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLPUChanging(string value);
    partial void OnLPUChanged();
    partial void OnLPU_NAMEChanging(string value);
    partial void OnLPU_NAMEChanged();
    partial void OnKSChanging(System.Nullable<decimal> value);
    partial void OnKSChanged();
    partial void OnTarifDateStartChanging(System.DateTime value);
    partial void OnTarifDateStartChanged();
    partial void OnTarifDateEndChanging(System.DateTime value);
    partial void OnTarifDateEndChanged();
    #endregion
		
		public LPU_K_old()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPU", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string LPU
		{
			get
			{
				return this._LPU;
			}
			set
			{
				if ((this._LPU != value))
				{
					this.OnLPUChanging(value);
					this.SendPropertyChanging();
					this._LPU = value;
					this.SendPropertyChanged("LPU");
					this.OnLPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPU_NAME", DbType="NVarChar(255)")]
		public string LPU_NAME
		{
			get
			{
				return this._LPU_NAME;
			}
			set
			{
				if ((this._LPU_NAME != value))
				{
					this.OnLPU_NAMEChanging(value);
					this.SendPropertyChanging();
					this._LPU_NAME = value;
					this.SendPropertyChanged("LPU_NAME");
					this.OnLPU_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KS", DbType="Decimal(15,4)")]
		public System.Nullable<decimal> KS
		{
			get
			{
				return this._KS;
			}
			set
			{
				if ((this._KS != value))
				{
					this.OnKSChanging(value);
					this.SendPropertyChanging();
					this._KS = value;
					this.SendPropertyChanged("KS");
					this.OnKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TarifDateStart", DbType="DateTime NOT NULL")]
		public System.DateTime TarifDateStart
		{
			get
			{
				return this._TarifDateStart;
			}
			set
			{
				if ((this._TarifDateStart != value))
				{
					this.OnTarifDateStartChanging(value);
					this.SendPropertyChanging();
					this._TarifDateStart = value;
					this.SendPropertyChanged("TarifDateStart");
					this.OnTarifDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TarifDateEnd", DbType="DateTime NOT NULL")]
		public System.DateTime TarifDateEnd
		{
			get
			{
				return this._TarifDateEnd;
			}
			set
			{
				if ((this._TarifDateEnd != value))
				{
					this.OnTarifDateEndChanging(value);
					this.SendPropertyChanging();
					this._TarifDateEnd = value;
					this.SendPropertyChanged("TarifDateEnd");
					this.OnTarifDateEndChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M001_KSG")]
	public partial class M001_KSG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDDS;
		
		private string _DSNAME;
		
		private System.Nullable<int> _KSG1;
		
		private System.Nullable<int> _KSG2;
		
		private System.Nullable<int> _KSG3;
		
		private System.Nullable<int> _KSG4;
		
		private System.Nullable<int> _KSG5;
		
		private System.Nullable<int> _KSG6;
		
		private bool _ISKSG;
		
		private bool _ISNEW;
		
		private bool _ISDELETE;
		
		private string _NameWithID;
		
		private System.Nullable<bool> _PAYABLE;
		
		private string _PAYABLE_OSN;
		
		private EntitySet<SLUCH_DS2> _SLUCH_DS2;
		
		private EntitySet<SLUCH_DS3> _SLUCH_DS3;
		
		private EntitySet<SLUCH> _SLUCH;
		
		private EntitySet<SLUCH> _SLUCH1;
		
		private EntitySet<SLUCH> _SLUCH2;
		
		private EntitySet<SLUCH> _SLUCH3;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDSChanging(string value);
    partial void OnIDDSChanged();
    partial void OnDSNAMEChanging(string value);
    partial void OnDSNAMEChanged();
    partial void OnKSG1Changing(System.Nullable<int> value);
    partial void OnKSG1Changed();
    partial void OnKSG2Changing(System.Nullable<int> value);
    partial void OnKSG2Changed();
    partial void OnKSG3Changing(System.Nullable<int> value);
    partial void OnKSG3Changed();
    partial void OnKSG4Changing(System.Nullable<int> value);
    partial void OnKSG4Changed();
    partial void OnKSG5Changing(System.Nullable<int> value);
    partial void OnKSG5Changed();
    partial void OnKSG6Changing(System.Nullable<int> value);
    partial void OnKSG6Changed();
    partial void OnISKSGChanging(bool value);
    partial void OnISKSGChanged();
    partial void OnISNEWChanging(bool value);
    partial void OnISNEWChanged();
    partial void OnISDELETEChanging(bool value);
    partial void OnISDELETEChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    partial void OnPAYABLEChanging(System.Nullable<bool> value);
    partial void OnPAYABLEChanged();
    partial void OnPAYABLE_OSNChanging(string value);
    partial void OnPAYABLE_OSNChanged();
    #endregion
		
		public M001_KSG()
		{
			this._SLUCH_DS2 = new EntitySet<SLUCH_DS2>(new Action<SLUCH_DS2>(this.attach_SLUCH_DS2), new Action<SLUCH_DS2>(this.detach_SLUCH_DS2));
			this._SLUCH_DS3 = new EntitySet<SLUCH_DS3>(new Action<SLUCH_DS3>(this.attach_SLUCH_DS3), new Action<SLUCH_DS3>(this.detach_SLUCH_DS3));
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			this._SLUCH1 = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH1), new Action<SLUCH>(this.detach_SLUCH1));
			this._SLUCH2 = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH2), new Action<SLUCH>(this.detach_SLUCH2));
			this._SLUCH3 = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH3), new Action<SLUCH>(this.detach_SLUCH3));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDS", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDDS
		{
			get
			{
				return this._IDDS;
			}
			set
			{
				if ((this._IDDS != value))
				{
					this.OnIDDSChanging(value);
					this.SendPropertyChanging();
					this._IDDS = value;
					this.SendPropertyChanged("IDDS");
					this.OnIDDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSNAME", DbType="NVarChar(255)")]
		public string DSNAME
		{
			get
			{
				return this._DSNAME;
			}
			set
			{
				if ((this._DSNAME != value))
				{
					this.OnDSNAMEChanging(value);
					this.SendPropertyChanging();
					this._DSNAME = value;
					this.SendPropertyChanged("DSNAME");
					this.OnDSNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG1", DbType="Int")]
		public System.Nullable<int> KSG1
		{
			get
			{
				return this._KSG1;
			}
			set
			{
				if ((this._KSG1 != value))
				{
					this.OnKSG1Changing(value);
					this.SendPropertyChanging();
					this._KSG1 = value;
					this.SendPropertyChanged("KSG1");
					this.OnKSG1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG2", DbType="Int")]
		public System.Nullable<int> KSG2
		{
			get
			{
				return this._KSG2;
			}
			set
			{
				if ((this._KSG2 != value))
				{
					this.OnKSG2Changing(value);
					this.SendPropertyChanging();
					this._KSG2 = value;
					this.SendPropertyChanged("KSG2");
					this.OnKSG2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG3", DbType="Int")]
		public System.Nullable<int> KSG3
		{
			get
			{
				return this._KSG3;
			}
			set
			{
				if ((this._KSG3 != value))
				{
					this.OnKSG3Changing(value);
					this.SendPropertyChanging();
					this._KSG3 = value;
					this.SendPropertyChanged("KSG3");
					this.OnKSG3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG4", DbType="Int")]
		public System.Nullable<int> KSG4
		{
			get
			{
				return this._KSG4;
			}
			set
			{
				if ((this._KSG4 != value))
				{
					this.OnKSG4Changing(value);
					this.SendPropertyChanging();
					this._KSG4 = value;
					this.SendPropertyChanged("KSG4");
					this.OnKSG4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG5", DbType="Int")]
		public System.Nullable<int> KSG5
		{
			get
			{
				return this._KSG5;
			}
			set
			{
				if ((this._KSG5 != value))
				{
					this.OnKSG5Changing(value);
					this.SendPropertyChanging();
					this._KSG5 = value;
					this.SendPropertyChanged("KSG5");
					this.OnKSG5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG6", DbType="Int")]
		public System.Nullable<int> KSG6
		{
			get
			{
				return this._KSG6;
			}
			set
			{
				if ((this._KSG6 != value))
				{
					this.OnKSG6Changing(value);
					this.SendPropertyChanging();
					this._KSG6 = value;
					this.SendPropertyChanged("KSG6");
					this.OnKSG6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISKSG", DbType="Bit NOT NULL")]
		public bool ISKSG
		{
			get
			{
				return this._ISKSG;
			}
			set
			{
				if ((this._ISKSG != value))
				{
					this.OnISKSGChanging(value);
					this.SendPropertyChanging();
					this._ISKSG = value;
					this.SendPropertyChanged("ISKSG");
					this.OnISKSGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISNEW", DbType="Bit NOT NULL")]
		public bool ISNEW
		{
			get
			{
				return this._ISNEW;
			}
			set
			{
				if ((this._ISNEW != value))
				{
					this.OnISNEWChanging(value);
					this.SendPropertyChanging();
					this._ISNEW = value;
					this.SendPropertyChanged("ISNEW");
					this.OnISNEWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISDELETE", DbType="Bit NOT NULL")]
		public bool ISDELETE
		{
			get
			{
				return this._ISDELETE;
			}
			set
			{
				if ((this._ISDELETE != value))
				{
					this.OnISDELETEChanging(value);
					this.SendPropertyChanging();
					this._ISDELETE = value;
					this.SendPropertyChanged("ISDELETE");
					this.OnISDELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(265)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAYABLE", DbType="Bit")]
		public System.Nullable<bool> PAYABLE
		{
			get
			{
				return this._PAYABLE;
			}
			set
			{
				if ((this._PAYABLE != value))
				{
					this.OnPAYABLEChanging(value);
					this.SendPropertyChanging();
					this._PAYABLE = value;
					this.SendPropertyChanged("PAYABLE");
					this.OnPAYABLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAYABLE_OSN", DbType="NVarChar(20)")]
		public string PAYABLE_OSN
		{
			get
			{
				return this._PAYABLE_OSN;
			}
			set
			{
				if ((this._PAYABLE_OSN != value))
				{
					this.OnPAYABLE_OSNChanging(value);
					this.SendPropertyChanging();
					this._PAYABLE_OSN = value;
					this.SendPropertyChanged("PAYABLE_OSN");
					this.OnPAYABLE_OSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M001_KSG_SLUCH_DS2", Storage="_SLUCH_DS2", ThisKey="IDDS", OtherKey="DS")]
		public EntitySet<SLUCH_DS2> SLUCH_DS2
		{
			get
			{
				return this._SLUCH_DS2;
			}
			set
			{
				this._SLUCH_DS2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M001_KSG_SLUCH_DS3", Storage="_SLUCH_DS3", ThisKey="IDDS", OtherKey="DS")]
		public EntitySet<SLUCH_DS3> SLUCH_DS3
		{
			get
			{
				return this._SLUCH_DS3;
			}
			set
			{
				this._SLUCH_DS3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M001_KSG_SLUCH", Storage="_SLUCH", ThisKey="IDDS", OtherKey="DSKZ")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M001_KSG_SLUCH1", Storage="_SLUCH1", ThisKey="IDDS", OtherKey="DSN")]
		public EntitySet<SLUCH> SLUCH1
		{
			get
			{
				return this._SLUCH1;
			}
			set
			{
				this._SLUCH1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M001_KSG_SLUCH2", Storage="_SLUCH2", ThisKey="IDDS", OtherKey="DSPA")]
		public EntitySet<SLUCH> SLUCH2
		{
			get
			{
				return this._SLUCH2;
			}
			set
			{
				this._SLUCH2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M001_KSG_SLUCH3", Storage="_SLUCH3", ThisKey="IDDS", OtherKey="DSS")]
		public EntitySet<SLUCH> SLUCH3
		{
			get
			{
				return this._SLUCH3;
			}
			set
			{
				this._SLUCH3.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH_DS2(SLUCH_DS2 entity)
		{
			this.SendPropertyChanging();
			entity.M001_KSG = this;
		}
		
		private void detach_SLUCH_DS2(SLUCH_DS2 entity)
		{
			this.SendPropertyChanging();
			entity.M001_KSG = null;
		}
		
		private void attach_SLUCH_DS3(SLUCH_DS3 entity)
		{
			this.SendPropertyChanging();
			entity.M001_KSG = this;
		}
		
		private void detach_SLUCH_DS3(SLUCH_DS3 entity)
		{
			this.SendPropertyChanging();
			entity.M001_KSG = null;
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.M001_KSG = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.M001_KSG = null;
		}
		
		private void attach_SLUCH1(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.M001_KSG1 = this;
		}
		
		private void detach_SLUCH1(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.M001_KSG1 = null;
		}
		
		private void attach_SLUCH2(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.M001_KSG2 = this;
		}
		
		private void detach_SLUCH2(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.M001_KSG2 = null;
		}
		
		private void attach_SLUCH3(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.M001_KSG3 = this;
		}
		
		private void detach_SLUCH3(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.M001_KSG3 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.M001SPneotlog")]
	public partial class M001SPneotlog
	{
		
		private string _IDDS;
		
		private System.Nullable<System.DateTime> _DateBeg;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		public M001SPneotlog()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDS", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string IDDS
		{
			get
			{
				return this._IDDS;
			}
			set
			{
				if ((this._IDDS != value))
				{
					this._IDDS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBeg", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateBeg
		{
			get
			{
				return this._DateBeg;
			}
			set
			{
				if ((this._DateBeg != value))
				{
					this._DateBeg = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this._DateEnd = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEE_DB")]
	public partial class MEE_DB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SLID;
		
		private int _USERID;
		
		private string _COMMENTS;
		
		private string _LPU;
		
		private int _AKT_ID;
		
		private System.Nullable<int> _MEE_TYPE;
		
		private EntityRef<F003> _F003;
		
		private EntityRef<Users> _Users;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSLIDChanging(int value);
    partial void OnSLIDChanged();
    partial void OnUSERIDChanging(int value);
    partial void OnUSERIDChanged();
    partial void OnCOMMENTSChanging(string value);
    partial void OnCOMMENTSChanged();
    partial void OnLPUChanging(string value);
    partial void OnLPUChanged();
    partial void OnAKT_IDChanging(int value);
    partial void OnAKT_IDChanged();
    partial void OnMEE_TYPEChanging(System.Nullable<int> value);
    partial void OnMEE_TYPEChanged();
    #endregion
		
		public MEE_DB()
		{
			this._F003 = default(EntityRef<F003>);
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLID", DbType="Int NOT NULL")]
		public int SLID
		{
			get
			{
				return this._SLID;
			}
			set
			{
				if ((this._SLID != value))
				{
					this.OnSLIDChanging(value);
					this.SendPropertyChanging();
					this._SLID = value;
					this.SendPropertyChanged("SLID");
					this.OnSLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="Int NOT NULL")]
		public int USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMMENTS", DbType="NVarChar(250)")]
		public string COMMENTS
		{
			get
			{
				return this._COMMENTS;
			}
			set
			{
				if ((this._COMMENTS != value))
				{
					this.OnCOMMENTSChanging(value);
					this.SendPropertyChanging();
					this._COMMENTS = value;
					this.SendPropertyChanged("COMMENTS");
					this.OnCOMMENTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPU", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string LPU
		{
			get
			{
				return this._LPU;
			}
			set
			{
				if ((this._LPU != value))
				{
					if (this._F003.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLPUChanging(value);
					this.SendPropertyChanging();
					this._LPU = value;
					this.SendPropertyChanged("LPU");
					this.OnLPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AKT_ID", DbType="Int NOT NULL")]
		public int AKT_ID
		{
			get
			{
				return this._AKT_ID;
			}
			set
			{
				if ((this._AKT_ID != value))
				{
					this.OnAKT_IDChanging(value);
					this.SendPropertyChanging();
					this._AKT_ID = value;
					this.SendPropertyChanged("AKT_ID");
					this.OnAKT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEE_TYPE", DbType="Int")]
		public System.Nullable<int> MEE_TYPE
		{
			get
			{
				return this._MEE_TYPE;
			}
			set
			{
				if ((this._MEE_TYPE != value))
				{
					this.OnMEE_TYPEChanging(value);
					this.SendPropertyChanging();
					this._MEE_TYPE = value;
					this.SendPropertyChanged("MEE_TYPE");
					this.OnMEE_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F003_MEE_DB", Storage="_F003", ThisKey="LPU", OtherKey="mcod", IsForeignKey=true)]
		public F003 F003
		{
			get
			{
				return this._F003.Entity;
			}
			set
			{
				F003 previousValue = this._F003.Entity;
				if (((previousValue != value) 
							|| (this._F003.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F003.Entity = null;
						previousValue.MEE_DB.Remove(this);
					}
					this._F003.Entity = value;
					if ((value != null))
					{
						value.MEE_DB.Add(this);
						this._LPU = value.mcod;
					}
					else
					{
						this._LPU = default(string);
					}
					this.SendPropertyChanged("F003");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_MEE_DB", Storage="_Users", ThisKey="USERID", OtherKey="id", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.MEE_DB.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.MEE_DB.Add(this);
						this._USERID = value.id;
					}
					else
					{
						this._USERID = default(int);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEE_TYPE_DB")]
	public partial class MEE_TYPE_DB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _NameWithID;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public MEE_TYPE_DB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="VarChar(104)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeeAutoDb")]
	public partial class MeeAutoDb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _MeeName;
		
		private string _MeeSQL;
		
		private string _MeeSQLParametr;
		
		private string _Comments;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMeeNameChanging(string value);
    partial void OnMeeNameChanged();
    partial void OnMeeSQLChanging(string value);
    partial void OnMeeSQLChanged();
    partial void OnMeeSQLParametrChanging(string value);
    partial void OnMeeSQLParametrChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public MeeAutoDb()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeeName", DbType="NVarChar(50)")]
		public string MeeName
		{
			get
			{
				return this._MeeName;
			}
			set
			{
				if ((this._MeeName != value))
				{
					this.OnMeeNameChanging(value);
					this.SendPropertyChanging();
					this._MeeName = value;
					this.SendPropertyChanged("MeeName");
					this.OnMeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeeSQL", DbType="NVarChar(MAX)")]
		public string MeeSQL
		{
			get
			{
				return this._MeeSQL;
			}
			set
			{
				if ((this._MeeSQL != value))
				{
					this.OnMeeSQLChanging(value);
					this.SendPropertyChanging();
					this._MeeSQL = value;
					this.SendPropertyChanged("MeeSQL");
					this.OnMeeSQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeeSQLParametr", DbType="NVarChar(MAX)")]
		public string MeeSQLParametr
		{
			get
			{
				return this._MeeSQLParametr;
			}
			set
			{
				if ((this._MeeSQLParametr != value))
				{
					this.OnMeeSQLParametrChanging(value);
					this.SendPropertyChanging();
					this._MeeSQLParametr = value;
					this.SendPropertyChanged("MeeSQLParametr");
					this.OnMeeSQLParametrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(100)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MekDb")]
	public partial class MekDb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Osn;
		
		private string _MekName;
		
		private string _MekSQL;
		
		private string _MekSQLParametr;
		
		private string _Comments;
		
		private EntityRef<F014> _F014;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOsnChanging(string value);
    partial void OnOsnChanged();
    partial void OnMekNameChanging(string value);
    partial void OnMekNameChanged();
    partial void OnMekSQLChanging(string value);
    partial void OnMekSQLChanged();
    partial void OnMekSQLParametrChanging(string value);
    partial void OnMekSQLParametrChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public MekDb()
		{
			this._F014 = default(EntityRef<F014>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Osn", DbType="NVarChar(20)")]
		public string Osn
		{
			get
			{
				return this._Osn;
			}
			set
			{
				if ((this._Osn != value))
				{
					if (this._F014.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOsnChanging(value);
					this.SendPropertyChanging();
					this._Osn = value;
					this.SendPropertyChanged("Osn");
					this.OnOsnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MekName", DbType="NVarChar(50)")]
		public string MekName
		{
			get
			{
				return this._MekName;
			}
			set
			{
				if ((this._MekName != value))
				{
					this.OnMekNameChanging(value);
					this.SendPropertyChanging();
					this._MekName = value;
					this.SendPropertyChanged("MekName");
					this.OnMekNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MekSQL", DbType="NVarChar(MAX)")]
		public string MekSQL
		{
			get
			{
				return this._MekSQL;
			}
			set
			{
				if ((this._MekSQL != value))
				{
					this.OnMekSQLChanging(value);
					this.SendPropertyChanging();
					this._MekSQL = value;
					this.SendPropertyChanged("MekSQL");
					this.OnMekSQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MekSQLParametr", DbType="NVarChar(100)")]
		public string MekSQLParametr
		{
			get
			{
				return this._MekSQLParametr;
			}
			set
			{
				if ((this._MekSQLParametr != value))
				{
					this.OnMekSQLParametrChanging(value);
					this.SendPropertyChanging();
					this._MekSQLParametr = value;
					this.SendPropertyChanged("MekSQLParametr");
					this.OnMekSQLParametrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(100)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F014_MekDb", Storage="_F014", ThisKey="Osn", OtherKey="Osn", IsForeignKey=true)]
		public F014 F014
		{
			get
			{
				return this._F014.Entity;
			}
			set
			{
				F014 previousValue = this._F014.Entity;
				if (((previousValue != value) 
							|| (this._F014.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F014.Entity = null;
						previousValue.MekDb.Remove(this);
					}
					this._F014.Entity = value;
					if ((value != null))
					{
						value.MekDb.Add(this);
						this._Osn = value.Osn;
					}
					else
					{
						this._Osn = default(string);
					}
					this.SendPropertyChanged("F014");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MSPCONV")]
	public partial class MSPCONV
	{
		
		private System.Nullable<int> _MSPOID;
		
		private System.Nullable<int> _MSPNID;
		
		public MSPCONV()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSPOID", DbType="Int")]
		public System.Nullable<int> MSPOID
		{
			get
			{
				return this._MSPOID;
			}
			set
			{
				if ((this._MSPOID != value))
				{
					this._MSPOID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSPNID", DbType="Int")]
		public System.Nullable<int> MSPNID
		{
			get
			{
				return this._MSPNID;
			}
			set
			{
				if ((this._MSPNID != value))
				{
					this._MSPNID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.neopred_ZL")]
	public partial class neopred_ZL
	{
		
		private string _polis;
		
		private System.Nullable<int> _ch;
		
		public neopred_ZL()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_polis", DbType="NVarChar(4000)")]
		public string polis
		{
			get
			{
				return this._polis;
			}
			set
			{
				if ((this._polis != value))
				{
					this._polis = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ch", DbType="Int")]
		public System.Nullable<int> ch
		{
			get
			{
				return this._ch;
			}
			set
			{
				if ((this._ch != value))
				{
					this._ch = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nomenclature")]
	public partial class Nomenclature : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private System.Nullable<int> _NewCode;
		
		private System.Nullable<int> _KSG1;
		
		private System.Nullable<int> _KSG2;
		
		private System.Nullable<int> _KSG3;
		
		private System.Nullable<int> _KSG4;
		
		private string _INKSG;
		
		private string _NameWithID;
		
		private System.Nullable<int> _KSG5;
		
		private System.Nullable<int> _KSG6;
		
		private System.Nullable<int> _KSG7;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNewCodeChanging(System.Nullable<int> value);
    partial void OnNewCodeChanged();
    partial void OnKSG1Changing(System.Nullable<int> value);
    partial void OnKSG1Changed();
    partial void OnKSG2Changing(System.Nullable<int> value);
    partial void OnKSG2Changed();
    partial void OnKSG3Changing(System.Nullable<int> value);
    partial void OnKSG3Changed();
    partial void OnKSG4Changing(System.Nullable<int> value);
    partial void OnKSG4Changed();
    partial void OnINKSGChanging(string value);
    partial void OnINKSGChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    partial void OnKSG5Changing(System.Nullable<int> value);
    partial void OnKSG5Changed();
    partial void OnKSG6Changing(System.Nullable<int> value);
    partial void OnKSG6Changed();
    partial void OnKSG7Changing(System.Nullable<int> value);
    partial void OnKSG7Changed();
    #endregion
		
		public Nomenclature()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCode", DbType="Int")]
		public System.Nullable<int> NewCode
		{
			get
			{
				return this._NewCode;
			}
			set
			{
				if ((this._NewCode != value))
				{
					this.OnNewCodeChanging(value);
					this.SendPropertyChanging();
					this._NewCode = value;
					this.SendPropertyChanged("NewCode");
					this.OnNewCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG1", DbType="Int")]
		public System.Nullable<int> KSG1
		{
			get
			{
				return this._KSG1;
			}
			set
			{
				if ((this._KSG1 != value))
				{
					this.OnKSG1Changing(value);
					this.SendPropertyChanging();
					this._KSG1 = value;
					this.SendPropertyChanged("KSG1");
					this.OnKSG1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG2", DbType="Int")]
		public System.Nullable<int> KSG2
		{
			get
			{
				return this._KSG2;
			}
			set
			{
				if ((this._KSG2 != value))
				{
					this.OnKSG2Changing(value);
					this.SendPropertyChanging();
					this._KSG2 = value;
					this.SendPropertyChanged("KSG2");
					this.OnKSG2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG3", DbType="Int")]
		public System.Nullable<int> KSG3
		{
			get
			{
				return this._KSG3;
			}
			set
			{
				if ((this._KSG3 != value))
				{
					this.OnKSG3Changing(value);
					this.SendPropertyChanging();
					this._KSG3 = value;
					this.SendPropertyChanged("KSG3");
					this.OnKSG3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG4", DbType="Int")]
		public System.Nullable<int> KSG4
		{
			get
			{
				return this._KSG4;
			}
			set
			{
				if ((this._KSG4 != value))
				{
					this.OnKSG4Changing(value);
					this.SendPropertyChanging();
					this._KSG4 = value;
					this.SendPropertyChanged("KSG4");
					this.OnKSG4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INKSG", DbType="NVarChar(5)")]
		public string INKSG
		{
			get
			{
				return this._INKSG;
			}
			set
			{
				if ((this._INKSG != value))
				{
					this.OnINKSGChanging(value);
					this.SendPropertyChanging();
					this._INKSG = value;
					this.SendPropertyChanged("INKSG");
					this.OnINKSGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(273)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG5", DbType="Int")]
		public System.Nullable<int> KSG5
		{
			get
			{
				return this._KSG5;
			}
			set
			{
				if ((this._KSG5 != value))
				{
					this.OnKSG5Changing(value);
					this.SendPropertyChanging();
					this._KSG5 = value;
					this.SendPropertyChanged("KSG5");
					this.OnKSG5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG6", DbType="Int")]
		public System.Nullable<int> KSG6
		{
			get
			{
				return this._KSG6;
			}
			set
			{
				if ((this._KSG6 != value))
				{
					this.OnKSG6Changing(value);
					this.SendPropertyChanging();
					this._KSG6 = value;
					this.SendPropertyChanged("KSG6");
					this.OnKSG6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG7", DbType="Int")]
		public System.Nullable<int> KSG7
		{
			get
			{
				return this._KSG7;
			}
			set
			{
				if ((this._KSG7 != value))
				{
					this.OnKSG7Changing(value);
					this.SendPropertyChanging();
					this._KSG7 = value;
					this.SendPropertyChanged("KSG7");
					this.OnKSG7Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.O001")]
	public partial class O001 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _KOD;
		
		private string _NAME11;
		
		private string _NAME12;
		
		private string _ALFA2;
		
		private string _ALFA3;
		
		private string _NOMDESCR;
		
		private string _NOMAKT;
		
		private System.Nullable<decimal> _STATUS;
		
		private System.Nullable<System.DateTime> _DATA_UPD;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKODChanging(string value);
    partial void OnKODChanged();
    partial void OnNAME11Changing(string value);
    partial void OnNAME11Changed();
    partial void OnNAME12Changing(string value);
    partial void OnNAME12Changed();
    partial void OnALFA2Changing(string value);
    partial void OnALFA2Changed();
    partial void OnALFA3Changing(string value);
    partial void OnALFA3Changed();
    partial void OnNOMDESCRChanging(string value);
    partial void OnNOMDESCRChanged();
    partial void OnNOMAKTChanging(string value);
    partial void OnNOMAKTChanged();
    partial void OnSTATUSChanging(System.Nullable<decimal> value);
    partial void OnSTATUSChanged();
    partial void OnDATA_UPDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_UPDChanged();
    #endregion
		
		public O001()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KOD", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string KOD
		{
			get
			{
				return this._KOD;
			}
			set
			{
				if ((this._KOD != value))
				{
					this.OnKODChanging(value);
					this.SendPropertyChanging();
					this._KOD = value;
					this.SendPropertyChanged("KOD");
					this.OnKODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME11", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string NAME11
		{
			get
			{
				return this._NAME11;
			}
			set
			{
				if ((this._NAME11 != value))
				{
					this.OnNAME11Changing(value);
					this.SendPropertyChanging();
					this._NAME11 = value;
					this.SendPropertyChanged("NAME11");
					this.OnNAME11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME12", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string NAME12
		{
			get
			{
				return this._NAME12;
			}
			set
			{
				if ((this._NAME12 != value))
				{
					this.OnNAME12Changing(value);
					this.SendPropertyChanging();
					this._NAME12 = value;
					this.SendPropertyChanged("NAME12");
					this.OnNAME12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALFA2", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string ALFA2
		{
			get
			{
				return this._ALFA2;
			}
			set
			{
				if ((this._ALFA2 != value))
				{
					this.OnALFA2Changing(value);
					this.SendPropertyChanging();
					this._ALFA2 = value;
					this.SendPropertyChanged("ALFA2");
					this.OnALFA2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALFA3", DbType="NVarChar(3)")]
		public string ALFA3
		{
			get
			{
				return this._ALFA3;
			}
			set
			{
				if ((this._ALFA3 != value))
				{
					this.OnALFA3Changing(value);
					this.SendPropertyChanging();
					this._ALFA3 = value;
					this.SendPropertyChanged("ALFA3");
					this.OnALFA3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMDESCR", DbType="NVarChar(250)")]
		public string NOMDESCR
		{
			get
			{
				return this._NOMDESCR;
			}
			set
			{
				if ((this._NOMDESCR != value))
				{
					this.OnNOMDESCRChanging(value);
					this.SendPropertyChanging();
					this._NOMDESCR = value;
					this.SendPropertyChanged("NOMDESCR");
					this.OnNOMDESCRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMAKT", DbType="NVarChar(3)")]
		public string NOMAKT
		{
			get
			{
				return this._NOMAKT;
			}
			set
			{
				if ((this._NOMAKT != value))
				{
					this.OnNOMAKTChanging(value);
					this.SendPropertyChanging();
					this._NOMAKT = value;
					this.SendPropertyChanged("NOMAKT");
					this.OnNOMAKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Decimal(5,0)")]
		public System.Nullable<decimal> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_UPD", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_UPD
		{
			get
			{
				return this._DATA_UPD;
			}
			set
			{
				if ((this._DATA_UPD != value))
				{
					this.OnDATA_UPDChanging(value);
					this.SendPropertyChanging();
					this._DATA_UPD = value;
					this.SendPropertyChanged("DATA_UPD");
					this.OnDATA_UPDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.O003")]
	public partial class O003 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _RAZDEL;
		
		private string _PRAZDEL;
		
		private string _KOD;
		
		private string _NAME11;
		
		private string _NAME12;
		
		private string _NOMDESCR;
		
		private string _NOMAKT;
		
		private System.Nullable<decimal> _STATUS;
		
		private System.Nullable<System.DateTime> _DATA_UPD;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRAZDELChanging(string value);
    partial void OnRAZDELChanged();
    partial void OnPRAZDELChanging(string value);
    partial void OnPRAZDELChanged();
    partial void OnKODChanging(string value);
    partial void OnKODChanged();
    partial void OnNAME11Changing(string value);
    partial void OnNAME11Changed();
    partial void OnNAME12Changing(string value);
    partial void OnNAME12Changed();
    partial void OnNOMDESCRChanging(string value);
    partial void OnNOMDESCRChanged();
    partial void OnNOMAKTChanging(string value);
    partial void OnNOMAKTChanged();
    partial void OnSTATUSChanging(System.Nullable<decimal> value);
    partial void OnSTATUSChanged();
    partial void OnDATA_UPDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_UPDChanged();
    #endregion
		
		public O003()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAZDEL", DbType="NVarChar(1)")]
		public string RAZDEL
		{
			get
			{
				return this._RAZDEL;
			}
			set
			{
				if ((this._RAZDEL != value))
				{
					this.OnRAZDELChanging(value);
					this.SendPropertyChanging();
					this._RAZDEL = value;
					this.SendPropertyChanged("RAZDEL");
					this.OnRAZDELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRAZDEL", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string PRAZDEL
		{
			get
			{
				return this._PRAZDEL;
			}
			set
			{
				if ((this._PRAZDEL != value))
				{
					this.OnPRAZDELChanging(value);
					this.SendPropertyChanging();
					this._PRAZDEL = value;
					this.SendPropertyChanged("PRAZDEL");
					this.OnPRAZDELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KOD", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string KOD
		{
			get
			{
				return this._KOD;
			}
			set
			{
				if ((this._KOD != value))
				{
					this.OnKODChanging(value);
					this.SendPropertyChanging();
					this._KOD = value;
					this.SendPropertyChanged("KOD");
					this.OnKODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME11", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string NAME11
		{
			get
			{
				return this._NAME11;
			}
			set
			{
				if ((this._NAME11 != value))
				{
					this.OnNAME11Changing(value);
					this.SendPropertyChanging();
					this._NAME11 = value;
					this.SendPropertyChanged("NAME11");
					this.OnNAME11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME12", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string NAME12
		{
			get
			{
				return this._NAME12;
			}
			set
			{
				if ((this._NAME12 != value))
				{
					this.OnNAME12Changing(value);
					this.SendPropertyChanging();
					this._NAME12 = value;
					this.SendPropertyChanged("NAME12");
					this.OnNAME12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMDESCR", DbType="NVarChar(250)")]
		public string NOMDESCR
		{
			get
			{
				return this._NOMDESCR;
			}
			set
			{
				if ((this._NOMDESCR != value))
				{
					this.OnNOMDESCRChanging(value);
					this.SendPropertyChanging();
					this._NOMDESCR = value;
					this.SendPropertyChanged("NOMDESCR");
					this.OnNOMDESCRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMAKT", DbType="NVarChar(3)")]
		public string NOMAKT
		{
			get
			{
				return this._NOMAKT;
			}
			set
			{
				if ((this._NOMAKT != value))
				{
					this.OnNOMAKTChanging(value);
					this.SendPropertyChanging();
					this._NOMAKT = value;
					this.SendPropertyChanged("NOMAKT");
					this.OnNOMAKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Decimal(5,0)")]
		public System.Nullable<decimal> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_UPD", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_UPD
		{
			get
			{
				return this._DATA_UPD;
			}
			set
			{
				if ((this._DATA_UPD != value))
				{
					this.OnDATA_UPDChanging(value);
					this.SendPropertyChanging();
					this._DATA_UPD = value;
					this.SendPropertyChanged("DATA_UPD");
					this.OnDATA_UPDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.O004")]
	public partial class O004 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _KOD;
		
		private string _NAME1;
		
		private string _ALG;
		
		private string _NOMAKT;
		
		private System.Nullable<decimal> _STATUS;
		
		private System.Nullable<System.DateTime> _DATA_UPD;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKODChanging(string value);
    partial void OnKODChanged();
    partial void OnNAME1Changing(string value);
    partial void OnNAME1Changed();
    partial void OnALGChanging(string value);
    partial void OnALGChanged();
    partial void OnNOMAKTChanging(string value);
    partial void OnNOMAKTChanged();
    partial void OnSTATUSChanging(System.Nullable<decimal> value);
    partial void OnSTATUSChanged();
    partial void OnDATA_UPDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_UPDChanged();
    #endregion
		
		public O004()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KOD", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string KOD
		{
			get
			{
				return this._KOD;
			}
			set
			{
				if ((this._KOD != value))
				{
					this.OnKODChanging(value);
					this.SendPropertyChanging();
					this._KOD = value;
					this.SendPropertyChanged("KOD");
					this.OnKODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME1", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string NAME1
		{
			get
			{
				return this._NAME1;
			}
			set
			{
				if ((this._NAME1 != value))
				{
					this.OnNAME1Changing(value);
					this.SendPropertyChanging();
					this._NAME1 = value;
					this.SendPropertyChanged("NAME1");
					this.OnNAME1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALG", DbType="NVarChar(52)")]
		public string ALG
		{
			get
			{
				return this._ALG;
			}
			set
			{
				if ((this._ALG != value))
				{
					this.OnALGChanging(value);
					this.SendPropertyChanging();
					this._ALG = value;
					this.SendPropertyChanged("ALG");
					this.OnALGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMAKT", DbType="NVarChar(3)")]
		public string NOMAKT
		{
			get
			{
				return this._NOMAKT;
			}
			set
			{
				if ((this._NOMAKT != value))
				{
					this.OnNOMAKTChanging(value);
					this.SendPropertyChanging();
					this._NOMAKT = value;
					this.SendPropertyChanged("NOMAKT");
					this.OnNOMAKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Decimal(5,0)")]
		public System.Nullable<decimal> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_UPD", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_UPD
		{
			get
			{
				return this._DATA_UPD;
			}
			set
			{
				if ((this._DATA_UPD != value))
				{
					this.OnDATA_UPDChanging(value);
					this.SendPropertyChanging();
					this._DATA_UPD = value;
					this.SendPropertyChanged("DATA_UPD");
					this.OnDATA_UPDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.O005")]
	public partial class O005 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _KOD;
		
		private string _NAME1;
		
		private string _ALG;
		
		private string _NOMAKT;
		
		private System.Nullable<decimal> _STATUS;
		
		private System.Nullable<System.DateTime> _DATA_UPD;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKODChanging(int value);
    partial void OnKODChanged();
    partial void OnNAME1Changing(string value);
    partial void OnNAME1Changed();
    partial void OnALGChanging(string value);
    partial void OnALGChanged();
    partial void OnNOMAKTChanging(string value);
    partial void OnNOMAKTChanged();
    partial void OnSTATUSChanging(System.Nullable<decimal> value);
    partial void OnSTATUSChanged();
    partial void OnDATA_UPDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_UPDChanged();
    #endregion
		
		public O005()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KOD", DbType="Int NOT NULL")]
		public int KOD
		{
			get
			{
				return this._KOD;
			}
			set
			{
				if ((this._KOD != value))
				{
					this.OnKODChanging(value);
					this.SendPropertyChanging();
					this._KOD = value;
					this.SendPropertyChanged("KOD");
					this.OnKODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME1", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string NAME1
		{
			get
			{
				return this._NAME1;
			}
			set
			{
				if ((this._NAME1 != value))
				{
					this.OnNAME1Changing(value);
					this.SendPropertyChanging();
					this._NAME1 = value;
					this.SendPropertyChanged("NAME1");
					this.OnNAME1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALG", DbType="NVarChar(52)")]
		public string ALG
		{
			get
			{
				return this._ALG;
			}
			set
			{
				if ((this._ALG != value))
				{
					this.OnALGChanging(value);
					this.SendPropertyChanging();
					this._ALG = value;
					this.SendPropertyChanged("ALG");
					this.OnALGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMAKT", DbType="NVarChar(3)")]
		public string NOMAKT
		{
			get
			{
				return this._NOMAKT;
			}
			set
			{
				if ((this._NOMAKT != value))
				{
					this.OnNOMAKTChanging(value);
					this.SendPropertyChanging();
					this._NOMAKT = value;
					this.SendPropertyChanged("NOMAKT");
					this.OnNOMAKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="Decimal(5,0)")]
		public System.Nullable<decimal> STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_UPD", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_UPD
		{
			get
			{
				return this._DATA_UPD;
			}
			set
			{
				if ((this._DATA_UPD != value))
				{
					this.OnDATA_UPDChanging(value);
					this.SendPropertyChanging();
					this._DATA_UPD = value;
					this.SendPropertyChanged("DATA_UPD");
					this.OnDATA_UPDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OsobSluchDb")]
	public partial class OsobSluchDb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _NameWithID;
		
		private EntitySet<CalcAmbTARIF> _CalcAmbTARIF;
		
		private EntitySet<Tarif> _Tarif;
		
		private EntitySet<TARIF_PN> _TARIF_PN;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public OsobSluchDb()
		{
			this._CalcAmbTARIF = new EntitySet<CalcAmbTARIF>(new Action<CalcAmbTARIF>(this.attach_CalcAmbTARIF), new Action<CalcAmbTARIF>(this.detach_CalcAmbTARIF));
			this._Tarif = new EntitySet<Tarif>(new Action<Tarif>(this.attach_Tarif), new Action<Tarif>(this.detach_Tarif));
			this._TARIF_PN = new EntitySet<TARIF_PN>(new Action<TARIF_PN>(this.attach_TARIF_PN), new Action<TARIF_PN>(this.detach_TARIF_PN));
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="VarChar(154)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OsobSluchDb_CalcAmbTARIF", Storage="_CalcAmbTARIF", ThisKey="Id", OtherKey="OS_SLUCH")]
		public EntitySet<CalcAmbTARIF> CalcAmbTARIF
		{
			get
			{
				return this._CalcAmbTARIF;
			}
			set
			{
				this._CalcAmbTARIF.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OsobSluchDb_Tarif", Storage="_Tarif", ThisKey="Id", OtherKey="OsobSluchCheck")]
		public EntitySet<Tarif> Tarif
		{
			get
			{
				return this._Tarif;
			}
			set
			{
				this._Tarif.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OsobSluchDb_TARIF_PN", Storage="_TARIF_PN", ThisKey="Id", OtherKey="T_OS_SLUCH")]
		public EntitySet<TARIF_PN> TARIF_PN
		{
			get
			{
				return this._TARIF_PN;
			}
			set
			{
				this._TARIF_PN.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OsobSluchDb_SLUCH", Storage="_SLUCH", ThisKey="Id", OtherKey="OS_SLUCH_REGION")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CalcAmbTARIF(CalcAmbTARIF entity)
		{
			this.SendPropertyChanging();
			entity.OsobSluchDb = this;
		}
		
		private void detach_CalcAmbTARIF(CalcAmbTARIF entity)
		{
			this.SendPropertyChanging();
			entity.OsobSluchDb = null;
		}
		
		private void attach_Tarif(Tarif entity)
		{
			this.SendPropertyChanging();
			entity.OsobSluchDb = this;
		}
		
		private void detach_Tarif(Tarif entity)
		{
			this.SendPropertyChanging();
			entity.OsobSluchDb = null;
		}
		
		private void attach_TARIF_PN(TARIF_PN entity)
		{
			this.SendPropertyChanging();
			entity.OsobSluchDb = this;
		}
		
		private void detach_TARIF_PN(TARIF_PN entity)
		{
			this.SendPropertyChanging();
			entity.OsobSluchDb = null;
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.OsobSluchDb = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.OsobSluchDb = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OtdelDb")]
	public partial class OtdelDb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private int _ConditionID;
		
		private string _PodrID;
		
		private int _PROFIL;
		
		private System.DateTime _DTBEG;
		
		private System.Nullable<System.DateTime> _DTEND;
		
		private string _OTDID_REGION_NOTEDIT;
		
		private string _NameWithID;
		
		private EntityRef<PodrDb> _PodrDb;
		
		private EntityRef<V006> _V006;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnConditionIDChanging(int value);
    partial void OnConditionIDChanged();
    partial void OnPodrIDChanging(string value);
    partial void OnPodrIDChanged();
    partial void OnPROFILChanging(int value);
    partial void OnPROFILChanged();
    partial void OnDTBEGChanging(System.DateTime value);
    partial void OnDTBEGChanged();
    partial void OnDTENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDTENDChanged();
    partial void OnOTDID_REGION_NOTEDITChanging(string value);
    partial void OnOTDID_REGION_NOTEDITChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public OtdelDb()
		{
			this._PodrDb = default(EntityRef<PodrDb>);
			this._V006 = default(EntityRef<V006>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionID", DbType="Int NOT NULL")]
		public int ConditionID
		{
			get
			{
				return this._ConditionID;
			}
			set
			{
				if ((this._ConditionID != value))
				{
					if (this._V006.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConditionIDChanging(value);
					this.SendPropertyChanging();
					this._ConditionID = value;
					this.SendPropertyChanged("ConditionID");
					this.OnConditionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PodrID", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string PodrID
		{
			get
			{
				return this._PodrID;
			}
			set
			{
				if ((this._PodrID != value))
				{
					if (this._PodrDb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPodrIDChanging(value);
					this.SendPropertyChanging();
					this._PodrID = value;
					this.SendPropertyChanged("PodrID");
					this.OnPodrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROFIL", DbType="Int NOT NULL")]
		public int PROFIL
		{
			get
			{
				return this._PROFIL;
			}
			set
			{
				if ((this._PROFIL != value))
				{
					this.OnPROFILChanging(value);
					this.SendPropertyChanging();
					this._PROFIL = value;
					this.SendPropertyChanged("PROFIL");
					this.OnPROFILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTBEG", DbType="DateTime NOT NULL")]
		public System.DateTime DTBEG
		{
			get
			{
				return this._DTBEG;
			}
			set
			{
				if ((this._DTBEG != value))
				{
					this.OnDTBEGChanging(value);
					this.SendPropertyChanging();
					this._DTBEG = value;
					this.SendPropertyChanged("DTBEG");
					this.OnDTBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DTEND
		{
			get
			{
				return this._DTEND;
			}
			set
			{
				if ((this._DTEND != value))
				{
					this.OnDTENDChanging(value);
					this.SendPropertyChanging();
					this._DTEND = value;
					this.SendPropertyChanged("DTEND");
					this.OnDTENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTDID_REGION_NOTEDIT", DbType="NVarChar(12)")]
		public string OTDID_REGION_NOTEDIT
		{
			get
			{
				return this._OTDID_REGION_NOTEDIT;
			}
			set
			{
				if ((this._OTDID_REGION_NOTEDIT != value))
				{
					this.OnOTDID_REGION_NOTEDITChanging(value);
					this.SendPropertyChanging();
					this._OTDID_REGION_NOTEDIT = value;
					this.SendPropertyChanged("OTDID_REGION_NOTEDIT");
					this.OnOTDID_REGION_NOTEDITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(222)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PodrDb_OtdelDb", Storage="_PodrDb", ThisKey="PodrID", OtherKey="Id", IsForeignKey=true)]
		public PodrDb PodrDb
		{
			get
			{
				return this._PodrDb.Entity;
			}
			set
			{
				PodrDb previousValue = this._PodrDb.Entity;
				if (((previousValue != value) 
							|| (this._PodrDb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PodrDb.Entity = null;
						previousValue.OtdelDb.Remove(this);
					}
					this._PodrDb.Entity = value;
					if ((value != null))
					{
						value.OtdelDb.Add(this);
						this._PodrID = value.Id;
					}
					else
					{
						this._PodrID = default(string);
					}
					this.SendPropertyChanged("PodrDb");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V006_OtdelDb", Storage="_V006", ThisKey="ConditionID", OtherKey="id", IsForeignKey=true)]
		public V006 V006
		{
			get
			{
				return this._V006.Entity;
			}
			set
			{
				V006 previousValue = this._V006.Entity;
				if (((previousValue != value) 
							|| (this._V006.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V006.Entity = null;
						previousValue.OtdelDb.Remove(this);
					}
					this._V006.Entity = value;
					if ((value != null))
					{
						value.OtdelDb.Add(this);
						this._ConditionID = value.id;
					}
					else
					{
						this._ConditionID = default(int);
					}
					this.SendPropertyChanged("V006");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.people_update")]
	public partial class people_update
	{
		
		private int _id;
		
		private System.Nullable<int> _ch;
		
		public people_update()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ch", DbType="Int")]
		public System.Nullable<int> ch
		{
			get
			{
				return this._ch;
			}
			set
			{
				if ((this._ch != value))
				{
					this._ch = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.perekrest")]
	public partial class perekrest
	{
		
		private int _slid;
		
		private int _zlid;
		
		private System.Nullable<int> _USL_OK;
		
		private int _pid;
		
		private System.Nullable<int> _god;
		
		private System.Nullable<int> _mes;
		
		private System.Nullable<decimal> _oplata;
		
		private System.Nullable<char> _opdoc;
		
		private System.Nullable<byte> _app30dn;
		
		private System.Nullable<byte> _st90dn;
		
		private System.Nullable<byte> _udl_ukor;
		
		private System.Nullable<byte> _prUmer;
		
		public perekrest()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_slid", DbType="Int NOT NULL")]
		public int slid
		{
			get
			{
				return this._slid;
			}
			set
			{
				if ((this._slid != value))
				{
					this._slid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zlid", DbType="Int NOT NULL")]
		public int zlid
		{
			get
			{
				return this._zlid;
			}
			set
			{
				if ((this._zlid != value))
				{
					this._zlid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USL_OK", DbType="Int")]
		public System.Nullable<int> USL_OK
		{
			get
			{
				return this._USL_OK;
			}
			set
			{
				if ((this._USL_OK != value))
				{
					this._USL_OK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", DbType="Int NOT NULL")]
		public int pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					this._pid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_god", DbType="Int")]
		public System.Nullable<int> god
		{
			get
			{
				return this._god;
			}
			set
			{
				if ((this._god != value))
				{
					this._god = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mes", DbType="Int")]
		public System.Nullable<int> mes
		{
			get
			{
				return this._mes;
			}
			set
			{
				if ((this._mes != value))
				{
					this._mes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oplata", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> oplata
		{
			get
			{
				return this._oplata;
			}
			set
			{
				if ((this._oplata != value))
				{
					this._oplata = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opdoc", DbType="Char(1)")]
		public System.Nullable<char> opdoc
		{
			get
			{
				return this._opdoc;
			}
			set
			{
				if ((this._opdoc != value))
				{
					this._opdoc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_app30dn", DbType="TinyInt")]
		public System.Nullable<byte> app30dn
		{
			get
			{
				return this._app30dn;
			}
			set
			{
				if ((this._app30dn != value))
				{
					this._app30dn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_st90dn", DbType="TinyInt")]
		public System.Nullable<byte> st90dn
		{
			get
			{
				return this._st90dn;
			}
			set
			{
				if ((this._st90dn != value))
				{
					this._st90dn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_udl_ukor", DbType="TinyInt")]
		public System.Nullable<byte> udl_ukor
		{
			get
			{
				return this._udl_ukor;
			}
			set
			{
				if ((this._udl_ukor != value))
				{
					this._udl_ukor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prUmer", DbType="TinyInt")]
		public System.Nullable<byte> prUmer
		{
			get
			{
				return this._prUmer;
			}
			set
			{
				if ((this._prUmer != value))
				{
					this._prUmer = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.period_MEE_EKMP")]
	public partial class period_MEE_EKMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _lpu;
		
		private short _god;
		
		private System.Nullable<byte> _mee1;
		
		private System.Nullable<byte> _mee2;
		
		private System.Nullable<byte> _mee3;
		
		private System.Nullable<byte> _mee4;
		
		private System.Nullable<byte> _ekmp1;
		
		private System.Nullable<byte> _ekmp2;
		
		private System.Nullable<byte> _ekmp3;
		
		private System.Nullable<byte> _ekmp4;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlpuChanging(string value);
    partial void OnlpuChanged();
    partial void OngodChanging(short value);
    partial void OngodChanged();
    partial void Onmee1Changing(System.Nullable<byte> value);
    partial void Onmee1Changed();
    partial void Onmee2Changing(System.Nullable<byte> value);
    partial void Onmee2Changed();
    partial void Onmee3Changing(System.Nullable<byte> value);
    partial void Onmee3Changed();
    partial void Onmee4Changing(System.Nullable<byte> value);
    partial void Onmee4Changed();
    partial void Onekmp1Changing(System.Nullable<byte> value);
    partial void Onekmp1Changed();
    partial void Onekmp2Changing(System.Nullable<byte> value);
    partial void Onekmp2Changed();
    partial void Onekmp3Changing(System.Nullable<byte> value);
    partial void Onekmp3Changed();
    partial void Onekmp4Changing(System.Nullable<byte> value);
    partial void Onekmp4Changed();
    #endregion
		
		public period_MEE_EKMP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lpu", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string lpu
		{
			get
			{
				return this._lpu;
			}
			set
			{
				if ((this._lpu != value))
				{
					this.OnlpuChanging(value);
					this.SendPropertyChanging();
					this._lpu = value;
					this.SendPropertyChanged("lpu");
					this.OnlpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_god", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short god
		{
			get
			{
				return this._god;
			}
			set
			{
				if ((this._god != value))
				{
					this.OngodChanging(value);
					this.SendPropertyChanging();
					this._god = value;
					this.SendPropertyChanged("god");
					this.OngodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mee1", DbType="TinyInt")]
		public System.Nullable<byte> mee1
		{
			get
			{
				return this._mee1;
			}
			set
			{
				if ((this._mee1 != value))
				{
					this.Onmee1Changing(value);
					this.SendPropertyChanging();
					this._mee1 = value;
					this.SendPropertyChanged("mee1");
					this.Onmee1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mee2", DbType="TinyInt")]
		public System.Nullable<byte> mee2
		{
			get
			{
				return this._mee2;
			}
			set
			{
				if ((this._mee2 != value))
				{
					this.Onmee2Changing(value);
					this.SendPropertyChanging();
					this._mee2 = value;
					this.SendPropertyChanged("mee2");
					this.Onmee2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mee3", DbType="TinyInt")]
		public System.Nullable<byte> mee3
		{
			get
			{
				return this._mee3;
			}
			set
			{
				if ((this._mee3 != value))
				{
					this.Onmee3Changing(value);
					this.SendPropertyChanging();
					this._mee3 = value;
					this.SendPropertyChanged("mee3");
					this.Onmee3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mee4", DbType="TinyInt")]
		public System.Nullable<byte> mee4
		{
			get
			{
				return this._mee4;
			}
			set
			{
				if ((this._mee4 != value))
				{
					this.Onmee4Changing(value);
					this.SendPropertyChanging();
					this._mee4 = value;
					this.SendPropertyChanged("mee4");
					this.Onmee4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ekmp1", DbType="TinyInt")]
		public System.Nullable<byte> ekmp1
		{
			get
			{
				return this._ekmp1;
			}
			set
			{
				if ((this._ekmp1 != value))
				{
					this.Onekmp1Changing(value);
					this.SendPropertyChanging();
					this._ekmp1 = value;
					this.SendPropertyChanged("ekmp1");
					this.Onekmp1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ekmp2", DbType="TinyInt")]
		public System.Nullable<byte> ekmp2
		{
			get
			{
				return this._ekmp2;
			}
			set
			{
				if ((this._ekmp2 != value))
				{
					this.Onekmp2Changing(value);
					this.SendPropertyChanging();
					this._ekmp2 = value;
					this.SendPropertyChanged("ekmp2");
					this.Onekmp2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ekmp3", DbType="TinyInt")]
		public System.Nullable<byte> ekmp3
		{
			get
			{
				return this._ekmp3;
			}
			set
			{
				if ((this._ekmp3 != value))
				{
					this.Onekmp3Changing(value);
					this.SendPropertyChanging();
					this._ekmp3 = value;
					this.SendPropertyChanged("ekmp3");
					this.Onekmp3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ekmp4", DbType="TinyInt")]
		public System.Nullable<byte> ekmp4
		{
			get
			{
				return this._ekmp4;
			}
			set
			{
				if ((this._ekmp4 != value))
				{
					this.Onekmp4Changing(value);
					this.SendPropertyChanging();
					this._ekmp4 = value;
					this.SendPropertyChanged("ekmp4");
					this.Onekmp4Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PodrDb")]
	public partial class PodrDb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private System.Nullable<int> _Condition;
		
		private string _NameWithID;
		
		private EntitySet<OtdelDb> _OtdelDb;
		
		private EntitySet<WORK_DAY> _WORK_DAY;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnConditionChanging(System.Nullable<int> value);
    partial void OnConditionChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public PodrDb()
		{
			this._OtdelDb = new EntitySet<OtdelDb>(new Action<OtdelDb>(this.attach_OtdelDb), new Action<OtdelDb>(this.detach_OtdelDb));
			this._WORK_DAY = new EntitySet<WORK_DAY>(new Action<WORK_DAY>(this.attach_WORK_DAY), new Action<WORK_DAY>(this.detach_WORK_DAY));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condition", DbType="Int")]
		public System.Nullable<int> Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="VarChar(156)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PodrDb_OtdelDb", Storage="_OtdelDb", ThisKey="Id", OtherKey="PodrID")]
		public EntitySet<OtdelDb> OtdelDb
		{
			get
			{
				return this._OtdelDb;
			}
			set
			{
				this._OtdelDb.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PodrDb_WORK_DAY", Storage="_WORK_DAY", ThisKey="Id", OtherKey="PODR_ID")]
		public EntitySet<WORK_DAY> WORK_DAY
		{
			get
			{
				return this._WORK_DAY;
			}
			set
			{
				this._WORK_DAY.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OtdelDb(OtdelDb entity)
		{
			this.SendPropertyChanging();
			entity.PodrDb = this;
		}
		
		private void detach_OtdelDb(OtdelDb entity)
		{
			this.SendPropertyChanging();
			entity.PodrDb = null;
		}
		
		private void attach_WORK_DAY(WORK_DAY entity)
		{
			this.SendPropertyChanging();
			entity.PodrDb = this;
		}
		
		private void detach_WORK_DAY(WORK_DAY entity)
		{
			this.SendPropertyChanging();
			entity.PodrDb = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.polis_update")]
	public partial class polis_update
	{
		
		private int _id;
		
		private System.Nullable<int> _ch;
		
		public polis_update()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ch", DbType="Int")]
		public System.Nullable<int> ch
		{
			get
			{
				return this._ch;
			}
			set
			{
				if ((this._ch != value))
				{
					this._ch = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RMekDb")]
	public partial class RMekDb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Osn;
		
		private string _MekName;
		
		private string _MekSQL;
		
		private string _MekSQLParametr;
		
		private string _Comments;
		
		private EntityRef<F014> _F014;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOsnChanging(string value);
    partial void OnOsnChanged();
    partial void OnMekNameChanging(string value);
    partial void OnMekNameChanged();
    partial void OnMekSQLChanging(string value);
    partial void OnMekSQLChanged();
    partial void OnMekSQLParametrChanging(string value);
    partial void OnMekSQLParametrChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public RMekDb()
		{
			this._F014 = default(EntityRef<F014>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Osn", DbType="NVarChar(20)")]
		public string Osn
		{
			get
			{
				return this._Osn;
			}
			set
			{
				if ((this._Osn != value))
				{
					if (this._F014.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOsnChanging(value);
					this.SendPropertyChanging();
					this._Osn = value;
					this.SendPropertyChanged("Osn");
					this.OnOsnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MekName", DbType="NVarChar(50)")]
		public string MekName
		{
			get
			{
				return this._MekName;
			}
			set
			{
				if ((this._MekName != value))
				{
					this.OnMekNameChanging(value);
					this.SendPropertyChanging();
					this._MekName = value;
					this.SendPropertyChanged("MekName");
					this.OnMekNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MekSQL", DbType="NVarChar(MAX)")]
		public string MekSQL
		{
			get
			{
				return this._MekSQL;
			}
			set
			{
				if ((this._MekSQL != value))
				{
					this.OnMekSQLChanging(value);
					this.SendPropertyChanging();
					this._MekSQL = value;
					this.SendPropertyChanged("MekSQL");
					this.OnMekSQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MekSQLParametr", DbType="NVarChar(100)")]
		public string MekSQLParametr
		{
			get
			{
				return this._MekSQLParametr;
			}
			set
			{
				if ((this._MekSQLParametr != value))
				{
					this.OnMekSQLParametrChanging(value);
					this.SendPropertyChanging();
					this._MekSQLParametr = value;
					this.SendPropertyChanged("MekSQLParametr");
					this.OnMekSQLParametrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(100)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F014_RMekDb", Storage="_F014", ThisKey="Osn", OtherKey="Osn", IsForeignKey=true)]
		public F014 F014
		{
			get
			{
				return this._F014.Entity;
			}
			set
			{
				F014 previousValue = this._F014.Entity;
				if (((previousValue != value) 
							|| (this._F014.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F014.Entity = null;
						previousValue.RMekDb.Remove(this);
					}
					this._F014.Entity = value;
					if ((value != null))
					{
						value.RMekDb.Add(this);
						this._Osn = value.Osn;
					}
					else
					{
						this._Osn = default(string);
					}
					this.SendPropertyChanged("F014");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.S_1664n")]
	public partial class S_1664n : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private string _NameWithID;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public S_1664n()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(266)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANK")]
	public partial class SANK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<decimal> _S_SUM;
		
		private System.Nullable<int> _S_TIP;
		
		private string _S_OSN;
		
		private string _S_COM;
		
		private System.Nullable<int> _S_IST;
		
		private string _SLID_TEMP;
		
		private System.Nullable<int> _SCHET_ID;
		
		private System.Nullable<int> _SLID;
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _S_DATE;
		
		private System.Nullable<int> _SCHET_SMO_ID;
		
		private System.Nullable<int> _RESANK;
		
		private System.Guid _S_CODE;
		
		private System.Nullable<int> _SANK_IMPORT_ID;
		
		private EntitySet<AKT_EKMP_TBL> _AKT_EKMP_TBL;
		
		private EntitySet<AKT_MEE_TBL> _AKT_MEE_TBL;
		
		private EntityRef<F006> _F006;
		
		private EntityRef<F014> _F014;
		
		private EntityRef<SANK_IMPORT_TBL> _SANK_IMPORT_TBL;
		
		private EntityRef<SCHET_SMO> _SCHET_SMO;
		
		private EntityRef<SCHET> _SCHET;
		
		private EntityRef<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnS_SUMChanging(System.Nullable<decimal> value);
    partial void OnS_SUMChanged();
    partial void OnS_TIPChanging(System.Nullable<int> value);
    partial void OnS_TIPChanged();
    partial void OnS_OSNChanging(string value);
    partial void OnS_OSNChanged();
    partial void OnS_COMChanging(string value);
    partial void OnS_COMChanged();
    partial void OnS_ISTChanging(System.Nullable<int> value);
    partial void OnS_ISTChanged();
    partial void OnSLID_TEMPChanging(string value);
    partial void OnSLID_TEMPChanged();
    partial void OnSCHET_IDChanging(System.Nullable<int> value);
    partial void OnSCHET_IDChanged();
    partial void OnSLIDChanging(System.Nullable<int> value);
    partial void OnSLIDChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnS_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnS_DATEChanged();
    partial void OnSCHET_SMO_IDChanging(System.Nullable<int> value);
    partial void OnSCHET_SMO_IDChanged();
    partial void OnRESANKChanging(System.Nullable<int> value);
    partial void OnRESANKChanged();
    partial void OnS_CODEChanging(System.Guid value);
    partial void OnS_CODEChanged();
    partial void OnSANK_IMPORT_IDChanging(System.Nullable<int> value);
    partial void OnSANK_IMPORT_IDChanged();
    #endregion
		
		public SANK()
		{
			this._AKT_EKMP_TBL = new EntitySet<AKT_EKMP_TBL>(new Action<AKT_EKMP_TBL>(this.attach_AKT_EKMP_TBL), new Action<AKT_EKMP_TBL>(this.detach_AKT_EKMP_TBL));
			this._AKT_MEE_TBL = new EntitySet<AKT_MEE_TBL>(new Action<AKT_MEE_TBL>(this.attach_AKT_MEE_TBL), new Action<AKT_MEE_TBL>(this.detach_AKT_MEE_TBL));
			this._F006 = default(EntityRef<F006>);
			this._F014 = default(EntityRef<F014>);
			this._SANK_IMPORT_TBL = default(EntityRef<SANK_IMPORT_TBL>);
			this._SCHET_SMO = default(EntityRef<SCHET_SMO>);
			this._SCHET = default(EntityRef<SCHET>);
			this._SLUCH = default(EntityRef<SLUCH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_SUM", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> S_SUM
		{
			get
			{
				return this._S_SUM;
			}
			set
			{
				if ((this._S_SUM != value))
				{
					this.OnS_SUMChanging(value);
					this.SendPropertyChanging();
					this._S_SUM = value;
					this.SendPropertyChanged("S_SUM");
					this.OnS_SUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_TIP", DbType="Int")]
		public System.Nullable<int> S_TIP
		{
			get
			{
				return this._S_TIP;
			}
			set
			{
				if ((this._S_TIP != value))
				{
					if (this._F006.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnS_TIPChanging(value);
					this.SendPropertyChanging();
					this._S_TIP = value;
					this.SendPropertyChanged("S_TIP");
					this.OnS_TIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_OSN", DbType="NVarChar(20)")]
		public string S_OSN
		{
			get
			{
				return this._S_OSN;
			}
			set
			{
				if ((this._S_OSN != value))
				{
					if (this._F014.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnS_OSNChanging(value);
					this.SendPropertyChanging();
					this._S_OSN = value;
					this.SendPropertyChanged("S_OSN");
					this.OnS_OSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_COM", DbType="NVarChar(250)")]
		public string S_COM
		{
			get
			{
				return this._S_COM;
			}
			set
			{
				if ((this._S_COM != value))
				{
					this.OnS_COMChanging(value);
					this.SendPropertyChanging();
					this._S_COM = value;
					this.SendPropertyChanged("S_COM");
					this.OnS_COMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_IST", DbType="Int")]
		public System.Nullable<int> S_IST
		{
			get
			{
				return this._S_IST;
			}
			set
			{
				if ((this._S_IST != value))
				{
					this.OnS_ISTChanging(value);
					this.SendPropertyChanging();
					this._S_IST = value;
					this.SendPropertyChanged("S_IST");
					this.OnS_ISTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLID_TEMP", DbType="NVarChar(36)")]
		public string SLID_TEMP
		{
			get
			{
				return this._SLID_TEMP;
			}
			set
			{
				if ((this._SLID_TEMP != value))
				{
					this.OnSLID_TEMPChanging(value);
					this.SendPropertyChanging();
					this._SLID_TEMP = value;
					this.SendPropertyChanged("SLID_TEMP");
					this.OnSLID_TEMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHET_ID", DbType="Int")]
		public System.Nullable<int> SCHET_ID
		{
			get
			{
				return this._SCHET_ID;
			}
			set
			{
				if ((this._SCHET_ID != value))
				{
					if (this._SCHET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSCHET_IDChanging(value);
					this.SendPropertyChanging();
					this._SCHET_ID = value;
					this.SendPropertyChanged("SCHET_ID");
					this.OnSCHET_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLID", DbType="Int")]
		public System.Nullable<int> SLID
		{
			get
			{
				return this._SLID;
			}
			set
			{
				if ((this._SLID != value))
				{
					if (this._SLUCH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSLIDChanging(value);
					this.SendPropertyChanging();
					this._SLID = value;
					this.SendPropertyChanged("SLID");
					this.OnSLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> S_DATE
		{
			get
			{
				return this._S_DATE;
			}
			set
			{
				if ((this._S_DATE != value))
				{
					this.OnS_DATEChanging(value);
					this.SendPropertyChanging();
					this._S_DATE = value;
					this.SendPropertyChanged("S_DATE");
					this.OnS_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHET_SMO_ID", DbType="Int")]
		public System.Nullable<int> SCHET_SMO_ID
		{
			get
			{
				return this._SCHET_SMO_ID;
			}
			set
			{
				if ((this._SCHET_SMO_ID != value))
				{
					if (this._SCHET_SMO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSCHET_SMO_IDChanging(value);
					this.SendPropertyChanging();
					this._SCHET_SMO_ID = value;
					this.SendPropertyChanged("SCHET_SMO_ID");
					this.OnSCHET_SMO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESANK", DbType="Int")]
		public System.Nullable<int> RESANK
		{
			get
			{
				return this._RESANK;
			}
			set
			{
				if ((this._RESANK != value))
				{
					this.OnRESANKChanging(value);
					this.SendPropertyChanging();
					this._RESANK = value;
					this.SendPropertyChanged("RESANK");
					this.OnRESANKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_CODE", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid S_CODE
		{
			get
			{
				return this._S_CODE;
			}
			set
			{
				if ((this._S_CODE != value))
				{
					this.OnS_CODEChanging(value);
					this.SendPropertyChanging();
					this._S_CODE = value;
					this.SendPropertyChanged("S_CODE");
					this.OnS_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANK_IMPORT_ID", DbType="Int")]
		public System.Nullable<int> SANK_IMPORT_ID
		{
			get
			{
				return this._SANK_IMPORT_ID;
			}
			set
			{
				if ((this._SANK_IMPORT_ID != value))
				{
					if (this._SANK_IMPORT_TBL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSANK_IMPORT_IDChanging(value);
					this.SendPropertyChanging();
					this._SANK_IMPORT_ID = value;
					this.SendPropertyChanged("SANK_IMPORT_ID");
					this.OnSANK_IMPORT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANK_AKT_EKMP_TBL", Storage="_AKT_EKMP_TBL", ThisKey="ID", OtherKey="SANKID")]
		public EntitySet<AKT_EKMP_TBL> AKT_EKMP_TBL
		{
			get
			{
				return this._AKT_EKMP_TBL;
			}
			set
			{
				this._AKT_EKMP_TBL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANK_AKT_MEE_TBL", Storage="_AKT_MEE_TBL", ThisKey="ID", OtherKey="SANKID")]
		public EntitySet<AKT_MEE_TBL> AKT_MEE_TBL
		{
			get
			{
				return this._AKT_MEE_TBL;
			}
			set
			{
				this._AKT_MEE_TBL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F006_SANK", Storage="_F006", ThisKey="S_TIP", OtherKey="Id", IsForeignKey=true)]
		public F006 F006
		{
			get
			{
				return this._F006.Entity;
			}
			set
			{
				F006 previousValue = this._F006.Entity;
				if (((previousValue != value) 
							|| (this._F006.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F006.Entity = null;
						previousValue.SANK.Remove(this);
					}
					this._F006.Entity = value;
					if ((value != null))
					{
						value.SANK.Add(this);
						this._S_TIP = value.Id;
					}
					else
					{
						this._S_TIP = default(Nullable<int>);
					}
					this.SendPropertyChanged("F006");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F014_SANK", Storage="_F014", ThisKey="S_OSN", OtherKey="Osn", IsForeignKey=true)]
		public F014 F014
		{
			get
			{
				return this._F014.Entity;
			}
			set
			{
				F014 previousValue = this._F014.Entity;
				if (((previousValue != value) 
							|| (this._F014.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F014.Entity = null;
						previousValue.SANK.Remove(this);
					}
					this._F014.Entity = value;
					if ((value != null))
					{
						value.SANK.Add(this);
						this._S_OSN = value.Osn;
					}
					else
					{
						this._S_OSN = default(string);
					}
					this.SendPropertyChanged("F014");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANK_IMPORT_TBL_SANK", Storage="_SANK_IMPORT_TBL", ThisKey="SANK_IMPORT_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public SANK_IMPORT_TBL SANK_IMPORT_TBL
		{
			get
			{
				return this._SANK_IMPORT_TBL.Entity;
			}
			set
			{
				SANK_IMPORT_TBL previousValue = this._SANK_IMPORT_TBL.Entity;
				if (((previousValue != value) 
							|| (this._SANK_IMPORT_TBL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANK_IMPORT_TBL.Entity = null;
						previousValue.SANK.Remove(this);
					}
					this._SANK_IMPORT_TBL.Entity = value;
					if ((value != null))
					{
						value.SANK.Add(this);
						this._SANK_IMPORT_ID = value.ID;
					}
					else
					{
						this._SANK_IMPORT_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SANK_IMPORT_TBL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHET_SMO_SANK", Storage="_SCHET_SMO", ThisKey="SCHET_SMO_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public SCHET_SMO SCHET_SMO
		{
			get
			{
				return this._SCHET_SMO.Entity;
			}
			set
			{
				SCHET_SMO previousValue = this._SCHET_SMO.Entity;
				if (((previousValue != value) 
							|| (this._SCHET_SMO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCHET_SMO.Entity = null;
						previousValue.SANK.Remove(this);
					}
					this._SCHET_SMO.Entity = value;
					if ((value != null))
					{
						value.SANK.Add(this);
						this._SCHET_SMO_ID = value.ID;
					}
					else
					{
						this._SCHET_SMO_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SCHET_SMO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHET_SANK", Storage="_SCHET", ThisKey="SCHET_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public SCHET SCHET
		{
			get
			{
				return this._SCHET.Entity;
			}
			set
			{
				SCHET previousValue = this._SCHET.Entity;
				if (((previousValue != value) 
							|| (this._SCHET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCHET.Entity = null;
						previousValue.SANK.Remove(this);
					}
					this._SCHET.Entity = value;
					if ((value != null))
					{
						value.SANK.Add(this);
						this._SCHET_ID = value.ID;
					}
					else
					{
						this._SCHET_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SCHET");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SLUCH_SANK", Storage="_SLUCH", ThisKey="SLID", OtherKey="ID", IsForeignKey=true)]
		public SLUCH SLUCH
		{
			get
			{
				return this._SLUCH.Entity;
			}
			set
			{
				SLUCH previousValue = this._SLUCH.Entity;
				if (((previousValue != value) 
							|| (this._SLUCH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SLUCH.Entity = null;
						previousValue.SANK.Remove(this);
					}
					this._SLUCH.Entity = value;
					if ((value != null))
					{
						value.SANK.Add(this);
						this._SLID = value.ID;
					}
					else
					{
						this._SLID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SLUCH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AKT_EKMP_TBL(AKT_EKMP_TBL entity)
		{
			this.SendPropertyChanging();
			entity.SANK = this;
		}
		
		private void detach_AKT_EKMP_TBL(AKT_EKMP_TBL entity)
		{
			this.SendPropertyChanging();
			entity.SANK = null;
		}
		
		private void attach_AKT_MEE_TBL(AKT_MEE_TBL entity)
		{
			this.SendPropertyChanging();
			entity.SANK = this;
		}
		
		private void detach_AKT_MEE_TBL(AKT_MEE_TBL entity)
		{
			this.SendPropertyChanging();
			entity.SANK = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANK_AUTO")]
	public partial class SANK_AUTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _S_NAME;
		
		private string _S_OSN;
		
		private int _S_PROCENT;
		
		private decimal _S_STRAF;
		
		private decimal _S_UMENS;
		
		private string _S_ZAKL;
		
		private string _S_OSN_TS;
		
		private EntitySet<AKT_EKMP_TBL> _AKT_EKMP_TBL;
		
		private EntitySet<AKT_MEE_TBL> _AKT_MEE_TBL;
		
		private EntityRef<F014> _F014;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnS_NAMEChanging(string value);
    partial void OnS_NAMEChanged();
    partial void OnS_OSNChanging(string value);
    partial void OnS_OSNChanged();
    partial void OnS_PROCENTChanging(int value);
    partial void OnS_PROCENTChanged();
    partial void OnS_STRAFChanging(decimal value);
    partial void OnS_STRAFChanged();
    partial void OnS_UMENSChanging(decimal value);
    partial void OnS_UMENSChanged();
    partial void OnS_ZAKLChanging(string value);
    partial void OnS_ZAKLChanged();
    partial void OnS_OSN_TSChanging(string value);
    partial void OnS_OSN_TSChanged();
    #endregion
		
		public SANK_AUTO()
		{
			this._AKT_EKMP_TBL = new EntitySet<AKT_EKMP_TBL>(new Action<AKT_EKMP_TBL>(this.attach_AKT_EKMP_TBL), new Action<AKT_EKMP_TBL>(this.detach_AKT_EKMP_TBL));
			this._AKT_MEE_TBL = new EntitySet<AKT_MEE_TBL>(new Action<AKT_MEE_TBL>(this.attach_AKT_MEE_TBL), new Action<AKT_MEE_TBL>(this.detach_AKT_MEE_TBL));
			this._F014 = default(EntityRef<F014>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_NAME", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string S_NAME
		{
			get
			{
				return this._S_NAME;
			}
			set
			{
				if ((this._S_NAME != value))
				{
					this.OnS_NAMEChanging(value);
					this.SendPropertyChanging();
					this._S_NAME = value;
					this.SendPropertyChanged("S_NAME");
					this.OnS_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_OSN", DbType="NVarChar(20)")]
		public string S_OSN
		{
			get
			{
				return this._S_OSN;
			}
			set
			{
				if ((this._S_OSN != value))
				{
					if (this._F014.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnS_OSNChanging(value);
					this.SendPropertyChanging();
					this._S_OSN = value;
					this.SendPropertyChanged("S_OSN");
					this.OnS_OSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_PROCENT", DbType="Int NOT NULL")]
		public int S_PROCENT
		{
			get
			{
				return this._S_PROCENT;
			}
			set
			{
				if ((this._S_PROCENT != value))
				{
					this.OnS_PROCENTChanging(value);
					this.SendPropertyChanging();
					this._S_PROCENT = value;
					this.SendPropertyChanged("S_PROCENT");
					this.OnS_PROCENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_STRAF", DbType="Decimal(15,2) NOT NULL")]
		public decimal S_STRAF
		{
			get
			{
				return this._S_STRAF;
			}
			set
			{
				if ((this._S_STRAF != value))
				{
					this.OnS_STRAFChanging(value);
					this.SendPropertyChanging();
					this._S_STRAF = value;
					this.SendPropertyChanged("S_STRAF");
					this.OnS_STRAFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_UMENS", DbType="Decimal(15,2) NOT NULL")]
		public decimal S_UMENS
		{
			get
			{
				return this._S_UMENS;
			}
			set
			{
				if ((this._S_UMENS != value))
				{
					this.OnS_UMENSChanging(value);
					this.SendPropertyChanging();
					this._S_UMENS = value;
					this.SendPropertyChanged("S_UMENS");
					this.OnS_UMENSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_ZAKL", DbType="VarChar(1000)")]
		public string S_ZAKL
		{
			get
			{
				return this._S_ZAKL;
			}
			set
			{
				if ((this._S_ZAKL != value))
				{
					this.OnS_ZAKLChanging(value);
					this.SendPropertyChanging();
					this._S_ZAKL = value;
					this.SendPropertyChanged("S_ZAKL");
					this.OnS_ZAKLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_OSN_TS", DbType="NVarChar(20)")]
		public string S_OSN_TS
		{
			get
			{
				return this._S_OSN_TS;
			}
			set
			{
				if ((this._S_OSN_TS != value))
				{
					this.OnS_OSN_TSChanging(value);
					this.SendPropertyChanging();
					this._S_OSN_TS = value;
					this.SendPropertyChanged("S_OSN_TS");
					this.OnS_OSN_TSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANK_AUTO_AKT_EKMP_TBL", Storage="_AKT_EKMP_TBL", ThisKey="ID", OtherKey="SANK_AUTO_ID")]
		public EntitySet<AKT_EKMP_TBL> AKT_EKMP_TBL
		{
			get
			{
				return this._AKT_EKMP_TBL;
			}
			set
			{
				this._AKT_EKMP_TBL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANK_AUTO_AKT_MEE_TBL", Storage="_AKT_MEE_TBL", ThisKey="ID", OtherKey="SANK_AUTO_ID")]
		public EntitySet<AKT_MEE_TBL> AKT_MEE_TBL
		{
			get
			{
				return this._AKT_MEE_TBL;
			}
			set
			{
				this._AKT_MEE_TBL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F014_SANK_AUTO", Storage="_F014", ThisKey="S_OSN", OtherKey="Osn", IsForeignKey=true)]
		public F014 F014
		{
			get
			{
				return this._F014.Entity;
			}
			set
			{
				F014 previousValue = this._F014.Entity;
				if (((previousValue != value) 
							|| (this._F014.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F014.Entity = null;
						previousValue.SANK_AUTO.Remove(this);
					}
					this._F014.Entity = value;
					if ((value != null))
					{
						value.SANK_AUTO.Add(this);
						this._S_OSN = value.Osn;
					}
					else
					{
						this._S_OSN = default(string);
					}
					this.SendPropertyChanged("F014");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AKT_EKMP_TBL(AKT_EKMP_TBL entity)
		{
			this.SendPropertyChanging();
			entity.SANK_AUTO = this;
		}
		
		private void detach_AKT_EKMP_TBL(AKT_EKMP_TBL entity)
		{
			this.SendPropertyChanging();
			entity.SANK_AUTO = null;
		}
		
		private void attach_AKT_MEE_TBL(AKT_MEE_TBL entity)
		{
			this.SendPropertyChanging();
			entity.SANK_AUTO = this;
		}
		
		private void detach_AKT_MEE_TBL(AKT_MEE_TBL entity)
		{
			this.SendPropertyChanging();
			entity.SANK_AUTO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANK_EXP_TT")]
	public partial class SANK_EXP_TT
	{
		
		private string _CODE_MO;
		
		private System.Nullable<int> _YEAR;
		
		private System.Nullable<int> _MONTH;
		
		private string _NSCHET;
		
		private System.Nullable<System.DateTime> _DSCHET;
		
		private string _PLAT;
		
		private System.Nullable<int> _LPUID;
		
		private string _NPOLIS;
		
		private System.Nullable<int> _USL_OK;
		
		private System.Nullable<int> _PROFIL;
		
		private string _DS1;
		
		private System.Nullable<System.DateTime> _DATE_1;
		
		private System.Nullable<System.DateTime> _DATE_2;
		
		private System.Nullable<int> _SLUCH_TYPE;
		
		private System.Nullable<int> _OS_SLUCH_REGION;
		
		private string _NHISTORY;
		
		private System.Guid _IDSLG;
		
		private System.Guid _S_CODE;
		
		private string _S_EXP_CODE;
		
		private System.Nullable<decimal> _S_SUM;
		
		private System.Nullable<int> _S_TIP;
		
		private System.Nullable<int> _S_OSN;
		
		private string _S_OSN_TS;
		
		private string _S_COM;
		
		private System.Nullable<System.DateTime> _S_DATE;
		
		private string _S_ZAKL;
		
		private System.Nullable<int> _S_IST;
		
		public SANK_EXP_TT()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE_MO", DbType="NVarChar(6)")]
		public string CODE_MO
		{
			get
			{
				return this._CODE_MO;
			}
			set
			{
				if ((this._CODE_MO != value))
				{
					this._CODE_MO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YEAR", DbType="Int")]
		public System.Nullable<int> YEAR
		{
			get
			{
				return this._YEAR;
			}
			set
			{
				if ((this._YEAR != value))
				{
					this._YEAR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MONTH", DbType="Int")]
		public System.Nullable<int> MONTH
		{
			get
			{
				return this._MONTH;
			}
			set
			{
				if ((this._MONTH != value))
				{
					this._MONTH = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSCHET", DbType="NVarChar(15)")]
		public string NSCHET
		{
			get
			{
				return this._NSCHET;
			}
			set
			{
				if ((this._NSCHET != value))
				{
					this._NSCHET = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSCHET", DbType="DateTime")]
		public System.Nullable<System.DateTime> DSCHET
		{
			get
			{
				return this._DSCHET;
			}
			set
			{
				if ((this._DSCHET != value))
				{
					this._DSCHET = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLAT", DbType="NVarChar(5)")]
		public string PLAT
		{
			get
			{
				return this._PLAT;
			}
			set
			{
				if ((this._PLAT != value))
				{
					this._PLAT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPUID", DbType="Int")]
		public System.Nullable<int> LPUID
		{
			get
			{
				return this._LPUID;
			}
			set
			{
				if ((this._LPUID != value))
				{
					this._LPUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPOLIS", DbType="NVarChar(20)")]
		public string NPOLIS
		{
			get
			{
				return this._NPOLIS;
			}
			set
			{
				if ((this._NPOLIS != value))
				{
					this._NPOLIS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USL_OK", DbType="Int")]
		public System.Nullable<int> USL_OK
		{
			get
			{
				return this._USL_OK;
			}
			set
			{
				if ((this._USL_OK != value))
				{
					this._USL_OK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROFIL", DbType="Int")]
		public System.Nullable<int> PROFIL
		{
			get
			{
				return this._PROFIL;
			}
			set
			{
				if ((this._PROFIL != value))
				{
					this._PROFIL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS1", DbType="NVarChar(10)")]
		public string DS1
		{
			get
			{
				return this._DS1;
			}
			set
			{
				if ((this._DS1 != value))
				{
					this._DS1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_1", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_1
		{
			get
			{
				return this._DATE_1;
			}
			set
			{
				if ((this._DATE_1 != value))
				{
					this._DATE_1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_2", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_2
		{
			get
			{
				return this._DATE_2;
			}
			set
			{
				if ((this._DATE_2 != value))
				{
					this._DATE_2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLUCH_TYPE", DbType="Int")]
		public System.Nullable<int> SLUCH_TYPE
		{
			get
			{
				return this._SLUCH_TYPE;
			}
			set
			{
				if ((this._SLUCH_TYPE != value))
				{
					this._SLUCH_TYPE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS_SLUCH_REGION", DbType="Int")]
		public System.Nullable<int> OS_SLUCH_REGION
		{
			get
			{
				return this._OS_SLUCH_REGION;
			}
			set
			{
				if ((this._OS_SLUCH_REGION != value))
				{
					this._OS_SLUCH_REGION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NHISTORY", DbType="NVarChar(50)")]
		public string NHISTORY
		{
			get
			{
				return this._NHISTORY;
			}
			set
			{
				if ((this._NHISTORY != value))
				{
					this._NHISTORY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSLG", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid IDSLG
		{
			get
			{
				return this._IDSLG;
			}
			set
			{
				if ((this._IDSLG != value))
				{
					this._IDSLG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_CODE", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid S_CODE
		{
			get
			{
				return this._S_CODE;
			}
			set
			{
				if ((this._S_CODE != value))
				{
					this._S_CODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_EXP_CODE", DbType="VarChar(50)")]
		public string S_EXP_CODE
		{
			get
			{
				return this._S_EXP_CODE;
			}
			set
			{
				if ((this._S_EXP_CODE != value))
				{
					this._S_EXP_CODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_SUM", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> S_SUM
		{
			get
			{
				return this._S_SUM;
			}
			set
			{
				if ((this._S_SUM != value))
				{
					this._S_SUM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_TIP", DbType="Int")]
		public System.Nullable<int> S_TIP
		{
			get
			{
				return this._S_TIP;
			}
			set
			{
				if ((this._S_TIP != value))
				{
					this._S_TIP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_OSN", DbType="Int")]
		public System.Nullable<int> S_OSN
		{
			get
			{
				return this._S_OSN;
			}
			set
			{
				if ((this._S_OSN != value))
				{
					this._S_OSN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_OSN_TS", DbType="NVarChar(20)")]
		public string S_OSN_TS
		{
			get
			{
				return this._S_OSN_TS;
			}
			set
			{
				if ((this._S_OSN_TS != value))
				{
					this._S_OSN_TS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_COM", DbType="NVarChar(250)")]
		public string S_COM
		{
			get
			{
				return this._S_COM;
			}
			set
			{
				if ((this._S_COM != value))
				{
					this._S_COM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> S_DATE
		{
			get
			{
				return this._S_DATE;
			}
			set
			{
				if ((this._S_DATE != value))
				{
					this._S_DATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_ZAKL", DbType="NVarChar(1000)")]
		public string S_ZAKL
		{
			get
			{
				return this._S_ZAKL;
			}
			set
			{
				if ((this._S_ZAKL != value))
				{
					this._S_ZAKL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_IST", DbType="Int")]
		public System.Nullable<int> S_IST
		{
			get
			{
				return this._S_IST;
			}
			set
			{
				if ((this._S_IST != value))
				{
					this._S_IST = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANK_IMPORT_TBL")]
	public partial class SANK_IMPORT_TBL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _VERSION;
		
		private System.Nullable<System.DateTime> _DATA;
		
		private string _FILENAME;
		
		private System.Nullable<decimal> _SANK_MEK;
		
		private System.Nullable<decimal> _SANK_MEE;
		
		private System.Nullable<decimal> _SANK_EKMP;
		
		private System.Nullable<int> _COUNT_SL;
		
		private int _SCHET_ID;
		
		private EntitySet<SANK> _SANK;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVERSIONChanging(string value);
    partial void OnVERSIONChanged();
    partial void OnDATAChanging(System.Nullable<System.DateTime> value);
    partial void OnDATAChanged();
    partial void OnFILENAMEChanging(string value);
    partial void OnFILENAMEChanged();
    partial void OnSANK_MEKChanging(System.Nullable<decimal> value);
    partial void OnSANK_MEKChanged();
    partial void OnSANK_MEEChanging(System.Nullable<decimal> value);
    partial void OnSANK_MEEChanged();
    partial void OnSANK_EKMPChanging(System.Nullable<decimal> value);
    partial void OnSANK_EKMPChanged();
    partial void OnCOUNT_SLChanging(System.Nullable<int> value);
    partial void OnCOUNT_SLChanged();
    partial void OnSCHET_IDChanging(int value);
    partial void OnSCHET_IDChanged();
    #endregion
		
		public SANK_IMPORT_TBL()
		{
			this._SANK = new EntitySet<SANK>(new Action<SANK>(this.attach_SANK), new Action<SANK>(this.detach_SANK));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VERSION", DbType="NVarChar(5)")]
		public string VERSION
		{
			get
			{
				return this._VERSION;
			}
			set
			{
				if ((this._VERSION != value))
				{
					this.OnVERSIONChanging(value);
					this.SendPropertyChanging();
					this._VERSION = value;
					this.SendPropertyChanged("VERSION");
					this.OnVERSIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA
		{
			get
			{
				return this._DATA;
			}
			set
			{
				if ((this._DATA != value))
				{
					this.OnDATAChanging(value);
					this.SendPropertyChanging();
					this._DATA = value;
					this.SendPropertyChanged("DATA");
					this.OnDATAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FILENAME", DbType="NVarChar(26)")]
		public string FILENAME
		{
			get
			{
				return this._FILENAME;
			}
			set
			{
				if ((this._FILENAME != value))
				{
					this.OnFILENAMEChanging(value);
					this.SendPropertyChanging();
					this._FILENAME = value;
					this.SendPropertyChanged("FILENAME");
					this.OnFILENAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANK_MEK", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SANK_MEK
		{
			get
			{
				return this._SANK_MEK;
			}
			set
			{
				if ((this._SANK_MEK != value))
				{
					this.OnSANK_MEKChanging(value);
					this.SendPropertyChanging();
					this._SANK_MEK = value;
					this.SendPropertyChanged("SANK_MEK");
					this.OnSANK_MEKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANK_MEE", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SANK_MEE
		{
			get
			{
				return this._SANK_MEE;
			}
			set
			{
				if ((this._SANK_MEE != value))
				{
					this.OnSANK_MEEChanging(value);
					this.SendPropertyChanging();
					this._SANK_MEE = value;
					this.SendPropertyChanged("SANK_MEE");
					this.OnSANK_MEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANK_EKMP", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SANK_EKMP
		{
			get
			{
				return this._SANK_EKMP;
			}
			set
			{
				if ((this._SANK_EKMP != value))
				{
					this.OnSANK_EKMPChanging(value);
					this.SendPropertyChanging();
					this._SANK_EKMP = value;
					this.SendPropertyChanged("SANK_EKMP");
					this.OnSANK_EKMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNT_SL", DbType="Int")]
		public System.Nullable<int> COUNT_SL
		{
			get
			{
				return this._COUNT_SL;
			}
			set
			{
				if ((this._COUNT_SL != value))
				{
					this.OnCOUNT_SLChanging(value);
					this.SendPropertyChanging();
					this._COUNT_SL = value;
					this.SendPropertyChanged("COUNT_SL");
					this.OnCOUNT_SLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHET_ID", DbType="Int NOT NULL")]
		public int SCHET_ID
		{
			get
			{
				return this._SCHET_ID;
			}
			set
			{
				if ((this._SCHET_ID != value))
				{
					this.OnSCHET_IDChanging(value);
					this.SendPropertyChanging();
					this._SCHET_ID = value;
					this.SendPropertyChanged("SCHET_ID");
					this.OnSCHET_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANK_IMPORT_TBL_SANK", Storage="_SANK", ThisKey="ID", OtherKey="SANK_IMPORT_ID")]
		public EntitySet<SANK> SANK
		{
			get
			{
				return this._SANK;
			}
			set
			{
				this._SANK.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANK(SANK entity)
		{
			this.SendPropertyChanging();
			entity.SANK_IMPORT_TBL = this;
		}
		
		private void detach_SANK(SANK entity)
		{
			this.SendPropertyChanging();
			entity.SANK_IMPORT_TBL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANK_RE")]
	public partial class SANK_RE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<decimal> _S_SUM;
		
		private System.Nullable<int> _S_TIP;
		
		private string _S_OSN;
		
		private string _S_COM;
		
		private System.Nullable<int> _S_IST;
		
		private string _SLID_TEMP;
		
		private System.Nullable<int> _SCHET_ID;
		
		private System.Nullable<int> _SLID;
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _S_DATE;
		
		private EntityRef<F006> _F006;
		
		private EntityRef<F014> _F014;
		
		private EntityRef<SCHET> _SCHET;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnS_SUMChanging(System.Nullable<decimal> value);
    partial void OnS_SUMChanged();
    partial void OnS_TIPChanging(System.Nullable<int> value);
    partial void OnS_TIPChanged();
    partial void OnS_OSNChanging(string value);
    partial void OnS_OSNChanged();
    partial void OnS_COMChanging(string value);
    partial void OnS_COMChanged();
    partial void OnS_ISTChanging(System.Nullable<int> value);
    partial void OnS_ISTChanged();
    partial void OnSLID_TEMPChanging(string value);
    partial void OnSLID_TEMPChanged();
    partial void OnSCHET_IDChanging(System.Nullable<int> value);
    partial void OnSCHET_IDChanged();
    partial void OnSLIDChanging(System.Nullable<int> value);
    partial void OnSLIDChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnS_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnS_DATEChanged();
    #endregion
		
		public SANK_RE()
		{
			this._F006 = default(EntityRef<F006>);
			this._F014 = default(EntityRef<F014>);
			this._SCHET = default(EntityRef<SCHET>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_SUM", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> S_SUM
		{
			get
			{
				return this._S_SUM;
			}
			set
			{
				if ((this._S_SUM != value))
				{
					this.OnS_SUMChanging(value);
					this.SendPropertyChanging();
					this._S_SUM = value;
					this.SendPropertyChanged("S_SUM");
					this.OnS_SUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_TIP", DbType="Int")]
		public System.Nullable<int> S_TIP
		{
			get
			{
				return this._S_TIP;
			}
			set
			{
				if ((this._S_TIP != value))
				{
					if (this._F006.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnS_TIPChanging(value);
					this.SendPropertyChanging();
					this._S_TIP = value;
					this.SendPropertyChanged("S_TIP");
					this.OnS_TIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_OSN", DbType="NVarChar(20)")]
		public string S_OSN
		{
			get
			{
				return this._S_OSN;
			}
			set
			{
				if ((this._S_OSN != value))
				{
					if (this._F014.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnS_OSNChanging(value);
					this.SendPropertyChanging();
					this._S_OSN = value;
					this.SendPropertyChanged("S_OSN");
					this.OnS_OSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_COM", DbType="NVarChar(250)")]
		public string S_COM
		{
			get
			{
				return this._S_COM;
			}
			set
			{
				if ((this._S_COM != value))
				{
					this.OnS_COMChanging(value);
					this.SendPropertyChanging();
					this._S_COM = value;
					this.SendPropertyChanged("S_COM");
					this.OnS_COMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_IST", DbType="Int")]
		public System.Nullable<int> S_IST
		{
			get
			{
				return this._S_IST;
			}
			set
			{
				if ((this._S_IST != value))
				{
					this.OnS_ISTChanging(value);
					this.SendPropertyChanging();
					this._S_IST = value;
					this.SendPropertyChanged("S_IST");
					this.OnS_ISTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLID_TEMP", DbType="NVarChar(36)")]
		public string SLID_TEMP
		{
			get
			{
				return this._SLID_TEMP;
			}
			set
			{
				if ((this._SLID_TEMP != value))
				{
					this.OnSLID_TEMPChanging(value);
					this.SendPropertyChanging();
					this._SLID_TEMP = value;
					this.SendPropertyChanged("SLID_TEMP");
					this.OnSLID_TEMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHET_ID", DbType="Int")]
		public System.Nullable<int> SCHET_ID
		{
			get
			{
				return this._SCHET_ID;
			}
			set
			{
				if ((this._SCHET_ID != value))
				{
					if (this._SCHET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSCHET_IDChanging(value);
					this.SendPropertyChanging();
					this._SCHET_ID = value;
					this.SendPropertyChanged("SCHET_ID");
					this.OnSCHET_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLID", DbType="Int")]
		public System.Nullable<int> SLID
		{
			get
			{
				return this._SLID;
			}
			set
			{
				if ((this._SLID != value))
				{
					this.OnSLIDChanging(value);
					this.SendPropertyChanging();
					this._SLID = value;
					this.SendPropertyChanged("SLID");
					this.OnSLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> S_DATE
		{
			get
			{
				return this._S_DATE;
			}
			set
			{
				if ((this._S_DATE != value))
				{
					this.OnS_DATEChanging(value);
					this.SendPropertyChanging();
					this._S_DATE = value;
					this.SendPropertyChanged("S_DATE");
					this.OnS_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F006_SANK_RE", Storage="_F006", ThisKey="S_TIP", OtherKey="Id", IsForeignKey=true)]
		public F006 F006
		{
			get
			{
				return this._F006.Entity;
			}
			set
			{
				F006 previousValue = this._F006.Entity;
				if (((previousValue != value) 
							|| (this._F006.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F006.Entity = null;
						previousValue.SANK_RE.Remove(this);
					}
					this._F006.Entity = value;
					if ((value != null))
					{
						value.SANK_RE.Add(this);
						this._S_TIP = value.Id;
					}
					else
					{
						this._S_TIP = default(Nullable<int>);
					}
					this.SendPropertyChanged("F006");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F014_SANK_RE", Storage="_F014", ThisKey="S_OSN", OtherKey="Osn", IsForeignKey=true)]
		public F014 F014
		{
			get
			{
				return this._F014.Entity;
			}
			set
			{
				F014 previousValue = this._F014.Entity;
				if (((previousValue != value) 
							|| (this._F014.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F014.Entity = null;
						previousValue.SANK_RE.Remove(this);
					}
					this._F014.Entity = value;
					if ((value != null))
					{
						value.SANK_RE.Add(this);
						this._S_OSN = value.Osn;
					}
					else
					{
						this._S_OSN = default(string);
					}
					this.SendPropertyChanged("F014");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHET_SANK_RE", Storage="_SCHET", ThisKey="SCHET_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public SCHET SCHET
		{
			get
			{
				return this._SCHET.Entity;
			}
			set
			{
				SCHET previousValue = this._SCHET.Entity;
				if (((previousValue != value) 
							|| (this._SCHET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCHET.Entity = null;
						previousValue.SANK_RE.Remove(this);
					}
					this._SCHET.Entity = value;
					if ((value != null))
					{
						value.SANK_RE.Add(this);
						this._SCHET_ID = value.ID;
					}
					else
					{
						this._SCHET_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SCHET");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCHET_OMS")]
	public partial class SCHET_OMS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CODE;
		
		private int _SCHET_ID;
		
		private string _CODE_MO;
		
		private int _YEAR;
		
		private int _MONTH;
		
		private string _NSCHET;
		
		private System.DateTime _DSCHET;
		
		private string _PLAT;
		
		private System.Nullable<decimal> _SUMMAV;
		
		private string _COMENTS;
		
		private System.Nullable<decimal> _SUMMAP;
		
		private System.Nullable<decimal> _SANK_MEK;
		
		private System.Nullable<decimal> _SANK_MEE;
		
		private System.Nullable<decimal> _SANK_EKMP;
		
		private System.Nullable<int> _COUNT_SL;
		
		private EntitySet<SLUCH> _SLUCH;
		
		private EntityRef<F003> _F003;
		
		private EntityRef<SprPayment> _SprPayment;
		
		private EntityRef<SCHET> _SCHET;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCODEChanging(int value);
    partial void OnCODEChanged();
    partial void OnSCHET_IDChanging(int value);
    partial void OnSCHET_IDChanged();
    partial void OnCODE_MOChanging(string value);
    partial void OnCODE_MOChanged();
    partial void OnYEARChanging(int value);
    partial void OnYEARChanged();
    partial void OnMONTHChanging(int value);
    partial void OnMONTHChanged();
    partial void OnNSCHETChanging(string value);
    partial void OnNSCHETChanged();
    partial void OnDSCHETChanging(System.DateTime value);
    partial void OnDSCHETChanged();
    partial void OnPLATChanging(string value);
    partial void OnPLATChanged();
    partial void OnSUMMAVChanging(System.Nullable<decimal> value);
    partial void OnSUMMAVChanged();
    partial void OnCOMENTSChanging(string value);
    partial void OnCOMENTSChanged();
    partial void OnSUMMAPChanging(System.Nullable<decimal> value);
    partial void OnSUMMAPChanged();
    partial void OnSANK_MEKChanging(System.Nullable<decimal> value);
    partial void OnSANK_MEKChanged();
    partial void OnSANK_MEEChanging(System.Nullable<decimal> value);
    partial void OnSANK_MEEChanged();
    partial void OnSANK_EKMPChanging(System.Nullable<decimal> value);
    partial void OnSANK_EKMPChanged();
    partial void OnCOUNT_SLChanging(System.Nullable<int> value);
    partial void OnCOUNT_SLChanged();
    #endregion
		
		public SCHET_OMS()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			this._F003 = default(EntityRef<F003>);
			this._SprPayment = default(EntityRef<SprPayment>);
			this._SCHET = default(EntityRef<SCHET>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHET_ID", DbType="Int NOT NULL")]
		public int SCHET_ID
		{
			get
			{
				return this._SCHET_ID;
			}
			set
			{
				if ((this._SCHET_ID != value))
				{
					if (this._SCHET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSCHET_IDChanging(value);
					this.SendPropertyChanging();
					this._SCHET_ID = value;
					this.SendPropertyChanged("SCHET_ID");
					this.OnSCHET_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE_MO", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string CODE_MO
		{
			get
			{
				return this._CODE_MO;
			}
			set
			{
				if ((this._CODE_MO != value))
				{
					if (this._F003.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCODE_MOChanging(value);
					this.SendPropertyChanging();
					this._CODE_MO = value;
					this.SendPropertyChanged("CODE_MO");
					this.OnCODE_MOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YEAR", DbType="Int NOT NULL")]
		public int YEAR
		{
			get
			{
				return this._YEAR;
			}
			set
			{
				if ((this._YEAR != value))
				{
					this.OnYEARChanging(value);
					this.SendPropertyChanging();
					this._YEAR = value;
					this.SendPropertyChanged("YEAR");
					this.OnYEARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MONTH", DbType="Int NOT NULL")]
		public int MONTH
		{
			get
			{
				return this._MONTH;
			}
			set
			{
				if ((this._MONTH != value))
				{
					this.OnMONTHChanging(value);
					this.SendPropertyChanging();
					this._MONTH = value;
					this.SendPropertyChanged("MONTH");
					this.OnMONTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSCHET", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string NSCHET
		{
			get
			{
				return this._NSCHET;
			}
			set
			{
				if ((this._NSCHET != value))
				{
					this.OnNSCHETChanging(value);
					this.SendPropertyChanging();
					this._NSCHET = value;
					this.SendPropertyChanged("NSCHET");
					this.OnNSCHETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSCHET", DbType="DateTime NOT NULL")]
		public System.DateTime DSCHET
		{
			get
			{
				return this._DSCHET;
			}
			set
			{
				if ((this._DSCHET != value))
				{
					this.OnDSCHETChanging(value);
					this.SendPropertyChanging();
					this._DSCHET = value;
					this.SendPropertyChanged("DSCHET");
					this.OnDSCHETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLAT", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string PLAT
		{
			get
			{
				return this._PLAT;
			}
			set
			{
				if ((this._PLAT != value))
				{
					if (this._SprPayment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPLATChanging(value);
					this.SendPropertyChanging();
					this._PLAT = value;
					this.SendPropertyChanged("PLAT");
					this.OnPLATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUMMAV", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUMMAV
		{
			get
			{
				return this._SUMMAV;
			}
			set
			{
				if ((this._SUMMAV != value))
				{
					this.OnSUMMAVChanging(value);
					this.SendPropertyChanging();
					this._SUMMAV = value;
					this.SendPropertyChanged("SUMMAV");
					this.OnSUMMAVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMENTS", DbType="NVarChar(250)")]
		public string COMENTS
		{
			get
			{
				return this._COMENTS;
			}
			set
			{
				if ((this._COMENTS != value))
				{
					this.OnCOMENTSChanging(value);
					this.SendPropertyChanging();
					this._COMENTS = value;
					this.SendPropertyChanged("COMENTS");
					this.OnCOMENTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUMMAP", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUMMAP
		{
			get
			{
				return this._SUMMAP;
			}
			set
			{
				if ((this._SUMMAP != value))
				{
					this.OnSUMMAPChanging(value);
					this.SendPropertyChanging();
					this._SUMMAP = value;
					this.SendPropertyChanged("SUMMAP");
					this.OnSUMMAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANK_MEK", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SANK_MEK
		{
			get
			{
				return this._SANK_MEK;
			}
			set
			{
				if ((this._SANK_MEK != value))
				{
					this.OnSANK_MEKChanging(value);
					this.SendPropertyChanging();
					this._SANK_MEK = value;
					this.SendPropertyChanged("SANK_MEK");
					this.OnSANK_MEKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANK_MEE", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SANK_MEE
		{
			get
			{
				return this._SANK_MEE;
			}
			set
			{
				if ((this._SANK_MEE != value))
				{
					this.OnSANK_MEEChanging(value);
					this.SendPropertyChanging();
					this._SANK_MEE = value;
					this.SendPropertyChanged("SANK_MEE");
					this.OnSANK_MEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANK_EKMP", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SANK_EKMP
		{
			get
			{
				return this._SANK_EKMP;
			}
			set
			{
				if ((this._SANK_EKMP != value))
				{
					this.OnSANK_EKMPChanging(value);
					this.SendPropertyChanging();
					this._SANK_EKMP = value;
					this.SendPropertyChanged("SANK_EKMP");
					this.OnSANK_EKMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNT_SL", DbType="Int")]
		public System.Nullable<int> COUNT_SL
		{
			get
			{
				return this._COUNT_SL;
			}
			set
			{
				if ((this._COUNT_SL != value))
				{
					this.OnCOUNT_SLChanging(value);
					this.SendPropertyChanging();
					this._COUNT_SL = value;
					this.SendPropertyChanged("COUNT_SL");
					this.OnCOUNT_SLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHET_OMS_SLUCH", Storage="_SLUCH", ThisKey="CODE", OtherKey="SCHET_OMS_ID")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F003_SCHET_OMS", Storage="_F003", ThisKey="CODE_MO", OtherKey="mcod", IsForeignKey=true)]
		public F003 F003
		{
			get
			{
				return this._F003.Entity;
			}
			set
			{
				F003 previousValue = this._F003.Entity;
				if (((previousValue != value) 
							|| (this._F003.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F003.Entity = null;
						previousValue.SCHET_OMS.Remove(this);
					}
					this._F003.Entity = value;
					if ((value != null))
					{
						value.SCHET_OMS.Add(this);
						this._CODE_MO = value.mcod;
					}
					else
					{
						this._CODE_MO = default(string);
					}
					this.SendPropertyChanged("F003");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprPayment_SCHET_OMS", Storage="_SprPayment", ThisKey="PLAT", OtherKey="ID", IsForeignKey=true)]
		public SprPayment SprPayment
		{
			get
			{
				return this._SprPayment.Entity;
			}
			set
			{
				SprPayment previousValue = this._SprPayment.Entity;
				if (((previousValue != value) 
							|| (this._SprPayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SprPayment.Entity = null;
						previousValue.SCHET_OMS.Remove(this);
					}
					this._SprPayment.Entity = value;
					if ((value != null))
					{
						value.SCHET_OMS.Add(this);
						this._PLAT = value.ID;
					}
					else
					{
						this._PLAT = default(string);
					}
					this.SendPropertyChanged("SprPayment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHET_SCHET_OMS", Storage="_SCHET", ThisKey="SCHET_ID", OtherKey="ID", IsForeignKey=true)]
		public SCHET SCHET
		{
			get
			{
				return this._SCHET.Entity;
			}
			set
			{
				SCHET previousValue = this._SCHET.Entity;
				if (((previousValue != value) 
							|| (this._SCHET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCHET.Entity = null;
						previousValue.SCHET_OMS.Remove(this);
					}
					this._SCHET.Entity = value;
					if ((value != null))
					{
						value.SCHET_OMS.Add(this);
						this._SCHET_ID = value.ID;
					}
					else
					{
						this._SCHET_ID = default(int);
					}
					this.SendPropertyChanged("SCHET");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.SCHET_OMS = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.SCHET_OMS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCHET_SMO")]
	public partial class SCHET_SMO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CODE;
		
		private string _CODE_MO;
		
		private System.Nullable<int> _YEAR;
		
		private System.Nullable<int> _MONTH;
		
		private string _NSCHET;
		
		private System.Nullable<System.DateTime> _DSCHET;
		
		private string _PLAT;
		
		private System.Nullable<decimal> _SUMMAV;
		
		private string _COMENTS;
		
		private System.Nullable<decimal> _SUMMAP;
		
		private System.Nullable<decimal> _SANK_MEK;
		
		private System.Nullable<decimal> _SANK_MEE;
		
		private System.Nullable<decimal> _SANK_EKMP;
		
		private System.Nullable<int> _COUNT_SL;
		
		private int _SCHET_ID;
		
		private EntitySet<SANK> _SANK;
		
		private EntityRef<F003> _F003;
		
		private EntityRef<SCHET> _SCHET;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCODEChanging(System.Nullable<int> value);
    partial void OnCODEChanged();
    partial void OnCODE_MOChanging(string value);
    partial void OnCODE_MOChanged();
    partial void OnYEARChanging(System.Nullable<int> value);
    partial void OnYEARChanged();
    partial void OnMONTHChanging(System.Nullable<int> value);
    partial void OnMONTHChanged();
    partial void OnNSCHETChanging(string value);
    partial void OnNSCHETChanged();
    partial void OnDSCHETChanging(System.Nullable<System.DateTime> value);
    partial void OnDSCHETChanged();
    partial void OnPLATChanging(string value);
    partial void OnPLATChanged();
    partial void OnSUMMAVChanging(System.Nullable<decimal> value);
    partial void OnSUMMAVChanged();
    partial void OnCOMENTSChanging(string value);
    partial void OnCOMENTSChanged();
    partial void OnSUMMAPChanging(System.Nullable<decimal> value);
    partial void OnSUMMAPChanged();
    partial void OnSANK_MEKChanging(System.Nullable<decimal> value);
    partial void OnSANK_MEKChanged();
    partial void OnSANK_MEEChanging(System.Nullable<decimal> value);
    partial void OnSANK_MEEChanged();
    partial void OnSANK_EKMPChanging(System.Nullable<decimal> value);
    partial void OnSANK_EKMPChanged();
    partial void OnCOUNT_SLChanging(System.Nullable<int> value);
    partial void OnCOUNT_SLChanged();
    partial void OnSCHET_IDChanging(int value);
    partial void OnSCHET_IDChanged();
    #endregion
		
		public SCHET_SMO()
		{
			this._SANK = new EntitySet<SANK>(new Action<SANK>(this.attach_SANK), new Action<SANK>(this.detach_SANK));
			this._F003 = default(EntityRef<F003>);
			this._SCHET = default(EntityRef<SCHET>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="Int")]
		public System.Nullable<int> CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE_MO", DbType="NVarChar(6)")]
		public string CODE_MO
		{
			get
			{
				return this._CODE_MO;
			}
			set
			{
				if ((this._CODE_MO != value))
				{
					if (this._F003.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCODE_MOChanging(value);
					this.SendPropertyChanging();
					this._CODE_MO = value;
					this.SendPropertyChanged("CODE_MO");
					this.OnCODE_MOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YEAR", DbType="Int")]
		public System.Nullable<int> YEAR
		{
			get
			{
				return this._YEAR;
			}
			set
			{
				if ((this._YEAR != value))
				{
					this.OnYEARChanging(value);
					this.SendPropertyChanging();
					this._YEAR = value;
					this.SendPropertyChanged("YEAR");
					this.OnYEARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MONTH", DbType="Int")]
		public System.Nullable<int> MONTH
		{
			get
			{
				return this._MONTH;
			}
			set
			{
				if ((this._MONTH != value))
				{
					this.OnMONTHChanging(value);
					this.SendPropertyChanging();
					this._MONTH = value;
					this.SendPropertyChanged("MONTH");
					this.OnMONTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSCHET", DbType="NVarChar(15)")]
		public string NSCHET
		{
			get
			{
				return this._NSCHET;
			}
			set
			{
				if ((this._NSCHET != value))
				{
					this.OnNSCHETChanging(value);
					this.SendPropertyChanging();
					this._NSCHET = value;
					this.SendPropertyChanged("NSCHET");
					this.OnNSCHETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSCHET", DbType="DateTime")]
		public System.Nullable<System.DateTime> DSCHET
		{
			get
			{
				return this._DSCHET;
			}
			set
			{
				if ((this._DSCHET != value))
				{
					this.OnDSCHETChanging(value);
					this.SendPropertyChanging();
					this._DSCHET = value;
					this.SendPropertyChanged("DSCHET");
					this.OnDSCHETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLAT", DbType="NVarChar(5)")]
		public string PLAT
		{
			get
			{
				return this._PLAT;
			}
			set
			{
				if ((this._PLAT != value))
				{
					this.OnPLATChanging(value);
					this.SendPropertyChanging();
					this._PLAT = value;
					this.SendPropertyChanged("PLAT");
					this.OnPLATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUMMAV", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUMMAV
		{
			get
			{
				return this._SUMMAV;
			}
			set
			{
				if ((this._SUMMAV != value))
				{
					this.OnSUMMAVChanging(value);
					this.SendPropertyChanging();
					this._SUMMAV = value;
					this.SendPropertyChanged("SUMMAV");
					this.OnSUMMAVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMENTS", DbType="NVarChar(250)")]
		public string COMENTS
		{
			get
			{
				return this._COMENTS;
			}
			set
			{
				if ((this._COMENTS != value))
				{
					this.OnCOMENTSChanging(value);
					this.SendPropertyChanging();
					this._COMENTS = value;
					this.SendPropertyChanged("COMENTS");
					this.OnCOMENTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUMMAP", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUMMAP
		{
			get
			{
				return this._SUMMAP;
			}
			set
			{
				if ((this._SUMMAP != value))
				{
					this.OnSUMMAPChanging(value);
					this.SendPropertyChanging();
					this._SUMMAP = value;
					this.SendPropertyChanged("SUMMAP");
					this.OnSUMMAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANK_MEK", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SANK_MEK
		{
			get
			{
				return this._SANK_MEK;
			}
			set
			{
				if ((this._SANK_MEK != value))
				{
					this.OnSANK_MEKChanging(value);
					this.SendPropertyChanging();
					this._SANK_MEK = value;
					this.SendPropertyChanged("SANK_MEK");
					this.OnSANK_MEKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANK_MEE", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SANK_MEE
		{
			get
			{
				return this._SANK_MEE;
			}
			set
			{
				if ((this._SANK_MEE != value))
				{
					this.OnSANK_MEEChanging(value);
					this.SendPropertyChanging();
					this._SANK_MEE = value;
					this.SendPropertyChanged("SANK_MEE");
					this.OnSANK_MEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANK_EKMP", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SANK_EKMP
		{
			get
			{
				return this._SANK_EKMP;
			}
			set
			{
				if ((this._SANK_EKMP != value))
				{
					this.OnSANK_EKMPChanging(value);
					this.SendPropertyChanging();
					this._SANK_EKMP = value;
					this.SendPropertyChanged("SANK_EKMP");
					this.OnSANK_EKMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNT_SL", DbType="Int")]
		public System.Nullable<int> COUNT_SL
		{
			get
			{
				return this._COUNT_SL;
			}
			set
			{
				if ((this._COUNT_SL != value))
				{
					this.OnCOUNT_SLChanging(value);
					this.SendPropertyChanging();
					this._COUNT_SL = value;
					this.SendPropertyChanged("COUNT_SL");
					this.OnCOUNT_SLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHET_ID", DbType="Int NOT NULL")]
		public int SCHET_ID
		{
			get
			{
				return this._SCHET_ID;
			}
			set
			{
				if ((this._SCHET_ID != value))
				{
					if (this._SCHET.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSCHET_IDChanging(value);
					this.SendPropertyChanging();
					this._SCHET_ID = value;
					this.SendPropertyChanged("SCHET_ID");
					this.OnSCHET_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHET_SMO_SANK", Storage="_SANK", ThisKey="ID", OtherKey="SCHET_SMO_ID")]
		public EntitySet<SANK> SANK
		{
			get
			{
				return this._SANK;
			}
			set
			{
				this._SANK.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F003_SCHET_SMO", Storage="_F003", ThisKey="CODE_MO", OtherKey="mcod", IsForeignKey=true)]
		public F003 F003
		{
			get
			{
				return this._F003.Entity;
			}
			set
			{
				F003 previousValue = this._F003.Entity;
				if (((previousValue != value) 
							|| (this._F003.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F003.Entity = null;
						previousValue.SCHET_SMO.Remove(this);
					}
					this._F003.Entity = value;
					if ((value != null))
					{
						value.SCHET_SMO.Add(this);
						this._CODE_MO = value.mcod;
					}
					else
					{
						this._CODE_MO = default(string);
					}
					this.SendPropertyChanged("F003");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHET_SCHET_SMO", Storage="_SCHET", ThisKey="SCHET_ID", OtherKey="ID", IsForeignKey=true)]
		public SCHET SCHET
		{
			get
			{
				return this._SCHET.Entity;
			}
			set
			{
				SCHET previousValue = this._SCHET.Entity;
				if (((previousValue != value) 
							|| (this._SCHET.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCHET.Entity = null;
						previousValue.SCHET_SMO.Remove(this);
					}
					this._SCHET.Entity = value;
					if ((value != null))
					{
						value.SCHET_SMO.Add(this);
						this._SCHET_ID = value.ID;
					}
					else
					{
						this._SCHET_ID = default(int);
					}
					this.SendPropertyChanged("SCHET");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANK(SANK entity)
		{
			this.SendPropertyChanging();
			entity.SCHET_SMO = this;
		}
		
		private void detach_SANK(SANK entity)
		{
			this.SendPropertyChanging();
			entity.SCHET_SMO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolStatusDb")]
	public partial class SchoolStatusDb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _NameWithID;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public SchoolStatusDb()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="VarChar(204)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolStatusDb_SLUCH", Storage="_SLUCH", ThisKey="Id", OtherKey="SCHOOL")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.SchoolStatusDb = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.SchoolStatusDb = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Settings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private string _Parametr;
		
		private string _Info;
		
		private System.Nullable<decimal> _Value;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParametrChanging(string value);
    partial void OnParametrChanged();
    partial void OnInfoChanging(string value);
    partial void OnInfoChanged();
    partial void OnValueChanging(System.Nullable<decimal> value);
    partial void OnValueChanged();
    #endregion
		
		public Settings()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parametr", DbType="VarChar(200)")]
		public string Parametr
		{
			get
			{
				return this._Parametr;
			}
			set
			{
				if ((this._Parametr != value))
				{
					this.OnParametrChanging(value);
					this.SendPropertyChanging();
					this._Parametr = value;
					this.SendPropertyChanged("Parametr");
					this.OnParametrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Info", DbType="VarChar(200)")]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this.OnInfoChanging(value);
					this.SendPropertyChanging();
					this._Info = value;
					this.SendPropertyChanged("Info");
					this.OnInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SettingsTables")]
	public partial class SettingsTables : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TableName;
		
		private string _TableDisplayName;
		
		private string _TableLayout;
		
		private string _TableParent;
		
		private string _FieldParent;
		
		private string _Comment;
		
		private string _ReportLayout;
		
		private System.Nullable<int> _TableType;
		
		private bool _TableLock;
		
		private EntityRef<SprTableType> _SprTableType;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnTableDisplayNameChanging(string value);
    partial void OnTableDisplayNameChanged();
    partial void OnTableLayoutChanging(string value);
    partial void OnTableLayoutChanged();
    partial void OnTableParentChanging(string value);
    partial void OnTableParentChanged();
    partial void OnFieldParentChanging(string value);
    partial void OnFieldParentChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnReportLayoutChanging(string value);
    partial void OnReportLayoutChanged();
    partial void OnTableTypeChanging(System.Nullable<int> value);
    partial void OnTableTypeChanged();
    partial void OnTableLockChanging(bool value);
    partial void OnTableLockChanged();
    #endregion
		
		public SettingsTables()
		{
			this._SprTableType = default(EntityRef<SprTableType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableDisplayName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string TableDisplayName
		{
			get
			{
				return this._TableDisplayName;
			}
			set
			{
				if ((this._TableDisplayName != value))
				{
					this.OnTableDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._TableDisplayName = value;
					this.SendPropertyChanged("TableDisplayName");
					this.OnTableDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableLayout", DbType="NVarChar(MAX)")]
		public string TableLayout
		{
			get
			{
				return this._TableLayout;
			}
			set
			{
				if ((this._TableLayout != value))
				{
					this.OnTableLayoutChanging(value);
					this.SendPropertyChanging();
					this._TableLayout = value;
					this.SendPropertyChanged("TableLayout");
					this.OnTableLayoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableParent", DbType="NVarChar(250)")]
		public string TableParent
		{
			get
			{
				return this._TableParent;
			}
			set
			{
				if ((this._TableParent != value))
				{
					this.OnTableParentChanging(value);
					this.SendPropertyChanging();
					this._TableParent = value;
					this.SendPropertyChanged("TableParent");
					this.OnTableParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldParent", DbType="NVarChar(250)")]
		public string FieldParent
		{
			get
			{
				return this._FieldParent;
			}
			set
			{
				if ((this._FieldParent != value))
				{
					this.OnFieldParentChanging(value);
					this.SendPropertyChanging();
					this._FieldParent = value;
					this.SendPropertyChanged("FieldParent");
					this.OnFieldParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(250)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportLayout", DbType="NVarChar(MAX)")]
		public string ReportLayout
		{
			get
			{
				return this._ReportLayout;
			}
			set
			{
				if ((this._ReportLayout != value))
				{
					this.OnReportLayoutChanging(value);
					this.SendPropertyChanging();
					this._ReportLayout = value;
					this.SendPropertyChanged("ReportLayout");
					this.OnReportLayoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableType", DbType="Int")]
		public System.Nullable<int> TableType
		{
			get
			{
				return this._TableType;
			}
			set
			{
				if ((this._TableType != value))
				{
					if (this._SprTableType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTableTypeChanging(value);
					this.SendPropertyChanging();
					this._TableType = value;
					this.SendPropertyChanged("TableType");
					this.OnTableTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableLock", DbType="Bit NOT NULL")]
		public bool TableLock
		{
			get
			{
				return this._TableLock;
			}
			set
			{
				if ((this._TableLock != value))
				{
					this.OnTableLockChanging(value);
					this.SendPropertyChanging();
					this._TableLock = value;
					this.SendPropertyChanged("TableLock");
					this.OnTableLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprTableType_SettingsTables", Storage="_SprTableType", ThisKey="TableType", OtherKey="ID", IsForeignKey=true)]
		public SprTableType SprTableType
		{
			get
			{
				return this._SprTableType.Entity;
			}
			set
			{
				SprTableType previousValue = this._SprTableType.Entity;
				if (((previousValue != value) 
							|| (this._SprTableType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SprTableType.Entity = null;
						previousValue.SettingsTables.Remove(this);
					}
					this._SprTableType.Entity = value;
					if ((value != null))
					{
						value.SettingsTables.Add(this);
						this._TableType = value.ID;
					}
					else
					{
						this._TableType = default(Nullable<int>);
					}
					this.SendPropertyChanged("SprTableType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shablon_Filter")]
	public partial class Shablon_Filter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _CodUslugi;
		
		private System.Nullable<int> _Profil;
		
		private System.Nullable<int> _SpecialityDoctor;
		
		private System.Nullable<int> _Vozrm;
		
		private System.Nullable<int> _Vozr;
		
		private System.Nullable<int> _W;
		
		private System.Nullable<int> _ShablonType;
		
		private System.Nullable<byte> _DetProfil;
		
		private System.Nullable<int> _UslCount;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCodUslugiChanging(string value);
    partial void OnCodUslugiChanged();
    partial void OnProfilChanging(System.Nullable<int> value);
    partial void OnProfilChanged();
    partial void OnSpecialityDoctorChanging(System.Nullable<int> value);
    partial void OnSpecialityDoctorChanged();
    partial void OnVozrmChanging(System.Nullable<int> value);
    partial void OnVozrmChanged();
    partial void OnVozrChanging(System.Nullable<int> value);
    partial void OnVozrChanged();
    partial void OnWChanging(System.Nullable<int> value);
    partial void OnWChanged();
    partial void OnShablonTypeChanging(System.Nullable<int> value);
    partial void OnShablonTypeChanged();
    partial void OnDetProfilChanging(System.Nullable<byte> value);
    partial void OnDetProfilChanged();
    partial void OnUslCountChanging(System.Nullable<int> value);
    partial void OnUslCountChanged();
    #endregion
		
		public Shablon_Filter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodUslugi", DbType="VarChar(16)")]
		public string CodUslugi
		{
			get
			{
				return this._CodUslugi;
			}
			set
			{
				if ((this._CodUslugi != value))
				{
					this.OnCodUslugiChanging(value);
					this.SendPropertyChanging();
					this._CodUslugi = value;
					this.SendPropertyChanged("CodUslugi");
					this.OnCodUslugiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profil", DbType="Int")]
		public System.Nullable<int> Profil
		{
			get
			{
				return this._Profil;
			}
			set
			{
				if ((this._Profil != value))
				{
					this.OnProfilChanging(value);
					this.SendPropertyChanging();
					this._Profil = value;
					this.SendPropertyChanged("Profil");
					this.OnProfilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityDoctor", DbType="Int")]
		public System.Nullable<int> SpecialityDoctor
		{
			get
			{
				return this._SpecialityDoctor;
			}
			set
			{
				if ((this._SpecialityDoctor != value))
				{
					this.OnSpecialityDoctorChanging(value);
					this.SendPropertyChanging();
					this._SpecialityDoctor = value;
					this.SendPropertyChanged("SpecialityDoctor");
					this.OnSpecialityDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vozrm", DbType="Int")]
		public System.Nullable<int> Vozrm
		{
			get
			{
				return this._Vozrm;
			}
			set
			{
				if ((this._Vozrm != value))
				{
					this.OnVozrmChanging(value);
					this.SendPropertyChanging();
					this._Vozrm = value;
					this.SendPropertyChanged("Vozrm");
					this.OnVozrmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vozr", DbType="Int")]
		public System.Nullable<int> Vozr
		{
			get
			{
				return this._Vozr;
			}
			set
			{
				if ((this._Vozr != value))
				{
					this.OnVozrChanging(value);
					this.SendPropertyChanging();
					this._Vozr = value;
					this.SendPropertyChanged("Vozr");
					this.OnVozrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_W", DbType="Int")]
		public System.Nullable<int> W
		{
			get
			{
				return this._W;
			}
			set
			{
				if ((this._W != value))
				{
					this.OnWChanging(value);
					this.SendPropertyChanging();
					this._W = value;
					this.SendPropertyChanged("W");
					this.OnWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShablonType", DbType="Int")]
		public System.Nullable<int> ShablonType
		{
			get
			{
				return this._ShablonType;
			}
			set
			{
				if ((this._ShablonType != value))
				{
					this.OnShablonTypeChanging(value);
					this.SendPropertyChanging();
					this._ShablonType = value;
					this.SendPropertyChanged("ShablonType");
					this.OnShablonTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetProfil", DbType="TinyInt")]
		public System.Nullable<byte> DetProfil
		{
			get
			{
				return this._DetProfil;
			}
			set
			{
				if ((this._DetProfil != value))
				{
					this.OnDetProfilChanging(value);
					this.SendPropertyChanging();
					this._DetProfil = value;
					this.SendPropertyChanged("DetProfil");
					this.OnDetProfilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UslCount", DbType="Int")]
		public System.Nullable<int> UslCount
		{
			get
			{
				return this._UslCount;
			}
			set
			{
				if ((this._UslCount != value))
				{
					this.OnUslCountChanging(value);
					this.SendPropertyChanging();
					this._UslCount = value;
					this.SendPropertyChanged("UslCount");
					this.OnUslCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SLUCH_DS2")]
	public partial class SLUCH_DS2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DS;
		
		private int _SLID;
		
		private EntityRef<M001_KSG> _M001_KSG;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDSChanging(string value);
    partial void OnDSChanged();
    partial void OnSLIDChanging(int value);
    partial void OnSLIDChanged();
    #endregion
		
		public SLUCH_DS2()
		{
			this._M001_KSG = default(EntityRef<M001_KSG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string DS
		{
			get
			{
				return this._DS;
			}
			set
			{
				if ((this._DS != value))
				{
					if (this._M001_KSG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDSChanging(value);
					this.SendPropertyChanging();
					this._DS = value;
					this.SendPropertyChanged("DS");
					this.OnDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLID", DbType="Int NOT NULL")]
		public int SLID
		{
			get
			{
				return this._SLID;
			}
			set
			{
				if ((this._SLID != value))
				{
					this.OnSLIDChanging(value);
					this.SendPropertyChanging();
					this._SLID = value;
					this.SendPropertyChanged("SLID");
					this.OnSLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M001_KSG_SLUCH_DS2", Storage="_M001_KSG", ThisKey="DS", OtherKey="IDDS", IsForeignKey=true)]
		public M001_KSG M001_KSG
		{
			get
			{
				return this._M001_KSG.Entity;
			}
			set
			{
				M001_KSG previousValue = this._M001_KSG.Entity;
				if (((previousValue != value) 
							|| (this._M001_KSG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._M001_KSG.Entity = null;
						previousValue.SLUCH_DS2.Remove(this);
					}
					this._M001_KSG.Entity = value;
					if ((value != null))
					{
						value.SLUCH_DS2.Add(this);
						this._DS = value.IDDS;
					}
					else
					{
						this._DS = default(string);
					}
					this.SendPropertyChanged("M001_KSG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SLUCH_DS3")]
	public partial class SLUCH_DS3 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DS;
		
		private int _SLID;
		
		private EntityRef<M001_KSG> _M001_KSG;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDSChanging(string value);
    partial void OnDSChanged();
    partial void OnSLIDChanging(int value);
    partial void OnSLIDChanged();
    #endregion
		
		public SLUCH_DS3()
		{
			this._M001_KSG = default(EntityRef<M001_KSG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string DS
		{
			get
			{
				return this._DS;
			}
			set
			{
				if ((this._DS != value))
				{
					if (this._M001_KSG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDSChanging(value);
					this.SendPropertyChanging();
					this._DS = value;
					this.SendPropertyChanged("DS");
					this.OnDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLID", DbType="Int NOT NULL")]
		public int SLID
		{
			get
			{
				return this._SLID;
			}
			set
			{
				if ((this._SLID != value))
				{
					this.OnSLIDChanging(value);
					this.SendPropertyChanging();
					this._SLID = value;
					this.SendPropertyChanged("SLID");
					this.OnSLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M001_KSG_SLUCH_DS3", Storage="_M001_KSG", ThisKey="DS", OtherKey="IDDS", IsForeignKey=true)]
		public M001_KSG M001_KSG
		{
			get
			{
				return this._M001_KSG.Entity;
			}
			set
			{
				M001_KSG previousValue = this._M001_KSG.Entity;
				if (((previousValue != value) 
							|| (this._M001_KSG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._M001_KSG.Entity = null;
						previousValue.SLUCH_DS3.Remove(this);
					}
					this._M001_KSG.Entity = value;
					if ((value != null))
					{
						value.SLUCH_DS3.Add(this);
						this._DS = value.IDDS;
					}
					else
					{
						this._DS = default(string);
					}
					this.SendPropertyChanged("M001_KSG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SLUCH_TEMP")]
	public partial class SLUCH_TEMP
	{
		
		private string _FAM;
		
		private string _IM;
		
		private string _OT;
		
		private System.Nullable<int> _W;
		
		private System.Nullable<System.DateTime> _DR;
		
		private System.Nullable<int> _USL_OK;
		
		private System.Nullable<int> _PROFIL;
		
		private string _NHISTORY;
		
		private System.Nullable<System.DateTime> _DATE_1;
		
		private System.Nullable<System.DateTime> _DATE_2;
		
		private string _DS1;
		
		private System.Nullable<int> _OS_SLUCH_REGION;
		
		private System.Guid _IDSLG;
		
		public SLUCH_TEMP()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAM", DbType="NVarChar(40)")]
		public string FAM
		{
			get
			{
				return this._FAM;
			}
			set
			{
				if ((this._FAM != value))
				{
					this._FAM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IM", DbType="NVarChar(40)")]
		public string IM
		{
			get
			{
				return this._IM;
			}
			set
			{
				if ((this._IM != value))
				{
					this._IM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT", DbType="NVarChar(40)")]
		public string OT
		{
			get
			{
				return this._OT;
			}
			set
			{
				if ((this._OT != value))
				{
					this._OT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_W", DbType="Int")]
		public System.Nullable<int> W
		{
			get
			{
				return this._W;
			}
			set
			{
				if ((this._W != value))
				{
					this._W = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DR", DbType="DateTime")]
		public System.Nullable<System.DateTime> DR
		{
			get
			{
				return this._DR;
			}
			set
			{
				if ((this._DR != value))
				{
					this._DR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USL_OK", DbType="Int")]
		public System.Nullable<int> USL_OK
		{
			get
			{
				return this._USL_OK;
			}
			set
			{
				if ((this._USL_OK != value))
				{
					this._USL_OK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROFIL", DbType="Int")]
		public System.Nullable<int> PROFIL
		{
			get
			{
				return this._PROFIL;
			}
			set
			{
				if ((this._PROFIL != value))
				{
					this._PROFIL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NHISTORY", DbType="NVarChar(50)")]
		public string NHISTORY
		{
			get
			{
				return this._NHISTORY;
			}
			set
			{
				if ((this._NHISTORY != value))
				{
					this._NHISTORY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_1", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_1
		{
			get
			{
				return this._DATE_1;
			}
			set
			{
				if ((this._DATE_1 != value))
				{
					this._DATE_1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_2", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_2
		{
			get
			{
				return this._DATE_2;
			}
			set
			{
				if ((this._DATE_2 != value))
				{
					this._DATE_2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS1", DbType="NVarChar(10)")]
		public string DS1
		{
			get
			{
				return this._DS1;
			}
			set
			{
				if ((this._DS1 != value))
				{
					this._DS1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS_SLUCH_REGION", DbType="Int")]
		public System.Nullable<int> OS_SLUCH_REGION
		{
			get
			{
				return this._OS_SLUCH_REGION;
			}
			set
			{
				if ((this._OS_SLUCH_REGION != value))
				{
					this._OS_SLUCH_REGION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSLG", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid IDSLG
		{
			get
			{
				return this._IDSLG;
			}
			set
			{
				if ((this._IDSLG != value))
				{
					this._IDSLG = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SocStat")]
	public partial class SocStat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _NameWithId;
		
		private EntitySet<PACIENT> _PACIENT;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIdChanging(string value);
    partial void OnNameWithIdChanged();
    #endregion
		
		public SocStat()
		{
			this._PACIENT = new EntitySet<PACIENT>(new Action<PACIENT>(this.attach_PACIENT), new Action<PACIENT>(this.detach_PACIENT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithId", AutoSync=AutoSync.Always, DbType="VarChar(53)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithId
		{
			get
			{
				return this._NameWithId;
			}
			set
			{
				if ((this._NameWithId != value))
				{
					this.OnNameWithIdChanging(value);
					this.SendPropertyChanging();
					this._NameWithId = value;
					this.SendPropertyChanged("NameWithId");
					this.OnNameWithIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SocStat_PACIENT", Storage="_PACIENT", ThisKey="ID", OtherKey="SOC_STAT")]
		public EntitySet<PACIENT> PACIENT
		{
			get
			{
				return this._PACIENT;
			}
			set
			{
				this._PACIENT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PACIENT(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.SocStat = this;
		}
		
		private void detach_PACIENT(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.SocStat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecCodeDb")]
	public partial class SpecCodeDb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private System.Nullable<int> _PRMP;
		
		private string _NAMEPRMP;
		
		private System.Nullable<int> _PRVS;
		
		private string _NAMEPRVS;
		
		private string _NameWithId;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPRMPChanging(System.Nullable<int> value);
    partial void OnPRMPChanged();
    partial void OnNAMEPRMPChanging(string value);
    partial void OnNAMEPRMPChanged();
    partial void OnPRVSChanging(System.Nullable<int> value);
    partial void OnPRVSChanged();
    partial void OnNAMEPRVSChanging(string value);
    partial void OnNAMEPRVSChanged();
    partial void OnNameWithIdChanging(string value);
    partial void OnNameWithIdChanged();
    #endregion
		
		public SpecCodeDb()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRMP", DbType="Int")]
		public System.Nullable<int> PRMP
		{
			get
			{
				return this._PRMP;
			}
			set
			{
				if ((this._PRMP != value))
				{
					this.OnPRMPChanging(value);
					this.SendPropertyChanging();
					this._PRMP = value;
					this.SendPropertyChanged("PRMP");
					this.OnPRMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMEPRMP", DbType="VarChar(50)")]
		public string NAMEPRMP
		{
			get
			{
				return this._NAMEPRMP;
			}
			set
			{
				if ((this._NAMEPRMP != value))
				{
					this.OnNAMEPRMPChanging(value);
					this.SendPropertyChanging();
					this._NAMEPRMP = value;
					this.SendPropertyChanged("NAMEPRMP");
					this.OnNAMEPRMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRVS", DbType="Int")]
		public System.Nullable<int> PRVS
		{
			get
			{
				return this._PRVS;
			}
			set
			{
				if ((this._PRVS != value))
				{
					this.OnPRVSChanging(value);
					this.SendPropertyChanging();
					this._PRVS = value;
					this.SendPropertyChanged("PRVS");
					this.OnPRVSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMEPRVS", DbType="VarChar(50)")]
		public string NAMEPRVS
		{
			get
			{
				return this._NAMEPRVS;
			}
			set
			{
				if ((this._NAMEPRVS != value))
				{
					this.OnNAMEPRVSChanging(value);
					this.SendPropertyChanging();
					this._NAMEPRVS = value;
					this.SendPropertyChanged("NAMEPRVS");
					this.OnNAMEPRVSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithId", AutoSync=AutoSync.Always, DbType="VarChar(56)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithId
		{
			get
			{
				return this._NameWithId;
			}
			set
			{
				if ((this._NameWithId != value))
				{
					this.OnNameWithIdChanging(value);
					this.SendPropertyChanging();
					this._NameWithId = value;
					this.SendPropertyChanged("NameWithId");
					this.OnNameWithIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SprANEST")]
	public partial class SprANEST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _NameWithID;
		
		private EntitySet<USL> _USL;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public SprANEST()
		{
			this._USL = new EntitySet<USL>(new Action<USL>(this.attach_USL), new Action<USL>(this.detach_USL));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(104)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprANEST_USL", Storage="_USL", ThisKey="ID", OtherKey="ANEST")]
		public EntitySet<USL> USL
		{
			get
			{
				return this._USL;
			}
			set
			{
				this._USL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.SprANEST = this;
		}
		
		private void detach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.SprANEST = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SprDEFGOSP")]
	public partial class SprDEFGOSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _NameWithID;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public SprDEFGOSP()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(104)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprDEFGOSP_SLUCH", Storage="_SLUCH", ThisKey="ID", OtherKey="DEFGOSP")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.SprDEFGOSP = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.SprDEFGOSP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SprDSGR")]
	public partial class SprDSGR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DS1;
		
		private string _DS2;
		
		private string _USL;
		
		private System.Nullable<int> _VOZR;
		
		private System.Nullable<int> _POL;
		
		private System.Nullable<int> _DLIT;
		
		private System.Nullable<int> _NKSG;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDS1Changing(string value);
    partial void OnDS1Changed();
    partial void OnDS2Changing(string value);
    partial void OnDS2Changed();
    partial void OnUSLChanging(string value);
    partial void OnUSLChanged();
    partial void OnVOZRChanging(System.Nullable<int> value);
    partial void OnVOZRChanged();
    partial void OnPOLChanging(System.Nullable<int> value);
    partial void OnPOLChanged();
    partial void OnDLITChanging(System.Nullable<int> value);
    partial void OnDLITChanged();
    partial void OnNKSGChanging(System.Nullable<int> value);
    partial void OnNKSGChanged();
    #endregion
		
		public SprDSGR()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS1", DbType="NVarChar(10)")]
		public string DS1
		{
			get
			{
				return this._DS1;
			}
			set
			{
				if ((this._DS1 != value))
				{
					this.OnDS1Changing(value);
					this.SendPropertyChanging();
					this._DS1 = value;
					this.SendPropertyChanged("DS1");
					this.OnDS1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS2", DbType="NVarChar(10)")]
		public string DS2
		{
			get
			{
				return this._DS2;
			}
			set
			{
				if ((this._DS2 != value))
				{
					this.OnDS2Changing(value);
					this.SendPropertyChanging();
					this._DS2 = value;
					this.SendPropertyChanged("DS2");
					this.OnDS2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USL", DbType="NVarChar(16)")]
		public string USL
		{
			get
			{
				return this._USL;
			}
			set
			{
				if ((this._USL != value))
				{
					this.OnUSLChanging(value);
					this.SendPropertyChanging();
					this._USL = value;
					this.SendPropertyChanged("USL");
					this.OnUSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VOZR", DbType="Int")]
		public System.Nullable<int> VOZR
		{
			get
			{
				return this._VOZR;
			}
			set
			{
				if ((this._VOZR != value))
				{
					this.OnVOZRChanging(value);
					this.SendPropertyChanging();
					this._VOZR = value;
					this.SendPropertyChanged("VOZR");
					this.OnVOZRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POL", DbType="Int")]
		public System.Nullable<int> POL
		{
			get
			{
				return this._POL;
			}
			set
			{
				if ((this._POL != value))
				{
					this.OnPOLChanging(value);
					this.SendPropertyChanging();
					this._POL = value;
					this.SendPropertyChanged("POL");
					this.OnPOLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLIT", DbType="Int")]
		public System.Nullable<int> DLIT
		{
			get
			{
				return this._DLIT;
			}
			set
			{
				if ((this._DLIT != value))
				{
					this.OnDLITChanging(value);
					this.SendPropertyChanging();
					this._DLIT = value;
					this.SendPropertyChanged("DLIT");
					this.OnDLITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NKSG", DbType="Int")]
		public System.Nullable<int> NKSG
		{
			get
			{
				return this._NKSG;
			}
			set
			{
				if ((this._NKSG != value))
				{
					this.OnNKSGChanging(value);
					this.SendPropertyChanging();
					this._NKSG = value;
					this.SendPropertyChanged("NKSG");
					this.OnNKSGChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SprExtr")]
	public partial class SprExtr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _NameWithID;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public SprExtr()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="VarChar(54)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprExtr_SLUCH", Storage="_SLUCH", ThisKey="Id", OtherKey="EXTR")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.SprExtr = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.SprExtr = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SprKDOST")]
	public partial class SprKDOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _NameWithID;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public SprKDOST()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(54)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprKDOST_SLUCH", Storage="_SLUCH", ThisKey="ID", OtherKey="KDOST")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.SprKDOST = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.SprKDOST = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SprKSGOPLATA")]
	public partial class SprKSGOPLATA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _NameWithID;
		
		private EntitySet<USL> _USL;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public SprKSGOPLATA()
		{
			this._USL = new EntitySet<USL>(new Action<USL>(this.attach_USL), new Action<USL>(this.detach_USL));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="VarChar(54)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprKSGOPLATA_USL", Storage="_USL", ThisKey="ID", OtherKey="KSGOPLATA")]
		public EntitySet<USL> USL
		{
			get
			{
				return this._USL;
			}
			set
			{
				this._USL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.SprKSGOPLATA = this;
		}
		
		private void detach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.SprKSGOPLATA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SprKSGR")]
	public partial class SprKSGR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DS1;
		
		private string _DS2;
		
		private string _USL;
		
		private System.Nullable<int> _VOZR;
		
		private System.Nullable<int> _POL;
		
		private System.Nullable<int> _DLIT;
		
		private System.Nullable<int> _NKSG;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDS1Changing(string value);
    partial void OnDS1Changed();
    partial void OnDS2Changing(string value);
    partial void OnDS2Changed();
    partial void OnUSLChanging(string value);
    partial void OnUSLChanged();
    partial void OnVOZRChanging(System.Nullable<int> value);
    partial void OnVOZRChanged();
    partial void OnPOLChanging(System.Nullable<int> value);
    partial void OnPOLChanged();
    partial void OnDLITChanging(System.Nullable<int> value);
    partial void OnDLITChanged();
    partial void OnNKSGChanging(System.Nullable<int> value);
    partial void OnNKSGChanged();
    #endregion
		
		public SprKSGR()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS1", DbType="NVarChar(10)")]
		public string DS1
		{
			get
			{
				return this._DS1;
			}
			set
			{
				if ((this._DS1 != value))
				{
					this.OnDS1Changing(value);
					this.SendPropertyChanging();
					this._DS1 = value;
					this.SendPropertyChanged("DS1");
					this.OnDS1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS2", DbType="NVarChar(10)")]
		public string DS2
		{
			get
			{
				return this._DS2;
			}
			set
			{
				if ((this._DS2 != value))
				{
					this.OnDS2Changing(value);
					this.SendPropertyChanging();
					this._DS2 = value;
					this.SendPropertyChanged("DS2");
					this.OnDS2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USL", DbType="NVarChar(16)")]
		public string USL
		{
			get
			{
				return this._USL;
			}
			set
			{
				if ((this._USL != value))
				{
					this.OnUSLChanging(value);
					this.SendPropertyChanging();
					this._USL = value;
					this.SendPropertyChanged("USL");
					this.OnUSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VOZR", DbType="Int")]
		public System.Nullable<int> VOZR
		{
			get
			{
				return this._VOZR;
			}
			set
			{
				if ((this._VOZR != value))
				{
					this.OnVOZRChanging(value);
					this.SendPropertyChanging();
					this._VOZR = value;
					this.SendPropertyChanged("VOZR");
					this.OnVOZRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POL", DbType="Int")]
		public System.Nullable<int> POL
		{
			get
			{
				return this._POL;
			}
			set
			{
				if ((this._POL != value))
				{
					this.OnPOLChanging(value);
					this.SendPropertyChanging();
					this._POL = value;
					this.SendPropertyChanged("POL");
					this.OnPOLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLIT", DbType="Int")]
		public System.Nullable<int> DLIT
		{
			get
			{
				return this._DLIT;
			}
			set
			{
				if ((this._DLIT != value))
				{
					this.OnDLITChanging(value);
					this.SendPropertyChanging();
					this._DLIT = value;
					this.SendPropertyChanged("DLIT");
					this.OnDLITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NKSG", DbType="Int")]
		public System.Nullable<int> NKSG
		{
			get
			{
				return this._NKSG;
			}
			set
			{
				if ((this._NKSG != value))
				{
					this.OnNKSGChanging(value);
					this.SendPropertyChanging();
					this._NKSG = value;
					this.SendPropertyChanged("NKSG");
					this.OnNKSGChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SprOSL")]
	public partial class SprOSL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _NameWithID;
		
		private EntitySet<USL> _USL;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public SprOSL()
		{
			this._USL = new EntitySet<USL>(new Action<USL>(this.attach_USL), new Action<USL>(this.detach_USL));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(104)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprOSL_USL", Storage="_USL", ThisKey="ID", OtherKey="OSL")]
		public EntitySet<USL> USL
		{
			get
			{
				return this._USL;
			}
			set
			{
				this._USL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.SprOSL = this;
		}
		
		private void detach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.SprOSL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SprPayment")]
	public partial class SprPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.Nullable<int> _Type;
		
		private string _Name;
		
		private string _Inn;
		
		private string _Ogrn;
		
		private string _KPP;
		
		private string _Account;
		
		private string _CorrespondentAccount;
		
		private string _BIK;
		
		private string _BankName;
		
		private string _AgreementNumber;
		
		private System.Nullable<System.DateTime> _AgreementDate;
		
		private string _Director;
		
		private string _Accounter;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private string _RSchet;
		
		private string _KSchet;
		
		private string _Buhalter;
		
		private string _NameWithID;
		
		private EntitySet<SCHET_OMS> _SCHET_OMS;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInnChanging(string value);
    partial void OnInnChanged();
    partial void OnOgrnChanging(string value);
    partial void OnOgrnChanged();
    partial void OnKPPChanging(string value);
    partial void OnKPPChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnCorrespondentAccountChanging(string value);
    partial void OnCorrespondentAccountChanged();
    partial void OnBIKChanging(string value);
    partial void OnBIKChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnAgreementNumberChanging(string value);
    partial void OnAgreementNumberChanged();
    partial void OnAgreementDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAgreementDateChanged();
    partial void OnDirectorChanging(string value);
    partial void OnDirectorChanged();
    partial void OnAccounterChanging(string value);
    partial void OnAccounterChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnDateBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnRSchetChanging(string value);
    partial void OnRSchetChanged();
    partial void OnKSchetChanging(string value);
    partial void OnKSchetChanged();
    partial void OnBuhalterChanging(string value);
    partial void OnBuhalterChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public SprPayment()
		{
			this._SCHET_OMS = new EntitySet<SCHET_OMS>(new Action<SCHET_OMS>(this.attach_SCHET_OMS), new Action<SCHET_OMS>(this.detach_SCHET_OMS));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(254)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inn", DbType="NVarChar(12)")]
		public string Inn
		{
			get
			{
				return this._Inn;
			}
			set
			{
				if ((this._Inn != value))
				{
					this.OnInnChanging(value);
					this.SendPropertyChanging();
					this._Inn = value;
					this.SendPropertyChanged("Inn");
					this.OnInnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ogrn", DbType="NVarChar(15)")]
		public string Ogrn
		{
			get
			{
				return this._Ogrn;
			}
			set
			{
				if ((this._Ogrn != value))
				{
					this.OnOgrnChanging(value);
					this.SendPropertyChanging();
					this._Ogrn = value;
					this.SendPropertyChanged("Ogrn");
					this.OnOgrnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPP", DbType="NVarChar(9)")]
		public string KPP
		{
			get
			{
				return this._KPP;
			}
			set
			{
				if ((this._KPP != value))
				{
					this.OnKPPChanging(value);
					this.SendPropertyChanging();
					this._KPP = value;
					this.SendPropertyChanged("KPP");
					this.OnKPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(50)")]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrespondentAccount", DbType="NVarChar(50)")]
		public string CorrespondentAccount
		{
			get
			{
				return this._CorrespondentAccount;
			}
			set
			{
				if ((this._CorrespondentAccount != value))
				{
					this.OnCorrespondentAccountChanging(value);
					this.SendPropertyChanging();
					this._CorrespondentAccount = value;
					this.SendPropertyChanged("CorrespondentAccount");
					this.OnCorrespondentAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BIK", DbType="NVarChar(50)")]
		public string BIK
		{
			get
			{
				return this._BIK;
			}
			set
			{
				if ((this._BIK != value))
				{
					this.OnBIKChanging(value);
					this.SendPropertyChanging();
					this._BIK = value;
					this.SendPropertyChanged("BIK");
					this.OnBIKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(254)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementNumber", DbType="NVarChar(50)")]
		public string AgreementNumber
		{
			get
			{
				return this._AgreementNumber;
			}
			set
			{
				if ((this._AgreementNumber != value))
				{
					this.OnAgreementNumberChanging(value);
					this.SendPropertyChanging();
					this._AgreementNumber = value;
					this.SendPropertyChanged("AgreementNumber");
					this.OnAgreementNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AgreementDate
		{
			get
			{
				return this._AgreementDate;
			}
			set
			{
				if ((this._AgreementDate != value))
				{
					this.OnAgreementDateChanging(value);
					this.SendPropertyChanging();
					this._AgreementDate = value;
					this.SendPropertyChanged("AgreementDate");
					this.OnAgreementDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Director", DbType="NVarChar(254)")]
		public string Director
		{
			get
			{
				return this._Director;
			}
			set
			{
				if ((this._Director != value))
				{
					this.OnDirectorChanging(value);
					this.SendPropertyChanging();
					this._Director = value;
					this.SendPropertyChanged("Director");
					this.OnDirectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accounter", DbType="NVarChar(254)")]
		public string Accounter
		{
			get
			{
				return this._Accounter;
			}
			set
			{
				if ((this._Accounter != value))
				{
					this.OnAccounterChanging(value);
					this.SendPropertyChanging();
					this._Accounter = value;
					this.SendPropertyChanged("Accounter");
					this.OnAccounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(254)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSchet", DbType="NVarChar(30)")]
		public string RSchet
		{
			get
			{
				return this._RSchet;
			}
			set
			{
				if ((this._RSchet != value))
				{
					this.OnRSchetChanging(value);
					this.SendPropertyChanging();
					this._RSchet = value;
					this.SendPropertyChanged("RSchet");
					this.OnRSchetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSchet", DbType="NVarChar(30)")]
		public string KSchet
		{
			get
			{
				return this._KSchet;
			}
			set
			{
				if ((this._KSchet != value))
				{
					this.OnKSchetChanging(value);
					this.SendPropertyChanging();
					this._KSchet = value;
					this.SendPropertyChanged("KSchet");
					this.OnKSchetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Buhalter", DbType="NVarChar(90)")]
		public string Buhalter
		{
			get
			{
				return this._Buhalter;
			}
			set
			{
				if ((this._Buhalter != value))
				{
					this.OnBuhalterChanging(value);
					this.SendPropertyChanging();
					this._Buhalter = value;
					this.SendPropertyChanged("Buhalter");
					this.OnBuhalterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(261)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprPayment_SCHET_OMS", Storage="_SCHET_OMS", ThisKey="ID", OtherKey="PLAT")]
		public EntitySet<SCHET_OMS> SCHET_OMS
		{
			get
			{
				return this._SCHET_OMS;
			}
			set
			{
				this._SCHET_OMS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SCHET_OMS(SCHET_OMS entity)
		{
			this.SendPropertyChanging();
			entity.SprPayment = this;
		}
		
		private void detach_SCHET_OMS(SCHET_OMS entity)
		{
			this.SendPropertyChanging();
			entity.SprPayment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SprStatictic")]
	public partial class SprStatictic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _StatName;
		
		private string _StatSQL;
		
		private string _StatSQLParametr;
		
		private string _Comments;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStatNameChanging(string value);
    partial void OnStatNameChanged();
    partial void OnStatSQLChanging(string value);
    partial void OnStatSQLChanged();
    partial void OnStatSQLParametrChanging(string value);
    partial void OnStatSQLParametrChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public SprStatictic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatName", DbType="NVarChar(50)")]
		public string StatName
		{
			get
			{
				return this._StatName;
			}
			set
			{
				if ((this._StatName != value))
				{
					this.OnStatNameChanging(value);
					this.SendPropertyChanging();
					this._StatName = value;
					this.SendPropertyChanged("StatName");
					this.OnStatNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatSQL", DbType="NVarChar(MAX)")]
		public string StatSQL
		{
			get
			{
				return this._StatSQL;
			}
			set
			{
				if ((this._StatSQL != value))
				{
					this.OnStatSQLChanging(value);
					this.SendPropertyChanging();
					this._StatSQL = value;
					this.SendPropertyChanged("StatSQL");
					this.OnStatSQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatSQLParametr", DbType="NVarChar(100)")]
		public string StatSQLParametr
		{
			get
			{
				return this._StatSQLParametr;
			}
			set
			{
				if ((this._StatSQLParametr != value))
				{
					this.OnStatSQLParametrChanging(value);
					this.SendPropertyChanging();
					this._StatSQLParametr = value;
					this.SendPropertyChanged("StatSQLParametr");
					this.OnStatSQLParametrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(100)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SprTableType")]
	public partial class SprTableType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private EntitySet<SettingsTables> _SettingsTables;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public SprTableType()
		{
			this._SettingsTables = new EntitySet<SettingsTables>(new Action<SettingsTables>(this.attach_SettingsTables), new Action<SettingsTables>(this.detach_SettingsTables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprTableType_SettingsTables", Storage="_SettingsTables", ThisKey="ID", OtherKey="TableType")]
		public EntitySet<SettingsTables> SettingsTables
		{
			get
			{
				return this._SettingsTables;
			}
			set
			{
				this._SettingsTables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SettingsTables(SettingsTables entity)
		{
			this.SendPropertyChanging();
			entity.SprTableType = this;
		}
		
		private void detach_SettingsTables(SettingsTables entity)
		{
			this.SendPropertyChanging();
			entity.SprTableType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SprVOPL")]
	public partial class SprVOPL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _NameWithID;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public SprVOPL()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(54)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprVOPL_SLUCH", Storage="_SLUCH", ThisKey="ID", OtherKey="VOPL")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.SprVOPL = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.SprVOPL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SprVozr")]
	public partial class SprVozr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _NAME;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public SprVozr()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprVozr_SLUCH", Storage="_SLUCH", ThisKey="ID", OtherKey="VOZR")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.SprVozr = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.SprVozr = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tarif")]
	public partial class Tarif : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _TarifDate;
		
		private System.Nullable<decimal> _Tarif1;
		
		private System.Nullable<decimal> _Tarif2;
		
		private System.Nullable<decimal> _Tarif3;
		
		private System.Nullable<int> _OsobSluchCheck;
		
		private System.Nullable<int> _ConditionHelp;
		
		private System.DateTime _TarifDateEnd;
		
		private System.Nullable<bool> _Stomat;
		
		private System.Nullable<decimal> _Tarif4;
		
		private EntityRef<OsobSluchDb> _OsobSluchDb;
		
		private EntityRef<V006> _V006;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnTarifDateChanging(System.DateTime value);
    partial void OnTarifDateChanged();
    partial void OnTarif1Changing(System.Nullable<decimal> value);
    partial void OnTarif1Changed();
    partial void OnTarif2Changing(System.Nullable<decimal> value);
    partial void OnTarif2Changed();
    partial void OnTarif3Changing(System.Nullable<decimal> value);
    partial void OnTarif3Changed();
    partial void OnOsobSluchCheckChanging(System.Nullable<int> value);
    partial void OnOsobSluchCheckChanged();
    partial void OnConditionHelpChanging(System.Nullable<int> value);
    partial void OnConditionHelpChanged();
    partial void OnTarifDateEndChanging(System.DateTime value);
    partial void OnTarifDateEndChanged();
    partial void OnStomatChanging(System.Nullable<bool> value);
    partial void OnStomatChanged();
    partial void OnTarif4Changing(System.Nullable<decimal> value);
    partial void OnTarif4Changed();
    #endregion
		
		public Tarif()
		{
			this._OsobSluchDb = default(EntityRef<OsobSluchDb>);
			this._V006 = default(EntityRef<V006>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TarifDate", DbType="DateTime NOT NULL")]
		public System.DateTime TarifDate
		{
			get
			{
				return this._TarifDate;
			}
			set
			{
				if ((this._TarifDate != value))
				{
					this.OnTarifDateChanging(value);
					this.SendPropertyChanging();
					this._TarifDate = value;
					this.SendPropertyChanged("TarifDate");
					this.OnTarifDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tarif1", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Tarif1
		{
			get
			{
				return this._Tarif1;
			}
			set
			{
				if ((this._Tarif1 != value))
				{
					this.OnTarif1Changing(value);
					this.SendPropertyChanging();
					this._Tarif1 = value;
					this.SendPropertyChanged("Tarif1");
					this.OnTarif1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tarif2", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Tarif2
		{
			get
			{
				return this._Tarif2;
			}
			set
			{
				if ((this._Tarif2 != value))
				{
					this.OnTarif2Changing(value);
					this.SendPropertyChanging();
					this._Tarif2 = value;
					this.SendPropertyChanged("Tarif2");
					this.OnTarif2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tarif3", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Tarif3
		{
			get
			{
				return this._Tarif3;
			}
			set
			{
				if ((this._Tarif3 != value))
				{
					this.OnTarif3Changing(value);
					this.SendPropertyChanging();
					this._Tarif3 = value;
					this.SendPropertyChanged("Tarif3");
					this.OnTarif3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OsobSluchCheck", DbType="Int")]
		public System.Nullable<int> OsobSluchCheck
		{
			get
			{
				return this._OsobSluchCheck;
			}
			set
			{
				if ((this._OsobSluchCheck != value))
				{
					if (this._OsobSluchDb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOsobSluchCheckChanging(value);
					this.SendPropertyChanging();
					this._OsobSluchCheck = value;
					this.SendPropertyChanged("OsobSluchCheck");
					this.OnOsobSluchCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionHelp", DbType="Int")]
		public System.Nullable<int> ConditionHelp
		{
			get
			{
				return this._ConditionHelp;
			}
			set
			{
				if ((this._ConditionHelp != value))
				{
					if (this._V006.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConditionHelpChanging(value);
					this.SendPropertyChanging();
					this._ConditionHelp = value;
					this.SendPropertyChanged("ConditionHelp");
					this.OnConditionHelpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TarifDateEnd", DbType="DateTime NOT NULL")]
		public System.DateTime TarifDateEnd
		{
			get
			{
				return this._TarifDateEnd;
			}
			set
			{
				if ((this._TarifDateEnd != value))
				{
					this.OnTarifDateEndChanging(value);
					this.SendPropertyChanging();
					this._TarifDateEnd = value;
					this.SendPropertyChanged("TarifDateEnd");
					this.OnTarifDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stomat", DbType="Bit")]
		public System.Nullable<bool> Stomat
		{
			get
			{
				return this._Stomat;
			}
			set
			{
				if ((this._Stomat != value))
				{
					this.OnStomatChanging(value);
					this.SendPropertyChanging();
					this._Stomat = value;
					this.SendPropertyChanged("Stomat");
					this.OnStomatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tarif4", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Tarif4
		{
			get
			{
				return this._Tarif4;
			}
			set
			{
				if ((this._Tarif4 != value))
				{
					this.OnTarif4Changing(value);
					this.SendPropertyChanging();
					this._Tarif4 = value;
					this.SendPropertyChanged("Tarif4");
					this.OnTarif4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OsobSluchDb_Tarif", Storage="_OsobSluchDb", ThisKey="OsobSluchCheck", OtherKey="Id", IsForeignKey=true)]
		public OsobSluchDb OsobSluchDb
		{
			get
			{
				return this._OsobSluchDb.Entity;
			}
			set
			{
				OsobSluchDb previousValue = this._OsobSluchDb.Entity;
				if (((previousValue != value) 
							|| (this._OsobSluchDb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OsobSluchDb.Entity = null;
						previousValue.Tarif.Remove(this);
					}
					this._OsobSluchDb.Entity = value;
					if ((value != null))
					{
						value.Tarif.Add(this);
						this._OsobSluchCheck = value.Id;
					}
					else
					{
						this._OsobSluchCheck = default(Nullable<int>);
					}
					this.SendPropertyChanged("OsobSluchDb");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V006_Tarif", Storage="_V006", ThisKey="ConditionHelp", OtherKey="id", IsForeignKey=true)]
		public V006 V006
		{
			get
			{
				return this._V006.Entity;
			}
			set
			{
				V006 previousValue = this._V006.Entity;
				if (((previousValue != value) 
							|| (this._V006.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V006.Entity = null;
						previousValue.Tarif.Remove(this);
					}
					this._V006.Entity = value;
					if ((value != null))
					{
						value.Tarif.Add(this);
						this._ConditionHelp = value.id;
					}
					else
					{
						this._ConditionHelp = default(Nullable<int>);
					}
					this.SendPropertyChanged("V006");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TARIF_PN")]
	public partial class TARIF_PN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _T_START;
		
		private System.Nullable<decimal> _TARIF1;
		
		private System.Nullable<decimal> _TARIF2;
		
		private System.Nullable<decimal> _TARIF3;
		
		private System.Nullable<int> _T_PROFIL;
		
		private System.Nullable<int> _T_OS_SLUCH;
		
		private System.Nullable<int> _T_USL_OK;
		
		private System.DateTime _T_END;
		
		private EntityRef<OsobSluchDb> _OsobSluchDb;
		
		private EntityRef<V002> _V002;
		
		private EntityRef<V006> _V006;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnT_STARTChanging(System.DateTime value);
    partial void OnT_STARTChanged();
    partial void OnTARIF1Changing(System.Nullable<decimal> value);
    partial void OnTARIF1Changed();
    partial void OnTARIF2Changing(System.Nullable<decimal> value);
    partial void OnTARIF2Changed();
    partial void OnTARIF3Changing(System.Nullable<decimal> value);
    partial void OnTARIF3Changed();
    partial void OnT_PROFILChanging(System.Nullable<int> value);
    partial void OnT_PROFILChanged();
    partial void OnT_OS_SLUCHChanging(System.Nullable<int> value);
    partial void OnT_OS_SLUCHChanged();
    partial void OnT_USL_OKChanging(System.Nullable<int> value);
    partial void OnT_USL_OKChanged();
    partial void OnT_ENDChanging(System.DateTime value);
    partial void OnT_ENDChanged();
    #endregion
		
		public TARIF_PN()
		{
			this._OsobSluchDb = default(EntityRef<OsobSluchDb>);
			this._V002 = default(EntityRef<V002>);
			this._V006 = default(EntityRef<V006>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_START", DbType="DateTime NOT NULL")]
		public System.DateTime T_START
		{
			get
			{
				return this._T_START;
			}
			set
			{
				if ((this._T_START != value))
				{
					this.OnT_STARTChanging(value);
					this.SendPropertyChanging();
					this._T_START = value;
					this.SendPropertyChanged("T_START");
					this.OnT_STARTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF1", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TARIF1
		{
			get
			{
				return this._TARIF1;
			}
			set
			{
				if ((this._TARIF1 != value))
				{
					this.OnTARIF1Changing(value);
					this.SendPropertyChanging();
					this._TARIF1 = value;
					this.SendPropertyChanged("TARIF1");
					this.OnTARIF1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF2", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TARIF2
		{
			get
			{
				return this._TARIF2;
			}
			set
			{
				if ((this._TARIF2 != value))
				{
					this.OnTARIF2Changing(value);
					this.SendPropertyChanging();
					this._TARIF2 = value;
					this.SendPropertyChanged("TARIF2");
					this.OnTARIF2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF3", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TARIF3
		{
			get
			{
				return this._TARIF3;
			}
			set
			{
				if ((this._TARIF3 != value))
				{
					this.OnTARIF3Changing(value);
					this.SendPropertyChanging();
					this._TARIF3 = value;
					this.SendPropertyChanged("TARIF3");
					this.OnTARIF3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_PROFIL", DbType="Int")]
		public System.Nullable<int> T_PROFIL
		{
			get
			{
				return this._T_PROFIL;
			}
			set
			{
				if ((this._T_PROFIL != value))
				{
					if (this._V002.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnT_PROFILChanging(value);
					this.SendPropertyChanging();
					this._T_PROFIL = value;
					this.SendPropertyChanged("T_PROFIL");
					this.OnT_PROFILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_OS_SLUCH", DbType="Int")]
		public System.Nullable<int> T_OS_SLUCH
		{
			get
			{
				return this._T_OS_SLUCH;
			}
			set
			{
				if ((this._T_OS_SLUCH != value))
				{
					if (this._OsobSluchDb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnT_OS_SLUCHChanging(value);
					this.SendPropertyChanging();
					this._T_OS_SLUCH = value;
					this.SendPropertyChanged("T_OS_SLUCH");
					this.OnT_OS_SLUCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_USL_OK", DbType="Int")]
		public System.Nullable<int> T_USL_OK
		{
			get
			{
				return this._T_USL_OK;
			}
			set
			{
				if ((this._T_USL_OK != value))
				{
					if (this._V006.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnT_USL_OKChanging(value);
					this.SendPropertyChanging();
					this._T_USL_OK = value;
					this.SendPropertyChanged("T_USL_OK");
					this.OnT_USL_OKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_END", DbType="DateTime NOT NULL")]
		public System.DateTime T_END
		{
			get
			{
				return this._T_END;
			}
			set
			{
				if ((this._T_END != value))
				{
					this.OnT_ENDChanging(value);
					this.SendPropertyChanging();
					this._T_END = value;
					this.SendPropertyChanged("T_END");
					this.OnT_ENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OsobSluchDb_TARIF_PN", Storage="_OsobSluchDb", ThisKey="T_OS_SLUCH", OtherKey="Id", IsForeignKey=true)]
		public OsobSluchDb OsobSluchDb
		{
			get
			{
				return this._OsobSluchDb.Entity;
			}
			set
			{
				OsobSluchDb previousValue = this._OsobSluchDb.Entity;
				if (((previousValue != value) 
							|| (this._OsobSluchDb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OsobSluchDb.Entity = null;
						previousValue.TARIF_PN.Remove(this);
					}
					this._OsobSluchDb.Entity = value;
					if ((value != null))
					{
						value.TARIF_PN.Add(this);
						this._T_OS_SLUCH = value.Id;
					}
					else
					{
						this._T_OS_SLUCH = default(Nullable<int>);
					}
					this.SendPropertyChanged("OsobSluchDb");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V002_TARIF_PN", Storage="_V002", ThisKey="T_PROFIL", OtherKey="Id", IsForeignKey=true)]
		public V002 V002
		{
			get
			{
				return this._V002.Entity;
			}
			set
			{
				V002 previousValue = this._V002.Entity;
				if (((previousValue != value) 
							|| (this._V002.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V002.Entity = null;
						previousValue.TARIF_PN.Remove(this);
					}
					this._V002.Entity = value;
					if ((value != null))
					{
						value.TARIF_PN.Add(this);
						this._T_PROFIL = value.Id;
					}
					else
					{
						this._T_PROFIL = default(Nullable<int>);
					}
					this.SendPropertyChanged("V002");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V006_TARIF_PN", Storage="_V006", ThisKey="T_USL_OK", OtherKey="id", IsForeignKey=true)]
		public V006 V006
		{
			get
			{
				return this._V006.Entity;
			}
			set
			{
				V006 previousValue = this._V006.Entity;
				if (((previousValue != value) 
							|| (this._V006.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V006.Entity = null;
						previousValue.TARIF_PN.Remove(this);
					}
					this._V006.Entity = value;
					if ((value != null))
					{
						value.TARIF_PN.Add(this);
						this._T_USL_OK = value.id;
					}
					else
					{
						this._T_USL_OK = default(Nullable<int>);
					}
					this.SendPropertyChanged("V006");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipBoleznDb")]
	public partial class TipBoleznDb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private string _NameWithId;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIdChanging(string value);
    partial void OnNameWithIdChanged();
    #endregion
		
		public TipBoleznDb()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NameWithId
		{
			get
			{
				return this._NameWithId;
			}
			set
			{
				if ((this._NameWithId != value))
				{
					this.OnNameWithIdChanging(value);
					this.SendPropertyChanging();
					this._NameWithId = value;
					this.SendPropertyChanged("NameWithId");
					this.OnNameWithIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TravmaTbl")]
	public partial class TravmaTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _NameWithId;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIdChanging(string value);
    partial void OnNameWithIdChanged();
    #endregion
		
		public TravmaTbl()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithId", AutoSync=AutoSync.Always, DbType="VarChar(53)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithId
		{
			get
			{
				return this._NameWithId;
			}
			set
			{
				if ((this._NameWithId != value))
				{
					this.OnNameWithIdChanging(value);
					this.SendPropertyChanging();
					this._NameWithId = value;
					this.SendPropertyChanged("NameWithId");
					this.OnNameWithIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TravmaTbl_SLUCH", Storage="_SLUCH", ThisKey="ID", OtherKey="TRAVMA")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.TravmaTbl = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.TravmaTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeSluchDb")]
	public partial class TypeSluchDb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private string _NameWithId;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIdChanging(string value);
    partial void OnNameWithIdChanged();
    #endregion
		
		public TypeSluchDb()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithId", AutoSync=AutoSync.Always, DbType="VarChar(53)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithId
		{
			get
			{
				return this._NameWithId;
			}
			set
			{
				if ((this._NameWithId != value))
				{
					this.OnNameWithIdChanging(value);
					this.SendPropertyChanging();
					this._NameWithId = value;
					this.SendPropertyChanged("NameWithId");
					this.OnNameWithIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeSluchDb_SLUCH", Storage="_SLUCH", ThisKey="id", OtherKey="SLUCH_TYPE")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.TypeSluchDb = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.TypeSluchDb = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _UserName;
		
		private string _Password;
		
		private string _LayRTable;
		
		private string _CODE;
		
		private string _FAM;
		
		private string _IM;
		
		private string _OT;
		
		private string _DOLJ;
		
		private EntitySet<FREP> _FREP;
		
		private EntitySet<MEE_DB> _MEE_DB;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnLayRTableChanging(string value);
    partial void OnLayRTableChanged();
    partial void OnCODEChanging(string value);
    partial void OnCODEChanged();
    partial void OnFAMChanging(string value);
    partial void OnFAMChanged();
    partial void OnIMChanging(string value);
    partial void OnIMChanged();
    partial void OnOTChanging(string value);
    partial void OnOTChanged();
    partial void OnDOLJChanging(string value);
    partial void OnDOLJChanged();
    #endregion
		
		public Users()
		{
			this._FREP = new EntitySet<FREP>(new Action<FREP>(this.attach_FREP), new Action<FREP>(this.detach_FREP));
			this._MEE_DB = new EntitySet<MEE_DB>(new Action<MEE_DB>(this.attach_MEE_DB), new Action<MEE_DB>(this.detach_MEE_DB));
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LayRTable", DbType="VarChar(MAX)")]
		public string LayRTable
		{
			get
			{
				return this._LayRTable;
			}
			set
			{
				if ((this._LayRTable != value))
				{
					this.OnLayRTableChanging(value);
					this.SendPropertyChanging();
					this._LayRTable = value;
					this.SendPropertyChanged("LayRTable");
					this.OnLayRTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="VarChar(50)")]
		public string CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAM", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FAM
		{
			get
			{
				return this._FAM;
			}
			set
			{
				if ((this._FAM != value))
				{
					this.OnFAMChanging(value);
					this.SendPropertyChanging();
					this._FAM = value;
					this.SendPropertyChanged("FAM");
					this.OnFAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IM", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IM
		{
			get
			{
				return this._IM;
			}
			set
			{
				if ((this._IM != value))
				{
					this.OnIMChanging(value);
					this.SendPropertyChanging();
					this._IM = value;
					this.SendPropertyChanged("IM");
					this.OnIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OT
		{
			get
			{
				return this._OT;
			}
			set
			{
				if ((this._OT != value))
				{
					this.OnOTChanging(value);
					this.SendPropertyChanging();
					this._OT = value;
					this.SendPropertyChanged("OT");
					this.OnOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOLJ", DbType="VarChar(50)")]
		public string DOLJ
		{
			get
			{
				return this._DOLJ;
			}
			set
			{
				if ((this._DOLJ != value))
				{
					this.OnDOLJChanging(value);
					this.SendPropertyChanging();
					this._DOLJ = value;
					this.SendPropertyChanged("DOLJ");
					this.OnDOLJChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_FREP", Storage="_FREP", ThisKey="id", OtherKey="USERID")]
		public EntitySet<FREP> FREP
		{
			get
			{
				return this._FREP;
			}
			set
			{
				this._FREP.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_MEE_DB", Storage="_MEE_DB", ThisKey="id", OtherKey="USERID")]
		public EntitySet<MEE_DB> MEE_DB
		{
			get
			{
				return this._MEE_DB;
			}
			set
			{
				this._MEE_DB.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_SLUCH", Storage="_SLUCH", ThisKey="id", OtherKey="USERID")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FREP(FREP entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_FREP(FREP entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_MEE_DB(MEE_DB entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_MEE_DB(MEE_DB entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USL_ASSIST")]
	public partial class USL_ASSIST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDDOCT;
		
		private int _UID;
		
		private EntityRef<DoctorBd> _DoctorBd;
		
		private EntityRef<USL> _USL;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDDOCTChanging(int value);
    partial void OnIDDOCTChanged();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    #endregion
		
		public USL_ASSIST()
		{
			this._DoctorBd = default(EntityRef<DoctorBd>);
			this._USL = default(EntityRef<USL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDOCT", DbType="Int NOT NULL")]
		public int IDDOCT
		{
			get
			{
				return this._IDDOCT;
			}
			set
			{
				if ((this._IDDOCT != value))
				{
					if (this._DoctorBd.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDOCTChanging(value);
					this.SendPropertyChanging();
					this._IDDOCT = value;
					this.SendPropertyChanged("IDDOCT");
					this.OnIDDOCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL")]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._USL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorBd_USL_ASSIST", Storage="_DoctorBd", ThisKey="IDDOCT", OtherKey="id", IsForeignKey=true)]
		public DoctorBd DoctorBd
		{
			get
			{
				return this._DoctorBd.Entity;
			}
			set
			{
				DoctorBd previousValue = this._DoctorBd.Entity;
				if (((previousValue != value) 
							|| (this._DoctorBd.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoctorBd.Entity = null;
						previousValue.USL_ASSIST.Remove(this);
					}
					this._DoctorBd.Entity = value;
					if ((value != null))
					{
						value.USL_ASSIST.Add(this);
						this._IDDOCT = value.id;
					}
					else
					{
						this._IDDOCT = default(int);
					}
					this.SendPropertyChanged("DoctorBd");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USL_USL_ASSIST", Storage="_USL", ThisKey="UID", OtherKey="ID", IsForeignKey=true)]
		public USL USL
		{
			get
			{
				return this._USL.Entity;
			}
			set
			{
				USL previousValue = this._USL.Entity;
				if (((previousValue != value) 
							|| (this._USL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USL.Entity = null;
						previousValue.USL_ASSIST.Remove(this);
					}
					this._USL.Entity = value;
					if ((value != null))
					{
						value.USL_ASSIST.Add(this);
						this._UID = value.ID;
					}
					else
					{
						this._UID = default(int);
					}
					this.SendPropertyChanged("USL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V001")]
	public partial class V001 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<decimal> _IDRB;
		
		private string _RBNAME;
		
		private System.Nullable<System.DateTime> _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIDRBChanging(System.Nullable<decimal> value);
    partial void OnIDRBChanged();
    partial void OnRBNAMEChanging(string value);
    partial void OnRBNAMEChanged();
    partial void OnDATEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    #endregion
		
		public V001()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRB", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> IDRB
		{
			get
			{
				return this._IDRB;
			}
			set
			{
				if ((this._IDRB != value))
				{
					this.OnIDRBChanging(value);
					this.SendPropertyChanging();
					this._IDRB = value;
					this.SendPropertyChanged("IDRB");
					this.OnIDRBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RBNAME", DbType="NVarChar(254)")]
		public string RBNAME
		{
			get
			{
				return this._RBNAME;
			}
			set
			{
				if ((this._RBNAME != value))
				{
					this.OnRBNAMEChanging(value);
					this.SendPropertyChanging();
					this._RBNAME = value;
					this.SendPropertyChanged("RBNAME");
					this.OnRBNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V002")]
	public partial class V002 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<decimal> _IDPR;
		
		private string _PRNAME;
		
		private System.Nullable<System.DateTime> _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		private string _NameWithID;
		
		private EntitySet<AttachedDoctorSpr> _AttachedDoctorSpr;
		
		private EntitySet<CalcAmbTARIF> _CalcAmbTARIF;
		
		private EntitySet<LIC_TBL> _LIC_TBL;
		
		private EntitySet<LicenseDb> _LicenseDb;
		
		private EntitySet<TARIF_PN> _TARIF_PN;
		
		private EntitySet<SLUCH> _SLUCH;
		
		private EntitySet<USL> _USL;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIDPRChanging(System.Nullable<decimal> value);
    partial void OnIDPRChanged();
    partial void OnPRNAMEChanging(string value);
    partial void OnPRNAMEChanged();
    partial void OnDATEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public V002()
		{
			this._AttachedDoctorSpr = new EntitySet<AttachedDoctorSpr>(new Action<AttachedDoctorSpr>(this.attach_AttachedDoctorSpr), new Action<AttachedDoctorSpr>(this.detach_AttachedDoctorSpr));
			this._CalcAmbTARIF = new EntitySet<CalcAmbTARIF>(new Action<CalcAmbTARIF>(this.attach_CalcAmbTARIF), new Action<CalcAmbTARIF>(this.detach_CalcAmbTARIF));
			this._LIC_TBL = new EntitySet<LIC_TBL>(new Action<LIC_TBL>(this.attach_LIC_TBL), new Action<LIC_TBL>(this.detach_LIC_TBL));
			this._LicenseDb = new EntitySet<LicenseDb>(new Action<LicenseDb>(this.attach_LicenseDb), new Action<LicenseDb>(this.detach_LicenseDb));
			this._TARIF_PN = new EntitySet<TARIF_PN>(new Action<TARIF_PN>(this.attach_TARIF_PN), new Action<TARIF_PN>(this.detach_TARIF_PN));
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			this._USL = new EntitySet<USL>(new Action<USL>(this.attach_USL), new Action<USL>(this.detach_USL));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPR", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> IDPR
		{
			get
			{
				return this._IDPR;
			}
			set
			{
				if ((this._IDPR != value))
				{
					this.OnIDPRChanging(value);
					this.SendPropertyChanging();
					this._IDPR = value;
					this.SendPropertyChanged("IDPR");
					this.OnIDPRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRNAME", DbType="NVarChar(254)")]
		public string PRNAME
		{
			get
			{
				return this._PRNAME;
			}
			set
			{
				if ((this._PRNAME != value))
				{
					this.OnPRNAMEChanging(value);
					this.SendPropertyChanging();
					this._PRNAME = value;
					this.SendPropertyChanged("PRNAME");
					this.OnPRNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(260)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V002_AttachedDoctorSpr", Storage="_AttachedDoctorSpr", ThisKey="Id", OtherKey="PROFIL")]
		public EntitySet<AttachedDoctorSpr> AttachedDoctorSpr
		{
			get
			{
				return this._AttachedDoctorSpr;
			}
			set
			{
				this._AttachedDoctorSpr.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V002_CalcAmbTARIF", Storage="_CalcAmbTARIF", ThisKey="Id", OtherKey="PROFIL")]
		public EntitySet<CalcAmbTARIF> CalcAmbTARIF
		{
			get
			{
				return this._CalcAmbTARIF;
			}
			set
			{
				this._CalcAmbTARIF.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V002_LIC_TBL", Storage="_LIC_TBL", ThisKey="Id", OtherKey="PROFIL")]
		public EntitySet<LIC_TBL> LIC_TBL
		{
			get
			{
				return this._LIC_TBL;
			}
			set
			{
				this._LIC_TBL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V002_LicenseDb", Storage="_LicenseDb", ThisKey="Id", OtherKey="Profil")]
		public EntitySet<LicenseDb> LicenseDb
		{
			get
			{
				return this._LicenseDb;
			}
			set
			{
				this._LicenseDb.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V002_TARIF_PN", Storage="_TARIF_PN", ThisKey="Id", OtherKey="T_PROFIL")]
		public EntitySet<TARIF_PN> TARIF_PN
		{
			get
			{
				return this._TARIF_PN;
			}
			set
			{
				this._TARIF_PN.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V002_SLUCH", Storage="_SLUCH", ThisKey="Id", OtherKey="PROFIL")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V002_USL", Storage="_USL", ThisKey="Id", OtherKey="PROFIL")]
		public EntitySet<USL> USL
		{
			get
			{
				return this._USL;
			}
			set
			{
				this._USL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AttachedDoctorSpr(AttachedDoctorSpr entity)
		{
			this.SendPropertyChanging();
			entity.V002 = this;
		}
		
		private void detach_AttachedDoctorSpr(AttachedDoctorSpr entity)
		{
			this.SendPropertyChanging();
			entity.V002 = null;
		}
		
		private void attach_CalcAmbTARIF(CalcAmbTARIF entity)
		{
			this.SendPropertyChanging();
			entity.V002 = this;
		}
		
		private void detach_CalcAmbTARIF(CalcAmbTARIF entity)
		{
			this.SendPropertyChanging();
			entity.V002 = null;
		}
		
		private void attach_LIC_TBL(LIC_TBL entity)
		{
			this.SendPropertyChanging();
			entity.V002 = this;
		}
		
		private void detach_LIC_TBL(LIC_TBL entity)
		{
			this.SendPropertyChanging();
			entity.V002 = null;
		}
		
		private void attach_LicenseDb(LicenseDb entity)
		{
			this.SendPropertyChanging();
			entity.V002 = this;
		}
		
		private void detach_LicenseDb(LicenseDb entity)
		{
			this.SendPropertyChanging();
			entity.V002 = null;
		}
		
		private void attach_TARIF_PN(TARIF_PN entity)
		{
			this.SendPropertyChanging();
			entity.V002 = this;
		}
		
		private void detach_TARIF_PN(TARIF_PN entity)
		{
			this.SendPropertyChanging();
			entity.V002 = null;
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.V002 = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.V002 = null;
		}
		
		private void attach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.V002 = this;
		}
		
		private void detach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.V002 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V003")]
	public partial class V003 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<decimal> _IDLIC;
		
		private string _LICNAME;
		
		private System.Nullable<System.DateTime> _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		private System.Nullable<decimal> _IERARH;
		
		private System.Nullable<decimal> _PRIM;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIDLICChanging(System.Nullable<decimal> value);
    partial void OnIDLICChanged();
    partial void OnLICNAMEChanging(string value);
    partial void OnLICNAMEChanged();
    partial void OnDATEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    partial void OnIERARHChanging(System.Nullable<decimal> value);
    partial void OnIERARHChanged();
    partial void OnPRIMChanging(System.Nullable<decimal> value);
    partial void OnPRIMChanged();
    #endregion
		
		public V003()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLIC", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> IDLIC
		{
			get
			{
				return this._IDLIC;
			}
			set
			{
				if ((this._IDLIC != value))
				{
					this.OnIDLICChanging(value);
					this.SendPropertyChanging();
					this._IDLIC = value;
					this.SendPropertyChanged("IDLIC");
					this.OnIDLICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICNAME", DbType="NVarChar(254)")]
		public string LICNAME
		{
			get
			{
				return this._LICNAME;
			}
			set
			{
				if ((this._LICNAME != value))
				{
					this.OnLICNAMEChanging(value);
					this.SendPropertyChanging();
					this._LICNAME = value;
					this.SendPropertyChanged("LICNAME");
					this.OnLICNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IERARH", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> IERARH
		{
			get
			{
				return this._IERARH;
			}
			set
			{
				if ((this._IERARH != value))
				{
					this.OnIERARHChanging(value);
					this.SendPropertyChanging();
					this._IERARH = value;
					this.SendPropertyChanged("IERARH");
					this.OnIERARHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRIM", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> PRIM
		{
			get
			{
				return this._PRIM;
			}
			set
			{
				if ((this._PRIM != value))
				{
					this.OnPRIMChanging(value);
					this.SendPropertyChanging();
					this._PRIM = value;
					this.SendPropertyChanged("PRIM");
					this.OnPRIMChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V004")]
	public partial class V004 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _MSPNAME;
		
		private System.Nullable<System.DateTime> _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		private string _NameWithID;
		
		private EntitySet<SLUCH> _SLUCH;
		
		private EntitySet<USL> _USL;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMSPNAMEChanging(string value);
    partial void OnMSPNAMEChanged();
    partial void OnDATEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public V004()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			this._USL = new EntitySet<USL>(new Action<USL>(this.attach_USL), new Action<USL>(this.detach_USL));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSPNAME", DbType="NVarChar(100)")]
		public string MSPNAME
		{
			get
			{
				return this._MSPNAME;
			}
			set
			{
				if ((this._MSPNAME != value))
				{
					this.OnMSPNAMEChanging(value);
					this.SendPropertyChanging();
					this._MSPNAME = value;
					this.SendPropertyChanged("MSPNAME");
					this.OnMSPNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(109)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V004_SLUCH", Storage="_SLUCH", ThisKey="id", OtherKey="PRVS")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V004_USL", Storage="_USL", ThisKey="id", OtherKey="PRVS")]
		public EntitySet<USL> USL
		{
			get
			{
				return this._USL;
			}
			set
			{
				this._USL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.V004 = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.V004 = null;
		}
		
		private void attach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.V004 = this;
		}
		
		private void detach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.V004 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V005")]
	public partial class V005 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _POLNAME;
		
		private string _NameWithID;
		
		private EntitySet<PACIENT> _PACIENT;
		
		private EntitySet<PACIENT> _PACIENT1;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPOLNAMEChanging(string value);
    partial void OnPOLNAMEChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public V005()
		{
			this._PACIENT = new EntitySet<PACIENT>(new Action<PACIENT>(this.attach_PACIENT), new Action<PACIENT>(this.detach_PACIENT));
			this._PACIENT1 = new EntitySet<PACIENT>(new Action<PACIENT>(this.attach_PACIENT1), new Action<PACIENT>(this.detach_PACIENT1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POLNAME", DbType="NVarChar(7)")]
		public string POLNAME
		{
			get
			{
				return this._POLNAME;
			}
			set
			{
				if ((this._POLNAME != value))
				{
					this.OnPOLNAMEChanging(value);
					this.SendPropertyChanging();
					this._POLNAME = value;
					this.SendPropertyChanged("POLNAME");
					this.OnPOLNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(12)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V005_PACIENT", Storage="_PACIENT", ThisKey="Id", OtherKey="W")]
		public EntitySet<PACIENT> PACIENT
		{
			get
			{
				return this._PACIENT;
			}
			set
			{
				this._PACIENT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V005_PACIENT1", Storage="_PACIENT1", ThisKey="Id", OtherKey="W_P")]
		public EntitySet<PACIENT> PACIENT1
		{
			get
			{
				return this._PACIENT1;
			}
			set
			{
				this._PACIENT1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PACIENT(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.V005 = this;
		}
		
		private void detach_PACIENT(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.V005 = null;
		}
		
		private void attach_PACIENT1(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.V0051 = this;
		}
		
		private void detach_PACIENT1(PACIENT entity)
		{
			this.SendPropertyChanging();
			entity.V0051 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V006")]
	public partial class V006 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<decimal> _IDUMP;
		
		private string _UMPNAME;
		
		private System.Nullable<System.DateTime> _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		private string _NameWithID;
		
		private EntitySet<CalcAmbTARIF> _CalcAmbTARIF;
		
		private EntitySet<LIC_TBL> _LIC_TBL;
		
		private EntitySet<LicenseDb> _LicenseDb;
		
		private EntitySet<OtdelDb> _OtdelDb;
		
		private EntitySet<Tarif> _Tarif;
		
		private EntitySet<TARIF_PN> _TARIF_PN;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnIDUMPChanging(System.Nullable<decimal> value);
    partial void OnIDUMPChanged();
    partial void OnUMPNAMEChanging(string value);
    partial void OnUMPNAMEChanged();
    partial void OnDATEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public V006()
		{
			this._CalcAmbTARIF = new EntitySet<CalcAmbTARIF>(new Action<CalcAmbTARIF>(this.attach_CalcAmbTARIF), new Action<CalcAmbTARIF>(this.detach_CalcAmbTARIF));
			this._LIC_TBL = new EntitySet<LIC_TBL>(new Action<LIC_TBL>(this.attach_LIC_TBL), new Action<LIC_TBL>(this.detach_LIC_TBL));
			this._LicenseDb = new EntitySet<LicenseDb>(new Action<LicenseDb>(this.attach_LicenseDb), new Action<LicenseDb>(this.detach_LicenseDb));
			this._OtdelDb = new EntitySet<OtdelDb>(new Action<OtdelDb>(this.attach_OtdelDb), new Action<OtdelDb>(this.detach_OtdelDb));
			this._Tarif = new EntitySet<Tarif>(new Action<Tarif>(this.attach_Tarif), new Action<Tarif>(this.detach_Tarif));
			this._TARIF_PN = new EntitySet<TARIF_PN>(new Action<TARIF_PN>(this.attach_TARIF_PN), new Action<TARIF_PN>(this.detach_TARIF_PN));
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUMP", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> IDUMP
		{
			get
			{
				return this._IDUMP;
			}
			set
			{
				if ((this._IDUMP != value))
				{
					this.OnIDUMPChanging(value);
					this.SendPropertyChanging();
					this._IDUMP = value;
					this.SendPropertyChanged("IDUMP");
					this.OnIDUMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UMPNAME", DbType="NVarChar(254)")]
		public string UMPNAME
		{
			get
			{
				return this._UMPNAME;
			}
			set
			{
				if ((this._UMPNAME != value))
				{
					this.OnUMPNAMEChanging(value);
					this.SendPropertyChanging();
					this._UMPNAME = value;
					this.SendPropertyChanged("UMPNAME");
					this.OnUMPNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(259)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V006_CalcAmbTARIF", Storage="_CalcAmbTARIF", ThisKey="id", OtherKey="USL_OK")]
		public EntitySet<CalcAmbTARIF> CalcAmbTARIF
		{
			get
			{
				return this._CalcAmbTARIF;
			}
			set
			{
				this._CalcAmbTARIF.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V006_LIC_TBL", Storage="_LIC_TBL", ThisKey="id", OtherKey="USL_MP")]
		public EntitySet<LIC_TBL> LIC_TBL
		{
			get
			{
				return this._LIC_TBL;
			}
			set
			{
				this._LIC_TBL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V006_LicenseDb", Storage="_LicenseDb", ThisKey="id", OtherKey="UslOk")]
		public EntitySet<LicenseDb> LicenseDb
		{
			get
			{
				return this._LicenseDb;
			}
			set
			{
				this._LicenseDb.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V006_OtdelDb", Storage="_OtdelDb", ThisKey="id", OtherKey="ConditionID")]
		public EntitySet<OtdelDb> OtdelDb
		{
			get
			{
				return this._OtdelDb;
			}
			set
			{
				this._OtdelDb.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V006_Tarif", Storage="_Tarif", ThisKey="id", OtherKey="ConditionHelp")]
		public EntitySet<Tarif> Tarif
		{
			get
			{
				return this._Tarif;
			}
			set
			{
				this._Tarif.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V006_TARIF_PN", Storage="_TARIF_PN", ThisKey="id", OtherKey="T_USL_OK")]
		public EntitySet<TARIF_PN> TARIF_PN
		{
			get
			{
				return this._TARIF_PN;
			}
			set
			{
				this._TARIF_PN.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V006_SLUCH", Storage="_SLUCH", ThisKey="id", OtherKey="USL_OK")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CalcAmbTARIF(CalcAmbTARIF entity)
		{
			this.SendPropertyChanging();
			entity.V006 = this;
		}
		
		private void detach_CalcAmbTARIF(CalcAmbTARIF entity)
		{
			this.SendPropertyChanging();
			entity.V006 = null;
		}
		
		private void attach_LIC_TBL(LIC_TBL entity)
		{
			this.SendPropertyChanging();
			entity.V006 = this;
		}
		
		private void detach_LIC_TBL(LIC_TBL entity)
		{
			this.SendPropertyChanging();
			entity.V006 = null;
		}
		
		private void attach_LicenseDb(LicenseDb entity)
		{
			this.SendPropertyChanging();
			entity.V006 = this;
		}
		
		private void detach_LicenseDb(LicenseDb entity)
		{
			this.SendPropertyChanging();
			entity.V006 = null;
		}
		
		private void attach_OtdelDb(OtdelDb entity)
		{
			this.SendPropertyChanging();
			entity.V006 = this;
		}
		
		private void detach_OtdelDb(OtdelDb entity)
		{
			this.SendPropertyChanging();
			entity.V006 = null;
		}
		
		private void attach_Tarif(Tarif entity)
		{
			this.SendPropertyChanging();
			entity.V006 = this;
		}
		
		private void detach_Tarif(Tarif entity)
		{
			this.SendPropertyChanging();
			entity.V006 = null;
		}
		
		private void attach_TARIF_PN(TARIF_PN entity)
		{
			this.SendPropertyChanging();
			entity.V006 = this;
		}
		
		private void detach_TARIF_PN(TARIF_PN entity)
		{
			this.SendPropertyChanging();
			entity.V006 = null;
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.V006 = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.V006 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V007")]
	public partial class V007 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<decimal> _IDNMO;
		
		private string _NMONAME;
		
		private System.Nullable<System.DateTime> _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIDNMOChanging(System.Nullable<decimal> value);
    partial void OnIDNMOChanged();
    partial void OnNMONAMEChanging(string value);
    partial void OnNMONAMEChanged();
    partial void OnDATEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    #endregion
		
		public V007()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNMO", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> IDNMO
		{
			get
			{
				return this._IDNMO;
			}
			set
			{
				if ((this._IDNMO != value))
				{
					this.OnIDNMOChanging(value);
					this.SendPropertyChanging();
					this._IDNMO = value;
					this.SendPropertyChanged("IDNMO");
					this.OnIDNMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NMONAME", DbType="NVarChar(254)")]
		public string NMONAME
		{
			get
			{
				return this._NMONAME;
			}
			set
			{
				if ((this._NMONAME != value))
				{
					this.OnNMONAMEChanging(value);
					this.SendPropertyChanging();
					this._NMONAME = value;
					this.SendPropertyChanged("NMONAME");
					this.OnNMONAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V008")]
	public partial class V008 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<decimal> _IDVMP;
		
		private string _VMPNAME;
		
		private System.Nullable<System.DateTime> _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		private string _NameWithID;
		
		private EntitySet<LIC_TBL> _LIC_TBL;
		
		private EntitySet<LicenseDb> _LicenseDb;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIDVMPChanging(System.Nullable<decimal> value);
    partial void OnIDVMPChanged();
    partial void OnVMPNAMEChanging(string value);
    partial void OnVMPNAMEChanged();
    partial void OnDATEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public V008()
		{
			this._LIC_TBL = new EntitySet<LIC_TBL>(new Action<LIC_TBL>(this.attach_LIC_TBL), new Action<LIC_TBL>(this.detach_LIC_TBL));
			this._LicenseDb = new EntitySet<LicenseDb>(new Action<LicenseDb>(this.attach_LicenseDb), new Action<LicenseDb>(this.detach_LicenseDb));
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVMP", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> IDVMP
		{
			get
			{
				return this._IDVMP;
			}
			set
			{
				if ((this._IDVMP != value))
				{
					this.OnIDVMPChanging(value);
					this.SendPropertyChanging();
					this._IDVMP = value;
					this.SendPropertyChanged("IDVMP");
					this.OnIDVMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VMPNAME", DbType="NVarChar(254)")]
		public string VMPNAME
		{
			get
			{
				return this._VMPNAME;
			}
			set
			{
				if ((this._VMPNAME != value))
				{
					this.OnVMPNAMEChanging(value);
					this.SendPropertyChanging();
					this._VMPNAME = value;
					this.SendPropertyChanged("VMPNAME");
					this.OnVMPNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(259)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V008_LIC_TBL", Storage="_LIC_TBL", ThisKey="Id", OtherKey="VID_MP")]
		public EntitySet<LIC_TBL> LIC_TBL
		{
			get
			{
				return this._LIC_TBL;
			}
			set
			{
				this._LIC_TBL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V008_LicenseDb", Storage="_LicenseDb", ThisKey="Id", OtherKey="TypeHelp")]
		public EntitySet<LicenseDb> LicenseDb
		{
			get
			{
				return this._LicenseDb;
			}
			set
			{
				this._LicenseDb.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V008_SLUCH", Storage="_SLUCH", ThisKey="Id", OtherKey="VIDPOM")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LIC_TBL(LIC_TBL entity)
		{
			this.SendPropertyChanging();
			entity.V008 = this;
		}
		
		private void detach_LIC_TBL(LIC_TBL entity)
		{
			this.SendPropertyChanging();
			entity.V008 = null;
		}
		
		private void attach_LicenseDb(LicenseDb entity)
		{
			this.SendPropertyChanging();
			entity.V008 = this;
		}
		
		private void detach_LicenseDb(LicenseDb entity)
		{
			this.SendPropertyChanging();
			entity.V008 = null;
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.V008 = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.V008 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V009")]
	public partial class V009 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDRMP;
		
		private string _RMPNAME;
		
		private System.Nullable<int> _DL_USLOV;
		
		private System.Nullable<System.DateTime> _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		private string _NameWithID;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRMPChanging(int value);
    partial void OnIDRMPChanged();
    partial void OnRMPNAMEChanging(string value);
    partial void OnRMPNAMEChanged();
    partial void OnDL_USLOVChanging(System.Nullable<int> value);
    partial void OnDL_USLOVChanged();
    partial void OnDATEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public V009()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRMP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDRMP
		{
			get
			{
				return this._IDRMP;
			}
			set
			{
				if ((this._IDRMP != value))
				{
					this.OnIDRMPChanging(value);
					this.SendPropertyChanging();
					this._IDRMP = value;
					this.SendPropertyChanged("IDRMP");
					this.OnIDRMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RMPNAME", DbType="NVarChar(254)")]
		public string RMPNAME
		{
			get
			{
				return this._RMPNAME;
			}
			set
			{
				if ((this._RMPNAME != value))
				{
					this.OnRMPNAMEChanging(value);
					this.SendPropertyChanging();
					this._RMPNAME = value;
					this.SendPropertyChanged("RMPNAME");
					this.OnRMPNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_USLOV", DbType="Int")]
		public System.Nullable<int> DL_USLOV
		{
			get
			{
				return this._DL_USLOV;
			}
			set
			{
				if ((this._DL_USLOV != value))
				{
					this.OnDL_USLOVChanging(value);
					this.SendPropertyChanging();
					this._DL_USLOV = value;
					this.SendPropertyChanged("DL_USLOV");
					this.OnDL_USLOVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(259)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V009_SLUCH", Storage="_SLUCH", ThisKey="IDRMP", OtherKey="RSLT")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.V009 = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.V009 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V010")]
	public partial class V010 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<decimal> _IDSP;
		
		private string _SPNAME;
		
		private System.Nullable<System.DateTime> _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		private string _NameWithID;
		
		private EntitySet<CalcAmbTARIF> _CalcAmbTARIF;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIDSPChanging(System.Nullable<decimal> value);
    partial void OnIDSPChanged();
    partial void OnSPNAMEChanging(string value);
    partial void OnSPNAMEChanged();
    partial void OnDATEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public V010()
		{
			this._CalcAmbTARIF = new EntitySet<CalcAmbTARIF>(new Action<CalcAmbTARIF>(this.attach_CalcAmbTARIF), new Action<CalcAmbTARIF>(this.detach_CalcAmbTARIF));
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSP", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> IDSP
		{
			get
			{
				return this._IDSP;
			}
			set
			{
				if ((this._IDSP != value))
				{
					this.OnIDSPChanging(value);
					this.SendPropertyChanging();
					this._IDSP = value;
					this.SendPropertyChanged("IDSP");
					this.OnIDSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPNAME", DbType="NVarChar(254)")]
		public string SPNAME
		{
			get
			{
				return this._SPNAME;
			}
			set
			{
				if ((this._SPNAME != value))
				{
					this.OnSPNAMEChanging(value);
					this.SendPropertyChanging();
					this._SPNAME = value;
					this.SendPropertyChanged("SPNAME");
					this.OnSPNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(259)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V010_CalcAmbTARIF", Storage="_CalcAmbTARIF", ThisKey="Id", OtherKey="IDSP")]
		public EntitySet<CalcAmbTARIF> CalcAmbTARIF
		{
			get
			{
				return this._CalcAmbTARIF;
			}
			set
			{
				this._CalcAmbTARIF.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V010_SLUCH", Storage="_SLUCH", ThisKey="Id", OtherKey="IDSP")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CalcAmbTARIF(CalcAmbTARIF entity)
		{
			this.SendPropertyChanging();
			entity.V010 = this;
		}
		
		private void detach_CalcAmbTARIF(CalcAmbTARIF entity)
		{
			this.SendPropertyChanging();
			entity.V010 = null;
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.V010 = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.V010 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V012")]
	public partial class V012 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _IZNAME;
		
		private System.Nullable<System.DateTime> _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		private System.Nullable<decimal> _DL_USLOV;
		
		private string _NameWithID;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnIZNAMEChanging(string value);
    partial void OnIZNAMEChanged();
    partial void OnDATEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    partial void OnDL_USLOVChanging(System.Nullable<decimal> value);
    partial void OnDL_USLOVChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public V012()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IZNAME", DbType="NVarChar(254)")]
		public string IZNAME
		{
			get
			{
				return this._IZNAME;
			}
			set
			{
				if ((this._IZNAME != value))
				{
					this.OnIZNAMEChanging(value);
					this.SendPropertyChanging();
					this._IZNAME = value;
					this.SendPropertyChanged("IZNAME");
					this.OnIZNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_USLOV", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> DL_USLOV
		{
			get
			{
				return this._DL_USLOV;
			}
			set
			{
				if ((this._DL_USLOV != value))
				{
					this.OnDL_USLOVChanging(value);
					this.SendPropertyChanging();
					this._DL_USLOV = value;
					this.SendPropertyChanged("DL_USLOV");
					this.OnDL_USLOVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(259)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V012_SLUCH", Storage="_SLUCH", ThisKey="id", OtherKey="ISHOD")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.V012 = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.V012 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V015")]
	public partial class V015 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private System.Nullable<int> _HIGH;
		
		private string _OKSO;
		
		private System.Nullable<System.DateTime> _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		private string _NameWithID;
		
		private EntitySet<SLUCH> _SLUCH;
		
		private EntitySet<USL> _USL;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnHIGHChanging(System.Nullable<int> value);
    partial void OnHIGHChanged();
    partial void OnOKSOChanging(string value);
    partial void OnOKSOChanged();
    partial void OnDATEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEBEGChanged();
    partial void OnDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEENDChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public V015()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			this._USL = new EntitySet<USL>(new Action<USL>(this.attach_USL), new Action<USL>(this.detach_USL));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(255)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIGH", DbType="Int")]
		public System.Nullable<int> HIGH
		{
			get
			{
				return this._HIGH;
			}
			set
			{
				if ((this._HIGH != value))
				{
					this.OnHIGHChanging(value);
					this.SendPropertyChanging();
					this._HIGH = value;
					this.SendPropertyChanged("HIGH");
					this.OnHIGHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKSO", DbType="NVarChar(255)")]
		public string OKSO
		{
			get
			{
				return this._OKSO;
			}
			set
			{
				if ((this._OKSO != value))
				{
					this.OnOKSOChanging(value);
					this.SendPropertyChanging();
					this._OKSO = value;
					this.SendPropertyChanged("OKSO");
					this.OnOKSOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this.OnDATEBEGChanging(value);
					this.SendPropertyChanging();
					this._DATEBEG = value;
					this.SendPropertyChanged("DATEBEG");
					this.OnDATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this.OnDATEENDChanging(value);
					this.SendPropertyChanging();
					this._DATEEND = value;
					this.SendPropertyChanged("DATEEND");
					this.OnDATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(261)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V015_SLUCH", Storage="_SLUCH", ThisKey="ID", OtherKey="MSPID")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V015_USL", Storage="_USL", ThisKey="ID", OtherKey="MSPUID")]
		public EntitySet<USL> USL
		{
			get
			{
				return this._USL;
			}
			set
			{
				this._USL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.V015 = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.V015 = null;
		}
		
		private void attach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.V015 = this;
		}
		
		private void detach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.V015 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V015_V002")]
	public partial class V015_V002 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CodSpec;
		
		private string _Spec;
		
		private System.Nullable<int> _CodProf;
		
		private string _Prof;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodSpecChanging(System.Nullable<int> value);
    partial void OnCodSpecChanged();
    partial void OnSpecChanging(string value);
    partial void OnSpecChanged();
    partial void OnCodProfChanging(System.Nullable<int> value);
    partial void OnCodProfChanged();
    partial void OnProfChanging(string value);
    partial void OnProfChanged();
    #endregion
		
		public V015_V002()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodSpec", DbType="Int")]
		public System.Nullable<int> CodSpec
		{
			get
			{
				return this._CodSpec;
			}
			set
			{
				if ((this._CodSpec != value))
				{
					this.OnCodSpecChanging(value);
					this.SendPropertyChanging();
					this._CodSpec = value;
					this.SendPropertyChanged("CodSpec");
					this.OnCodSpecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spec", DbType="VarChar(500)")]
		public string Spec
		{
			get
			{
				return this._Spec;
			}
			set
			{
				if ((this._Spec != value))
				{
					this.OnSpecChanging(value);
					this.SendPropertyChanging();
					this._Spec = value;
					this.SendPropertyChanged("Spec");
					this.OnSpecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodProf", DbType="Int")]
		public System.Nullable<int> CodProf
		{
			get
			{
				return this._CodProf;
			}
			set
			{
				if ((this._CodProf != value))
				{
					this.OnCodProfChanging(value);
					this.SendPropertyChanging();
					this._CodProf = value;
					this.SendPropertyChanged("CodProf");
					this.OnCodProfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prof", DbType="VarChar(500)")]
		public string Prof
		{
			get
			{
				return this._Prof;
			}
			set
			{
				if ((this._Prof != value))
				{
					this.OnProfChanging(value);
					this.SendPropertyChanging();
					this._Prof = value;
					this.SendPropertyChanged("Prof");
					this.OnProfChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V018")]
	public partial class V018
	{
		
		private string _IDHVID;
		
		private string _HVIDNAME;
		
		private System.Nullable<System.DateTime> _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		private string _NameWithID;
		
		public V018()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHVID", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string IDHVID
		{
			get
			{
				return this._IDHVID;
			}
			set
			{
				if ((this._IDHVID != value))
				{
					this._IDHVID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HVIDNAME", DbType="NVarChar(1000)")]
		public string HVIDNAME
		{
			get
			{
				return this._HVIDNAME;
			}
			set
			{
				if ((this._HVIDNAME != value))
				{
					this._HVIDNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this._DATEBEG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this._DATEEND = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(1016)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this._NameWithID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V019")]
	public partial class V019
	{
		
		private int _IDHM;
		
		private string _HMNAME;
		
		private string _DIAG;
		
		private string _HVID;
		
		private System.Nullable<System.DateTime> _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		private string _NameWithID;
		
		private System.Nullable<int> _HGR;
		
		private string _HMODP;
		
		public V019()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHM", DbType="Int NOT NULL")]
		public int IDHM
		{
			get
			{
				return this._IDHM;
			}
			set
			{
				if ((this._IDHM != value))
				{
					this._IDHM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HMNAME", DbType="NVarChar(1000)")]
		public string HMNAME
		{
			get
			{
				return this._HMNAME;
			}
			set
			{
				if ((this._HMNAME != value))
				{
					this._HMNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIAG", DbType="NVarChar(1000)")]
		public string DIAG
		{
			get
			{
				return this._DIAG;
			}
			set
			{
				if ((this._DIAG != value))
				{
					this._DIAG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HVID", DbType="NVarChar(12)")]
		public string HVID
		{
			get
			{
				return this._HVID;
			}
			set
			{
				if ((this._HVID != value))
				{
					this._HVID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this._DATEBEG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this._DATEEND = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(1005)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this._NameWithID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HGR", DbType="Int")]
		public System.Nullable<int> HGR
		{
			get
			{
				return this._HGR;
			}
			set
			{
				if ((this._HGR != value))
				{
					this._HGR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HMODP", DbType="NVarChar(255)")]
		public string HMODP
		{
			get
			{
				return this._HMODP;
			}
			set
			{
				if ((this._HMODP != value))
				{
					this._HMODP = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VeteranDb")]
	public partial class VeteranDb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _NameWithID;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public VeteranDb()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="VarChar(54)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeteranDb_SLUCH", Storage="_SLUCH", ThisKey="Id", OtherKey="VETERAN")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.VeteranDb = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.VeteranDb = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VMP_TARIF")]
	public partial class VMP_TARIF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDHM;
		
		private int _HMGR;
		
		private System.Nullable<decimal> _HM_TARIF;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDHMChanging(int value);
    partial void OnIDHMChanged();
    partial void OnHMGRChanging(int value);
    partial void OnHMGRChanged();
    partial void OnHM_TARIFChanging(System.Nullable<decimal> value);
    partial void OnHM_TARIFChanged();
    #endregion
		
		public VMP_TARIF()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHM", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDHM
		{
			get
			{
				return this._IDHM;
			}
			set
			{
				if ((this._IDHM != value))
				{
					this.OnIDHMChanging(value);
					this.SendPropertyChanging();
					this._IDHM = value;
					this.SendPropertyChanged("IDHM");
					this.OnIDHMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HMGR", DbType="Int NOT NULL")]
		public int HMGR
		{
			get
			{
				return this._HMGR;
			}
			set
			{
				if ((this._HMGR != value))
				{
					this.OnHMGRChanging(value);
					this.SendPropertyChanging();
					this._HMGR = value;
					this.SendPropertyChanged("HMGR");
					this.OnHMGRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HM_TARIF", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> HM_TARIF
		{
			get
			{
				return this._HM_TARIF;
			}
			set
			{
				if ((this._HM_TARIF != value))
				{
					this.OnHM_TARIFChanging(value);
					this.SendPropertyChanging();
					this._HM_TARIF = value;
					this.SendPropertyChanged("HM_TARIF");
					this.OnHM_TARIFChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WORK_DAY")]
	public partial class WORK_DAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LPU;
		
		private System.DateTime _H_DATE;
		
		private string _PODR_ID;
		
		private EntityRef<F003> _F003;
		
		private EntityRef<PodrDb> _PodrDb;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLPUChanging(string value);
    partial void OnLPUChanged();
    partial void OnH_DATEChanging(System.DateTime value);
    partial void OnH_DATEChanged();
    partial void OnPODR_IDChanging(string value);
    partial void OnPODR_IDChanged();
    #endregion
		
		public WORK_DAY()
		{
			this._F003 = default(EntityRef<F003>);
			this._PodrDb = default(EntityRef<PodrDb>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPU", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string LPU
		{
			get
			{
				return this._LPU;
			}
			set
			{
				if ((this._LPU != value))
				{
					if (this._F003.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLPUChanging(value);
					this.SendPropertyChanging();
					this._LPU = value;
					this.SendPropertyChanged("LPU");
					this.OnLPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_DATE", DbType="SmallDateTime NOT NULL")]
		public System.DateTime H_DATE
		{
			get
			{
				return this._H_DATE;
			}
			set
			{
				if ((this._H_DATE != value))
				{
					this.OnH_DATEChanging(value);
					this.SendPropertyChanging();
					this._H_DATE = value;
					this.SendPropertyChanged("H_DATE");
					this.OnH_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODR_ID", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string PODR_ID
		{
			get
			{
				return this._PODR_ID;
			}
			set
			{
				if ((this._PODR_ID != value))
				{
					if (this._PodrDb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPODR_IDChanging(value);
					this.SendPropertyChanging();
					this._PODR_ID = value;
					this.SendPropertyChanged("PODR_ID");
					this.OnPODR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F003_WORK_DAY", Storage="_F003", ThisKey="LPU", OtherKey="mcod", IsForeignKey=true)]
		public F003 F003
		{
			get
			{
				return this._F003.Entity;
			}
			set
			{
				F003 previousValue = this._F003.Entity;
				if (((previousValue != value) 
							|| (this._F003.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F003.Entity = null;
						previousValue.WORK_DAY.Remove(this);
					}
					this._F003.Entity = value;
					if ((value != null))
					{
						value.WORK_DAY.Add(this);
						this._LPU = value.mcod;
					}
					else
					{
						this._LPU = default(string);
					}
					this.SendPropertyChanged("F003");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PodrDb_WORK_DAY", Storage="_PodrDb", ThisKey="PODR_ID", OtherKey="Id", IsForeignKey=true)]
		public PodrDb PodrDb
		{
			get
			{
				return this._PodrDb.Entity;
			}
			set
			{
				PodrDb previousValue = this._PodrDb.Entity;
				if (((previousValue != value) 
							|| (this._PodrDb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PodrDb.Entity = null;
						previousValue.WORK_DAY.Remove(this);
					}
					this._PodrDb.Entity = value;
					if ((value != null))
					{
						value.WORK_DAY.Add(this);
						this._PODR_ID = value.Id;
					}
					else
					{
						this._PODR_ID = default(string);
					}
					this.SendPropertyChanged("PodrDb");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkStatDb")]
	public partial class WorkStatDb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _NameWithID;
		
		private EntitySet<SLUCH> _SLUCH;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public WorkStatDb()
		{
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="VarChar(54)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkStatDb_SLUCH", Storage="_SLUCH", ThisKey="Id", OtherKey="WORK_STAT")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.WorkStatDb = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.WorkStatDb = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.YesNoTbl")]
	public partial class YesNoTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private bool _ID;
		
		private string _NAME;
		
		private string _NameWithID;
		
		private EntitySet<USL> _USL;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(bool value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public YesNoTbl()
		{
			this._USL = new EntitySet<USL>(new Action<USL>(this.attach_USL), new Action<USL>(this.detach_USL));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Bit NOT NULL", IsPrimaryKey=true)]
		public bool ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(20)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(23)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="YesNoTbl_USL", Storage="_USL", ThisKey="ID", OtherKey="OTKL")]
		public EntitySet<USL> USL
		{
			get
			{
				return this._USL;
			}
			set
			{
				this._USL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.YesNoTbl = this;
		}
		
		private void detach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.YesNoTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.YamedRegistry")]
	public partial class YamedRegistry
	{
		
		private int _ID;
		
		private System.DateTime _BeginTime;
		
		private System.Nullable<int> _DID;
		
		private System.Nullable<int> _PID;
		
		private System.Nullable<int> _SLID;
		
		public YamedRegistry()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginTime", DbType="DateTime NOT NULL")]
		public System.DateTime BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this._BeginTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DID", DbType="Int")]
		public System.Nullable<int> DID
		{
			get
			{
				return this._DID;
			}
			set
			{
				if ((this._DID != value))
				{
					this._DID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int")]
		public System.Nullable<int> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this._PID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLID", DbType="Int")]
		public System.Nullable<int> SLID
		{
			get
			{
				return this._SLID;
			}
			set
			{
				if ((this._SLID != value))
				{
					this._SLID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANK_IMP_TT")]
	public partial class SANK_IMP_TT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CODE_MO;
		
		private System.Nullable<decimal> _YEAR;
		
		private System.Nullable<decimal> _MONTH;
		
		private string _NSCHET;
		
		private System.Nullable<System.DateTime> _DSCHET;
		
		private string _PLAT;
		
		private System.Nullable<decimal> _LPU_ID;
		
		private string _NPOLIS;
		
		private System.Nullable<int> _USL_OK;
		
		private System.Nullable<int> _PROFIL;
		
		private string _DS1;
		
		private System.Nullable<System.DateTime> _DATE_1;
		
		private System.Nullable<System.DateTime> _DATE_2;
		
		private System.Nullable<int> _SLUCH_TYPE;
		
		private System.Nullable<int> _OS_SLUCH_REGION;
		
		private string _NHISTORY;
		
		private System.Nullable<System.Guid> _IDSLG;
		
		private System.Nullable<System.Guid> _S_CODE;
		
		private System.Nullable<decimal> _S_EXP_CODE;
		
		private System.Nullable<decimal> _S_SUM;
		
		private System.Nullable<decimal> _S_TIP;
		
		private System.Nullable<decimal> _S_OSN;
		
		private string _S_OSN_TS;
		
		private string _S_COM;
		
		private System.Nullable<System.DateTime> _S_DATE;
		
		private string _S_ZAKL;
		
		private System.Nullable<decimal> _S_IST;
		
		private System.Nullable<int> _SLID;
		
		private System.Nullable<int> _SCHET_ID;
		
		private string _COMENT;
		
		private System.Nullable<bool> _isUpdate;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCODE_MOChanging(string value);
    partial void OnCODE_MOChanged();
    partial void OnYEARChanging(System.Nullable<decimal> value);
    partial void OnYEARChanged();
    partial void OnMONTHChanging(System.Nullable<decimal> value);
    partial void OnMONTHChanged();
    partial void OnNSCHETChanging(string value);
    partial void OnNSCHETChanged();
    partial void OnDSCHETChanging(System.Nullable<System.DateTime> value);
    partial void OnDSCHETChanged();
    partial void OnPLATChanging(string value);
    partial void OnPLATChanged();
    partial void OnLPU_IDChanging(System.Nullable<decimal> value);
    partial void OnLPU_IDChanged();
    partial void OnNPOLISChanging(string value);
    partial void OnNPOLISChanged();
    partial void OnUSL_OKChanging(System.Nullable<int> value);
    partial void OnUSL_OKChanged();
    partial void OnPROFILChanging(System.Nullable<int> value);
    partial void OnPROFILChanged();
    partial void OnDS1Changing(string value);
    partial void OnDS1Changed();
    partial void OnDATE_1Changing(System.Nullable<System.DateTime> value);
    partial void OnDATE_1Changed();
    partial void OnDATE_2Changing(System.Nullable<System.DateTime> value);
    partial void OnDATE_2Changed();
    partial void OnSLUCH_TYPEChanging(System.Nullable<int> value);
    partial void OnSLUCH_TYPEChanged();
    partial void OnOS_SLUCH_REGIONChanging(System.Nullable<int> value);
    partial void OnOS_SLUCH_REGIONChanged();
    partial void OnNHISTORYChanging(string value);
    partial void OnNHISTORYChanged();
    partial void OnIDSLGChanging(System.Nullable<System.Guid> value);
    partial void OnIDSLGChanged();
    partial void OnS_CODEChanging(System.Nullable<System.Guid> value);
    partial void OnS_CODEChanged();
    partial void OnS_EXP_CODEChanging(System.Nullable<decimal> value);
    partial void OnS_EXP_CODEChanged();
    partial void OnS_SUMChanging(System.Nullable<decimal> value);
    partial void OnS_SUMChanged();
    partial void OnS_TIPChanging(System.Nullable<decimal> value);
    partial void OnS_TIPChanged();
    partial void OnS_OSNChanging(System.Nullable<decimal> value);
    partial void OnS_OSNChanged();
    partial void OnS_OSN_TSChanging(string value);
    partial void OnS_OSN_TSChanged();
    partial void OnS_COMChanging(string value);
    partial void OnS_COMChanged();
    partial void OnS_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnS_DATEChanged();
    partial void OnS_ZAKLChanging(string value);
    partial void OnS_ZAKLChanged();
    partial void OnS_ISTChanging(System.Nullable<decimal> value);
    partial void OnS_ISTChanged();
    partial void OnSLIDChanging(System.Nullable<int> value);
    partial void OnSLIDChanged();
    partial void OnSCHET_IDChanging(System.Nullable<int> value);
    partial void OnSCHET_IDChanged();
    partial void OnCOMENTChanging(string value);
    partial void OnCOMENTChanged();
    partial void OnisUpdateChanging(System.Nullable<bool> value);
    partial void OnisUpdateChanged();
    #endregion
		
		public SANK_IMP_TT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE_MO", DbType="NVarChar(6)")]
		public string CODE_MO
		{
			get
			{
				return this._CODE_MO;
			}
			set
			{
				if ((this._CODE_MO != value))
				{
					this.OnCODE_MOChanging(value);
					this.SendPropertyChanging();
					this._CODE_MO = value;
					this.SendPropertyChanged("CODE_MO");
					this.OnCODE_MOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YEAR", DbType="Decimal(4,0)")]
		public System.Nullable<decimal> YEAR
		{
			get
			{
				return this._YEAR;
			}
			set
			{
				if ((this._YEAR != value))
				{
					this.OnYEARChanging(value);
					this.SendPropertyChanging();
					this._YEAR = value;
					this.SendPropertyChanged("YEAR");
					this.OnYEARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MONTH", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> MONTH
		{
			get
			{
				return this._MONTH;
			}
			set
			{
				if ((this._MONTH != value))
				{
					this.OnMONTHChanging(value);
					this.SendPropertyChanging();
					this._MONTH = value;
					this.SendPropertyChanged("MONTH");
					this.OnMONTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSCHET", DbType="NVarChar(15)")]
		public string NSCHET
		{
			get
			{
				return this._NSCHET;
			}
			set
			{
				if ((this._NSCHET != value))
				{
					this.OnNSCHETChanging(value);
					this.SendPropertyChanging();
					this._NSCHET = value;
					this.SendPropertyChanged("NSCHET");
					this.OnNSCHETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSCHET", DbType="DateTime")]
		public System.Nullable<System.DateTime> DSCHET
		{
			get
			{
				return this._DSCHET;
			}
			set
			{
				if ((this._DSCHET != value))
				{
					this.OnDSCHETChanging(value);
					this.SendPropertyChanging();
					this._DSCHET = value;
					this.SendPropertyChanged("DSCHET");
					this.OnDSCHETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLAT", DbType="NVarChar(5)")]
		public string PLAT
		{
			get
			{
				return this._PLAT;
			}
			set
			{
				if ((this._PLAT != value))
				{
					this.OnPLATChanging(value);
					this.SendPropertyChanging();
					this._PLAT = value;
					this.SendPropertyChanged("PLAT");
					this.OnPLATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPU_ID", DbType="Decimal(16,0)")]
		public System.Nullable<decimal> LPU_ID
		{
			get
			{
				return this._LPU_ID;
			}
			set
			{
				if ((this._LPU_ID != value))
				{
					this.OnLPU_IDChanging(value);
					this.SendPropertyChanging();
					this._LPU_ID = value;
					this.SendPropertyChanged("LPU_ID");
					this.OnLPU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPOLIS", DbType="NVarChar(30)")]
		public string NPOLIS
		{
			get
			{
				return this._NPOLIS;
			}
			set
			{
				if ((this._NPOLIS != value))
				{
					this.OnNPOLISChanging(value);
					this.SendPropertyChanging();
					this._NPOLIS = value;
					this.SendPropertyChanged("NPOLIS");
					this.OnNPOLISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USL_OK", DbType="Int")]
		public System.Nullable<int> USL_OK
		{
			get
			{
				return this._USL_OK;
			}
			set
			{
				if ((this._USL_OK != value))
				{
					this.OnUSL_OKChanging(value);
					this.SendPropertyChanging();
					this._USL_OK = value;
					this.SendPropertyChanged("USL_OK");
					this.OnUSL_OKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROFIL", DbType="Int")]
		public System.Nullable<int> PROFIL
		{
			get
			{
				return this._PROFIL;
			}
			set
			{
				if ((this._PROFIL != value))
				{
					this.OnPROFILChanging(value);
					this.SendPropertyChanging();
					this._PROFIL = value;
					this.SendPropertyChanged("PROFIL");
					this.OnPROFILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS1", DbType="NVarChar(10)")]
		public string DS1
		{
			get
			{
				return this._DS1;
			}
			set
			{
				if ((this._DS1 != value))
				{
					this.OnDS1Changing(value);
					this.SendPropertyChanging();
					this._DS1 = value;
					this.SendPropertyChanged("DS1");
					this.OnDS1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_1", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_1
		{
			get
			{
				return this._DATE_1;
			}
			set
			{
				if ((this._DATE_1 != value))
				{
					this.OnDATE_1Changing(value);
					this.SendPropertyChanging();
					this._DATE_1 = value;
					this.SendPropertyChanged("DATE_1");
					this.OnDATE_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_2", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_2
		{
			get
			{
				return this._DATE_2;
			}
			set
			{
				if ((this._DATE_2 != value))
				{
					this.OnDATE_2Changing(value);
					this.SendPropertyChanging();
					this._DATE_2 = value;
					this.SendPropertyChanged("DATE_2");
					this.OnDATE_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLUCH_TYPE", DbType="Int")]
		public System.Nullable<int> SLUCH_TYPE
		{
			get
			{
				return this._SLUCH_TYPE;
			}
			set
			{
				if ((this._SLUCH_TYPE != value))
				{
					this.OnSLUCH_TYPEChanging(value);
					this.SendPropertyChanging();
					this._SLUCH_TYPE = value;
					this.SendPropertyChanged("SLUCH_TYPE");
					this.OnSLUCH_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS_SLUCH_REGION", DbType="Int")]
		public System.Nullable<int> OS_SLUCH_REGION
		{
			get
			{
				return this._OS_SLUCH_REGION;
			}
			set
			{
				if ((this._OS_SLUCH_REGION != value))
				{
					this.OnOS_SLUCH_REGIONChanging(value);
					this.SendPropertyChanging();
					this._OS_SLUCH_REGION = value;
					this.SendPropertyChanged("OS_SLUCH_REGION");
					this.OnOS_SLUCH_REGIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NHISTORY", DbType="NVarChar(50)")]
		public string NHISTORY
		{
			get
			{
				return this._NHISTORY;
			}
			set
			{
				if ((this._NHISTORY != value))
				{
					this.OnNHISTORYChanging(value);
					this.SendPropertyChanging();
					this._NHISTORY = value;
					this.SendPropertyChanged("NHISTORY");
					this.OnNHISTORYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSLG", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDSLG
		{
			get
			{
				return this._IDSLG;
			}
			set
			{
				if ((this._IDSLG != value))
				{
					this.OnIDSLGChanging(value);
					this.SendPropertyChanging();
					this._IDSLG = value;
					this.SendPropertyChanged("IDSLG");
					this.OnIDSLGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_CODE", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> S_CODE
		{
			get
			{
				return this._S_CODE;
			}
			set
			{
				if ((this._S_CODE != value))
				{
					this.OnS_CODEChanging(value);
					this.SendPropertyChanging();
					this._S_CODE = value;
					this.SendPropertyChanged("S_CODE");
					this.OnS_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_EXP_CODE", DbType="Decimal(7,0)")]
		public System.Nullable<decimal> S_EXP_CODE
		{
			get
			{
				return this._S_EXP_CODE;
			}
			set
			{
				if ((this._S_EXP_CODE != value))
				{
					this.OnS_EXP_CODEChanging(value);
					this.SendPropertyChanging();
					this._S_EXP_CODE = value;
					this.SendPropertyChanged("S_EXP_CODE");
					this.OnS_EXP_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_SUM", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> S_SUM
		{
			get
			{
				return this._S_SUM;
			}
			set
			{
				if ((this._S_SUM != value))
				{
					this.OnS_SUMChanging(value);
					this.SendPropertyChanging();
					this._S_SUM = value;
					this.SendPropertyChanged("S_SUM");
					this.OnS_SUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_TIP", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> S_TIP
		{
			get
			{
				return this._S_TIP;
			}
			set
			{
				if ((this._S_TIP != value))
				{
					this.OnS_TIPChanging(value);
					this.SendPropertyChanging();
					this._S_TIP = value;
					this.SendPropertyChanged("S_TIP");
					this.OnS_TIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_OSN", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> S_OSN
		{
			get
			{
				return this._S_OSN;
			}
			set
			{
				if ((this._S_OSN != value))
				{
					this.OnS_OSNChanging(value);
					this.SendPropertyChanging();
					this._S_OSN = value;
					this.SendPropertyChanged("S_OSN");
					this.OnS_OSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_OSN_TS", DbType="NVarChar(20)")]
		public string S_OSN_TS
		{
			get
			{
				return this._S_OSN_TS;
			}
			set
			{
				if ((this._S_OSN_TS != value))
				{
					this.OnS_OSN_TSChanging(value);
					this.SendPropertyChanging();
					this._S_OSN_TS = value;
					this.SendPropertyChanged("S_OSN_TS");
					this.OnS_OSN_TSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_COM", DbType="NVarChar(2000)")]
		public string S_COM
		{
			get
			{
				return this._S_COM;
			}
			set
			{
				if ((this._S_COM != value))
				{
					this.OnS_COMChanging(value);
					this.SendPropertyChanging();
					this._S_COM = value;
					this.SendPropertyChanged("S_COM");
					this.OnS_COMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> S_DATE
		{
			get
			{
				return this._S_DATE;
			}
			set
			{
				if ((this._S_DATE != value))
				{
					this.OnS_DATEChanging(value);
					this.SendPropertyChanging();
					this._S_DATE = value;
					this.SendPropertyChanged("S_DATE");
					this.OnS_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_ZAKL", DbType="NVarChar(2000)")]
		public string S_ZAKL
		{
			get
			{
				return this._S_ZAKL;
			}
			set
			{
				if ((this._S_ZAKL != value))
				{
					this.OnS_ZAKLChanging(value);
					this.SendPropertyChanging();
					this._S_ZAKL = value;
					this.SendPropertyChanged("S_ZAKL");
					this.OnS_ZAKLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_IST", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> S_IST
		{
			get
			{
				return this._S_IST;
			}
			set
			{
				if ((this._S_IST != value))
				{
					this.OnS_ISTChanging(value);
					this.SendPropertyChanging();
					this._S_IST = value;
					this.SendPropertyChanged("S_IST");
					this.OnS_ISTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLID", DbType="Int")]
		public System.Nullable<int> SLID
		{
			get
			{
				return this._SLID;
			}
			set
			{
				if ((this._SLID != value))
				{
					this.OnSLIDChanging(value);
					this.SendPropertyChanging();
					this._SLID = value;
					this.SendPropertyChanged("SLID");
					this.OnSLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHET_ID", DbType="Int")]
		public System.Nullable<int> SCHET_ID
		{
			get
			{
				return this._SCHET_ID;
			}
			set
			{
				if ((this._SCHET_ID != value))
				{
					this.OnSCHET_IDChanging(value);
					this.SendPropertyChanging();
					this._SCHET_ID = value;
					this.SendPropertyChanged("SCHET_ID");
					this.OnSCHET_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMENT", DbType="NVarChar(200)")]
		public string COMENT
		{
			get
			{
				return this._COMENT;
			}
			set
			{
				if ((this._COMENT != value))
				{
					this.OnCOMENTChanging(value);
					this.SendPropertyChanging();
					this._COMENT = value;
					this.SendPropertyChanged("COMENT");
					this.OnCOMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isUpdate", DbType="Bit")]
		public System.Nullable<bool> isUpdate
		{
			get
			{
				return this._isUpdate;
			}
			set
			{
				if ((this._isUpdate != value))
				{
					this.OnisUpdateChanging(value);
					this.SendPropertyChanging();
					this._isUpdate = value;
					this.SendPropertyChanged("isUpdate");
					this.OnisUpdateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CalcKsgTarif")]
	public partial class CalcKsgTarif : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDKSG;
		
		private System.Nullable<int> _SSL;
		
		private System.Nullable<decimal> _KZ;
		
		private System.Nullable<decimal> _TARIF;
		
		private System.DateTime _DBEG;
		
		private System.DateTime _DEND;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDKSGChanging(System.Nullable<int> value);
    partial void OnIDKSGChanged();
    partial void OnSSLChanging(System.Nullable<int> value);
    partial void OnSSLChanged();
    partial void OnKZChanging(System.Nullable<decimal> value);
    partial void OnKZChanged();
    partial void OnTARIFChanging(System.Nullable<decimal> value);
    partial void OnTARIFChanged();
    partial void OnDBEGChanging(System.DateTime value);
    partial void OnDBEGChanged();
    partial void OnDENDChanging(System.DateTime value);
    partial void OnDENDChanged();
    #endregion
		
		public CalcKsgTarif()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKSG", DbType="Int")]
		public System.Nullable<int> IDKSG
		{
			get
			{
				return this._IDKSG;
			}
			set
			{
				if ((this._IDKSG != value))
				{
					this.OnIDKSGChanging(value);
					this.SendPropertyChanging();
					this._IDKSG = value;
					this.SendPropertyChanged("IDKSG");
					this.OnIDKSGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSL", DbType="Int")]
		public System.Nullable<int> SSL
		{
			get
			{
				return this._SSL;
			}
			set
			{
				if ((this._SSL != value))
				{
					this.OnSSLChanging(value);
					this.SendPropertyChanging();
					this._SSL = value;
					this.SendPropertyChanged("SSL");
					this.OnSSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KZ", DbType="Decimal(6,4)")]
		public System.Nullable<decimal> KZ
		{
			get
			{
				return this._KZ;
			}
			set
			{
				if ((this._KZ != value))
				{
					this.OnKZChanging(value);
					this.SendPropertyChanging();
					this._KZ = value;
					this.SendPropertyChanged("KZ");
					this.OnKZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> TARIF
		{
			get
			{
				return this._TARIF;
			}
			set
			{
				if ((this._TARIF != value))
				{
					this.OnTARIFChanging(value);
					this.SendPropertyChanging();
					this._TARIF = value;
					this.SendPropertyChanged("TARIF");
					this.OnTARIFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBEG", DbType="DateTime NOT NULL")]
		public System.DateTime DBEG
		{
			get
			{
				return this._DBEG;
			}
			set
			{
				if ((this._DBEG != value))
				{
					this.OnDBEGChanging(value);
					this.SendPropertyChanging();
					this._DBEG = value;
					this.SendPropertyChanged("DBEG");
					this.OnDBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEND", DbType="DateTime NOT NULL")]
		public System.DateTime DEND
		{
			get
			{
				return this._DEND;
			}
			set
			{
				if ((this._DEND != value))
				{
					this.OnDENDChanging(value);
					this.SendPropertyChanging();
					this._DEND = value;
					this.SendPropertyChanged("DEND");
					this.OnDENDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SprKsg")]
	public partial class SprKsg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _KSGNUM;
		
		private string _KSGNAME;
		
		private System.Nullable<decimal> _STYPE;
		
		private System.Nullable<System.DateTime> _DBEG;
		
		private System.Nullable<System.DateTime> _DEND;
		
		private string _NameWithID;
		
		private EntitySet<CalcUprk> _CalcUprk;
		
		private EntitySet<CalNotKus> _CalNotKus;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnKSGNUMChanging(string value);
    partial void OnKSGNUMChanged();
    partial void OnKSGNAMEChanging(string value);
    partial void OnKSGNAMEChanged();
    partial void OnSTYPEChanging(System.Nullable<decimal> value);
    partial void OnSTYPEChanged();
    partial void OnDBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnDBEGChanged();
    partial void OnDENDChanging(System.Nullable<System.DateTime> value);
    partial void OnDENDChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    #endregion
		
		public SprKsg()
		{
			this._CalcUprk = new EntitySet<CalcUprk>(new Action<CalcUprk>(this.attach_CalcUprk), new Action<CalcUprk>(this.detach_CalcUprk));
			this._CalNotKus = new EntitySet<CalNotKus>(new Action<CalNotKus>(this.attach_CalNotKus), new Action<CalNotKus>(this.detach_CalNotKus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSGNUM", DbType="NVarChar(6)")]
		public string KSGNUM
		{
			get
			{
				return this._KSGNUM;
			}
			set
			{
				if ((this._KSGNUM != value))
				{
					this.OnKSGNUMChanging(value);
					this.SendPropertyChanging();
					this._KSGNUM = value;
					this.SendPropertyChanged("KSGNUM");
					this.OnKSGNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSGNAME", DbType="NVarChar(255)")]
		public string KSGNAME
		{
			get
			{
				return this._KSGNAME;
			}
			set
			{
				if ((this._KSGNAME != value))
				{
					this.OnKSGNAMEChanging(value);
					this.SendPropertyChanging();
					this._KSGNAME = value;
					this.SendPropertyChanged("KSGNAME");
					this.OnKSGNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STYPE", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> STYPE
		{
			get
			{
				return this._STYPE;
			}
			set
			{
				if ((this._STYPE != value))
				{
					this.OnSTYPEChanging(value);
					this.SendPropertyChanging();
					this._STYPE = value;
					this.SendPropertyChanged("STYPE");
					this.OnSTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBEG", DbType="DateTime")]
		public System.Nullable<System.DateTime> DBEG
		{
			get
			{
				return this._DBEG;
			}
			set
			{
				if ((this._DBEG != value))
				{
					this.OnDBEGChanging(value);
					this.SendPropertyChanging();
					this._DBEG = value;
					this.SendPropertyChanged("DBEG");
					this.OnDBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEND", DbType="DateTime")]
		public System.Nullable<System.DateTime> DEND
		{
			get
			{
				return this._DEND;
			}
			set
			{
				if ((this._DEND != value))
				{
					this.OnDENDChanging(value);
					this.SendPropertyChanging();
					this._DEND = value;
					this.SendPropertyChanged("DEND");
					this.OnDENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(272)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprKsg_CalcUprk", Storage="_CalcUprk", ThisKey="ID", OtherKey="IDKSG")]
		public EntitySet<CalcUprk> CalcUprk
		{
			get
			{
				return this._CalcUprk;
			}
			set
			{
				this._CalcUprk.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprKsg_CalNotKus", Storage="_CalNotKus", ThisKey="ID", OtherKey="IDKSG")]
		public EntitySet<CalNotKus> CalNotKus
		{
			get
			{
				return this._CalNotKus;
			}
			set
			{
				this._CalNotKus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CalcUprk(CalcUprk entity)
		{
			this.SendPropertyChanging();
			entity.SprKsg = this;
		}
		
		private void detach_CalcUprk(CalcUprk entity)
		{
			this.SendPropertyChanging();
			entity.SprKsg = null;
		}
		
		private void attach_CalNotKus(CalNotKus entity)
		{
			this.SendPropertyChanging();
			entity.SprKsg = this;
		}
		
		private void detach_CalNotKus(CalNotKus entity)
		{
			this.SendPropertyChanging();
			entity.SprKsg = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PACIENT")]
	public partial class PACIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ID_PAC;
		
		private string _FAM;
		
		private string _IM;
		
		private string _OT;
		
		private System.Nullable<int> _W;
		
		private System.Nullable<System.DateTime> _DR;
		
		private System.Nullable<int> _DOST;
		
		private string _FAM_P;
		
		private string _IM_P;
		
		private string _OT_P;
		
		private System.Nullable<int> _W_P;
		
		private System.Nullable<System.DateTime> _DR_P;
		
		private string _MR;
		
		private System.Nullable<int> _DOCTYPE;
		
		private string _DOCSER;
		
		private string _DOCNUM;
		
		private string _SNILS;
		
		private string _OKATOG;
		
		private string _OKATOP;
		
		private string _COMENTP;
		
		private System.Nullable<int> _VPOLIS;
		
		private string _SPOLIS;
		
		private string _NPOLIS;
		
		private string _SMO;
		
		private string _SMO_OGRN;
		
		private string _SMO_OK;
		
		private string _SMO_NAM;
		
		private string _NOVOR;
		
		private int _SCHET_ID;
		
		private System.Nullable<int> _KOD_TER;
		
		private System.Nullable<int> _SOC_STAT;
		
		private System.Nullable<int> _KAT_LGOT;
		
		private System.Nullable<System.Guid> _Region;
		
		private System.Nullable<System.Guid> _Rn;
		
		private System.Nullable<System.Guid> _City;
		
		private System.Nullable<System.Guid> _CityRn;
		
		private System.Nullable<System.Guid> _NasPun;
		
		private System.Nullable<System.Guid> _Ul;
		
		private System.Nullable<System.Guid> _DopUl;
		
		private string _House;
		
		private string _CustomHouse;
		
		private System.Nullable<int> _N_ZAP;
		
		private System.Nullable<decimal> _PR_NOV;
		
		private System.Nullable<int> _DOST_P;
		
		private EntitySet<AKT_EKMP_TBL> _AKT_EKMP_TBL;
		
		private EntitySet<AKT_MEE_TBL> _AKT_MEE_TBL;
		
		private EntitySet<SLUCH> _SLUCH;
		
		private EntityRef<F002> _F002;
		
		private EntityRef<F008> _F008;
		
		private EntityRef<F010> _F010;
		
		private EntityRef<F011> _F011;
		
		private EntityRef<KatLgot> _KatLgot;
		
		private EntityRef<KodTer> _KodTer;
		
		private EntityRef<SocStat> _SocStat;
		
		private EntityRef<V005> _V005;
		
		private EntityRef<V005> _V0051;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_PACChanging(string value);
    partial void OnID_PACChanged();
    partial void OnFAMChanging(string value);
    partial void OnFAMChanged();
    partial void OnIMChanging(string value);
    partial void OnIMChanged();
    partial void OnOTChanging(string value);
    partial void OnOTChanged();
    partial void OnWChanging(System.Nullable<int> value);
    partial void OnWChanged();
    partial void OnDRChanging(System.Nullable<System.DateTime> value);
    partial void OnDRChanged();
    partial void OnDOSTChanging(System.Nullable<int> value);
    partial void OnDOSTChanged();
    partial void OnFAM_PChanging(string value);
    partial void OnFAM_PChanged();
    partial void OnIM_PChanging(string value);
    partial void OnIM_PChanged();
    partial void OnOT_PChanging(string value);
    partial void OnOT_PChanged();
    partial void OnW_PChanging(System.Nullable<int> value);
    partial void OnW_PChanged();
    partial void OnDR_PChanging(System.Nullable<System.DateTime> value);
    partial void OnDR_PChanged();
    partial void OnMRChanging(string value);
    partial void OnMRChanged();
    partial void OnDOCTYPEChanging(System.Nullable<int> value);
    partial void OnDOCTYPEChanged();
    partial void OnDOCSERChanging(string value);
    partial void OnDOCSERChanged();
    partial void OnDOCNUMChanging(string value);
    partial void OnDOCNUMChanged();
    partial void OnSNILSChanging(string value);
    partial void OnSNILSChanged();
    partial void OnOKATOGChanging(string value);
    partial void OnOKATOGChanged();
    partial void OnOKATOPChanging(string value);
    partial void OnOKATOPChanged();
    partial void OnCOMENTPChanging(string value);
    partial void OnCOMENTPChanged();
    partial void OnVPOLISChanging(System.Nullable<int> value);
    partial void OnVPOLISChanged();
    partial void OnSPOLISChanging(string value);
    partial void OnSPOLISChanged();
    partial void OnNPOLISChanging(string value);
    partial void OnNPOLISChanged();
    partial void OnSMOChanging(string value);
    partial void OnSMOChanged();
    partial void OnSMO_OGRNChanging(string value);
    partial void OnSMO_OGRNChanged();
    partial void OnSMO_OKChanging(string value);
    partial void OnSMO_OKChanged();
    partial void OnSMO_NAMChanging(string value);
    partial void OnSMO_NAMChanged();
    partial void OnNOVORChanging(string value);
    partial void OnNOVORChanged();
    partial void OnSCHET_IDChanging(int value);
    partial void OnSCHET_IDChanged();
    partial void OnKOD_TERChanging(System.Nullable<int> value);
    partial void OnKOD_TERChanged();
    partial void OnSOC_STATChanging(System.Nullable<int> value);
    partial void OnSOC_STATChanged();
    partial void OnKAT_LGOTChanging(System.Nullable<int> value);
    partial void OnKAT_LGOTChanged();
    partial void OnRegionChanging(System.Nullable<System.Guid> value);
    partial void OnRegionChanged();
    partial void OnRnChanging(System.Nullable<System.Guid> value);
    partial void OnRnChanged();
    partial void OnCityChanging(System.Nullable<System.Guid> value);
    partial void OnCityChanged();
    partial void OnCityRnChanging(System.Nullable<System.Guid> value);
    partial void OnCityRnChanged();
    partial void OnNasPunChanging(System.Nullable<System.Guid> value);
    partial void OnNasPunChanged();
    partial void OnUlChanging(System.Nullable<System.Guid> value);
    partial void OnUlChanged();
    partial void OnDopUlChanging(System.Nullable<System.Guid> value);
    partial void OnDopUlChanged();
    partial void OnHouseChanging(string value);
    partial void OnHouseChanged();
    partial void OnCustomHouseChanging(string value);
    partial void OnCustomHouseChanged();
    partial void OnN_ZAPChanging(System.Nullable<int> value);
    partial void OnN_ZAPChanged();
    partial void OnPR_NOVChanging(System.Nullable<decimal> value);
    partial void OnPR_NOVChanged();
    partial void OnDOST_PChanging(System.Nullable<int> value);
    partial void OnDOST_PChanged();
    #endregion
		
		public PACIENT()
		{
			this._AKT_EKMP_TBL = new EntitySet<AKT_EKMP_TBL>(new Action<AKT_EKMP_TBL>(this.attach_AKT_EKMP_TBL), new Action<AKT_EKMP_TBL>(this.detach_AKT_EKMP_TBL));
			this._AKT_MEE_TBL = new EntitySet<AKT_MEE_TBL>(new Action<AKT_MEE_TBL>(this.attach_AKT_MEE_TBL), new Action<AKT_MEE_TBL>(this.detach_AKT_MEE_TBL));
			this._SLUCH = new EntitySet<SLUCH>(new Action<SLUCH>(this.attach_SLUCH), new Action<SLUCH>(this.detach_SLUCH));
			this._F002 = default(EntityRef<F002>);
			this._F008 = default(EntityRef<F008>);
			this._F010 = default(EntityRef<F010>);
			this._F011 = default(EntityRef<F011>);
			this._KatLgot = default(EntityRef<KatLgot>);
			this._KodTer = default(EntityRef<KodTer>);
			this._SocStat = default(EntityRef<SocStat>);
			this._V005 = default(EntityRef<V005>);
			this._V0051 = default(EntityRef<V005>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PAC", DbType="NVarChar(36)")]
		public string ID_PAC
		{
			get
			{
				return this._ID_PAC;
			}
			set
			{
				if ((this._ID_PAC != value))
				{
					this.OnID_PACChanging(value);
					this.SendPropertyChanging();
					this._ID_PAC = value;
					this.SendPropertyChanged("ID_PAC");
					this.OnID_PACChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAM", DbType="NVarChar(40)")]
		public string FAM
		{
			get
			{
				return this._FAM;
			}
			set
			{
				if ((this._FAM != value))
				{
					this.OnFAMChanging(value);
					this.SendPropertyChanging();
					this._FAM = value;
					this.SendPropertyChanged("FAM");
					this.OnFAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IM", DbType="NVarChar(40)")]
		public string IM
		{
			get
			{
				return this._IM;
			}
			set
			{
				if ((this._IM != value))
				{
					this.OnIMChanging(value);
					this.SendPropertyChanging();
					this._IM = value;
					this.SendPropertyChanged("IM");
					this.OnIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT", DbType="NVarChar(40)")]
		public string OT
		{
			get
			{
				return this._OT;
			}
			set
			{
				if ((this._OT != value))
				{
					this.OnOTChanging(value);
					this.SendPropertyChanging();
					this._OT = value;
					this.SendPropertyChanged("OT");
					this.OnOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_W", DbType="Int")]
		public System.Nullable<int> W
		{
			get
			{
				return this._W;
			}
			set
			{
				if ((this._W != value))
				{
					if (this._V005.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWChanging(value);
					this.SendPropertyChanging();
					this._W = value;
					this.SendPropertyChanged("W");
					this.OnWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DR", DbType="DateTime")]
		public System.Nullable<System.DateTime> DR
		{
			get
			{
				return this._DR;
			}
			set
			{
				if ((this._DR != value))
				{
					this.OnDRChanging(value);
					this.SendPropertyChanging();
					this._DR = value;
					this.SendPropertyChanged("DR");
					this.OnDRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOST", DbType="Int")]
		public System.Nullable<int> DOST
		{
			get
			{
				return this._DOST;
			}
			set
			{
				if ((this._DOST != value))
				{
					this.OnDOSTChanging(value);
					this.SendPropertyChanging();
					this._DOST = value;
					this.SendPropertyChanged("DOST");
					this.OnDOSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAM_P", DbType="NVarChar(40)")]
		public string FAM_P
		{
			get
			{
				return this._FAM_P;
			}
			set
			{
				if ((this._FAM_P != value))
				{
					this.OnFAM_PChanging(value);
					this.SendPropertyChanging();
					this._FAM_P = value;
					this.SendPropertyChanged("FAM_P");
					this.OnFAM_PChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IM_P", DbType="NVarChar(40)")]
		public string IM_P
		{
			get
			{
				return this._IM_P;
			}
			set
			{
				if ((this._IM_P != value))
				{
					this.OnIM_PChanging(value);
					this.SendPropertyChanging();
					this._IM_P = value;
					this.SendPropertyChanged("IM_P");
					this.OnIM_PChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OT_P", DbType="NVarChar(40)")]
		public string OT_P
		{
			get
			{
				return this._OT_P;
			}
			set
			{
				if ((this._OT_P != value))
				{
					this.OnOT_PChanging(value);
					this.SendPropertyChanging();
					this._OT_P = value;
					this.SendPropertyChanged("OT_P");
					this.OnOT_PChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_W_P", DbType="Int")]
		public System.Nullable<int> W_P
		{
			get
			{
				return this._W_P;
			}
			set
			{
				if ((this._W_P != value))
				{
					if (this._V0051.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnW_PChanging(value);
					this.SendPropertyChanging();
					this._W_P = value;
					this.SendPropertyChanged("W_P");
					this.OnW_PChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DR_P", DbType="DateTime")]
		public System.Nullable<System.DateTime> DR_P
		{
			get
			{
				return this._DR_P;
			}
			set
			{
				if ((this._DR_P != value))
				{
					this.OnDR_PChanging(value);
					this.SendPropertyChanging();
					this._DR_P = value;
					this.SendPropertyChanged("DR_P");
					this.OnDR_PChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MR", DbType="NVarChar(100)")]
		public string MR
		{
			get
			{
				return this._MR;
			}
			set
			{
				if ((this._MR != value))
				{
					this.OnMRChanging(value);
					this.SendPropertyChanging();
					this._MR = value;
					this.SendPropertyChanged("MR");
					this.OnMRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCTYPE", DbType="Int")]
		public System.Nullable<int> DOCTYPE
		{
			get
			{
				return this._DOCTYPE;
			}
			set
			{
				if ((this._DOCTYPE != value))
				{
					if (this._F011.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDOCTYPEChanging(value);
					this.SendPropertyChanging();
					this._DOCTYPE = value;
					this.SendPropertyChanged("DOCTYPE");
					this.OnDOCTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCSER", DbType="NVarChar(10)")]
		public string DOCSER
		{
			get
			{
				return this._DOCSER;
			}
			set
			{
				if ((this._DOCSER != value))
				{
					this.OnDOCSERChanging(value);
					this.SendPropertyChanging();
					this._DOCSER = value;
					this.SendPropertyChanged("DOCSER");
					this.OnDOCSERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCNUM", DbType="NVarChar(20)")]
		public string DOCNUM
		{
			get
			{
				return this._DOCNUM;
			}
			set
			{
				if ((this._DOCNUM != value))
				{
					this.OnDOCNUMChanging(value);
					this.SendPropertyChanging();
					this._DOCNUM = value;
					this.SendPropertyChanged("DOCNUM");
					this.OnDOCNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNILS", DbType="NVarChar(14)")]
		public string SNILS
		{
			get
			{
				return this._SNILS;
			}
			set
			{
				if ((this._SNILS != value))
				{
					this.OnSNILSChanging(value);
					this.SendPropertyChanging();
					this._SNILS = value;
					this.SendPropertyChanged("SNILS");
					this.OnSNILSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKATOG", DbType="NVarChar(11)")]
		public string OKATOG
		{
			get
			{
				return this._OKATOG;
			}
			set
			{
				if ((this._OKATOG != value))
				{
					this.OnOKATOGChanging(value);
					this.SendPropertyChanging();
					this._OKATOG = value;
					this.SendPropertyChanged("OKATOG");
					this.OnOKATOGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKATOP", DbType="NVarChar(11)")]
		public string OKATOP
		{
			get
			{
				return this._OKATOP;
			}
			set
			{
				if ((this._OKATOP != value))
				{
					this.OnOKATOPChanging(value);
					this.SendPropertyChanging();
					this._OKATOP = value;
					this.SendPropertyChanged("OKATOP");
					this.OnOKATOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMENTP", DbType="NVarChar(250)")]
		public string COMENTP
		{
			get
			{
				return this._COMENTP;
			}
			set
			{
				if ((this._COMENTP != value))
				{
					this.OnCOMENTPChanging(value);
					this.SendPropertyChanging();
					this._COMENTP = value;
					this.SendPropertyChanged("COMENTP");
					this.OnCOMENTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VPOLIS", DbType="Int")]
		public System.Nullable<int> VPOLIS
		{
			get
			{
				return this._VPOLIS;
			}
			set
			{
				if ((this._VPOLIS != value))
				{
					if (this._F008.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVPOLISChanging(value);
					this.SendPropertyChanging();
					this._VPOLIS = value;
					this.SendPropertyChanged("VPOLIS");
					this.OnVPOLISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPOLIS", DbType="NVarChar(10)")]
		public string SPOLIS
		{
			get
			{
				return this._SPOLIS;
			}
			set
			{
				if ((this._SPOLIS != value))
				{
					this.OnSPOLISChanging(value);
					this.SendPropertyChanging();
					this._SPOLIS = value;
					this.SendPropertyChanged("SPOLIS");
					this.OnSPOLISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPOLIS", DbType="NVarChar(20)")]
		public string NPOLIS
		{
			get
			{
				return this._NPOLIS;
			}
			set
			{
				if ((this._NPOLIS != value))
				{
					this.OnNPOLISChanging(value);
					this.SendPropertyChanging();
					this._NPOLIS = value;
					this.SendPropertyChanged("NPOLIS");
					this.OnNPOLISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMO", DbType="NVarChar(5)")]
		public string SMO
		{
			get
			{
				return this._SMO;
			}
			set
			{
				if ((this._SMO != value))
				{
					if (this._F002.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSMOChanging(value);
					this.SendPropertyChanging();
					this._SMO = value;
					this.SendPropertyChanged("SMO");
					this.OnSMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMO_OGRN", DbType="NVarChar(15)")]
		public string SMO_OGRN
		{
			get
			{
				return this._SMO_OGRN;
			}
			set
			{
				if ((this._SMO_OGRN != value))
				{
					this.OnSMO_OGRNChanging(value);
					this.SendPropertyChanging();
					this._SMO_OGRN = value;
					this.SendPropertyChanged("SMO_OGRN");
					this.OnSMO_OGRNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMO_OK", DbType="NVarChar(5)")]
		public string SMO_OK
		{
			get
			{
				return this._SMO_OK;
			}
			set
			{
				if ((this._SMO_OK != value))
				{
					if (this._F010.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSMO_OKChanging(value);
					this.SendPropertyChanging();
					this._SMO_OK = value;
					this.SendPropertyChanged("SMO_OK");
					this.OnSMO_OKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMO_NAM", DbType="NVarChar(100)")]
		public string SMO_NAM
		{
			get
			{
				return this._SMO_NAM;
			}
			set
			{
				if ((this._SMO_NAM != value))
				{
					this.OnSMO_NAMChanging(value);
					this.SendPropertyChanging();
					this._SMO_NAM = value;
					this.SendPropertyChanged("SMO_NAM");
					this.OnSMO_NAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOVOR", DbType="NVarChar(9)")]
		public string NOVOR
		{
			get
			{
				return this._NOVOR;
			}
			set
			{
				if ((this._NOVOR != value))
				{
					this.OnNOVORChanging(value);
					this.SendPropertyChanging();
					this._NOVOR = value;
					this.SendPropertyChanged("NOVOR");
					this.OnNOVORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHET_ID", DbType="Int NOT NULL")]
		public int SCHET_ID
		{
			get
			{
				return this._SCHET_ID;
			}
			set
			{
				if ((this._SCHET_ID != value))
				{
					this.OnSCHET_IDChanging(value);
					this.SendPropertyChanging();
					this._SCHET_ID = value;
					this.SendPropertyChanged("SCHET_ID");
					this.OnSCHET_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KOD_TER", DbType="Int")]
		public System.Nullable<int> KOD_TER
		{
			get
			{
				return this._KOD_TER;
			}
			set
			{
				if ((this._KOD_TER != value))
				{
					if (this._KodTer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKOD_TERChanging(value);
					this.SendPropertyChanging();
					this._KOD_TER = value;
					this.SendPropertyChanged("KOD_TER");
					this.OnKOD_TERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOC_STAT", DbType="Int")]
		public System.Nullable<int> SOC_STAT
		{
			get
			{
				return this._SOC_STAT;
			}
			set
			{
				if ((this._SOC_STAT != value))
				{
					if (this._SocStat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSOC_STATChanging(value);
					this.SendPropertyChanging();
					this._SOC_STAT = value;
					this.SendPropertyChanged("SOC_STAT");
					this.OnSOC_STATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KAT_LGOT", DbType="Int")]
		public System.Nullable<int> KAT_LGOT
		{
			get
			{
				return this._KAT_LGOT;
			}
			set
			{
				if ((this._KAT_LGOT != value))
				{
					if (this._KatLgot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKAT_LGOTChanging(value);
					this.SendPropertyChanging();
					this._KAT_LGOT = value;
					this.SendPropertyChanged("KAT_LGOT");
					this.OnKAT_LGOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rn", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Rn
		{
			get
			{
				return this._Rn;
			}
			set
			{
				if ((this._Rn != value))
				{
					this.OnRnChanging(value);
					this.SendPropertyChanging();
					this._Rn = value;
					this.SendPropertyChanged("Rn");
					this.OnRnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityRn", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CityRn
		{
			get
			{
				return this._CityRn;
			}
			set
			{
				if ((this._CityRn != value))
				{
					this.OnCityRnChanging(value);
					this.SendPropertyChanging();
					this._CityRn = value;
					this.SendPropertyChanged("CityRn");
					this.OnCityRnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NasPun", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> NasPun
		{
			get
			{
				return this._NasPun;
			}
			set
			{
				if ((this._NasPun != value))
				{
					this.OnNasPunChanging(value);
					this.SendPropertyChanging();
					this._NasPun = value;
					this.SendPropertyChanged("NasPun");
					this.OnNasPunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ul", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Ul
		{
			get
			{
				return this._Ul;
			}
			set
			{
				if ((this._Ul != value))
				{
					this.OnUlChanging(value);
					this.SendPropertyChanging();
					this._Ul = value;
					this.SendPropertyChanged("Ul");
					this.OnUlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DopUl", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DopUl
		{
			get
			{
				return this._DopUl;
			}
			set
			{
				if ((this._DopUl != value))
				{
					this.OnDopUlChanging(value);
					this.SendPropertyChanging();
					this._DopUl = value;
					this.SendPropertyChanged("DopUl");
					this.OnDopUlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_House", DbType="NVarChar(50)")]
		public string House
		{
			get
			{
				return this._House;
			}
			set
			{
				if ((this._House != value))
				{
					this.OnHouseChanging(value);
					this.SendPropertyChanging();
					this._House = value;
					this.SendPropertyChanged("House");
					this.OnHouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomHouse", DbType="NVarChar(50)")]
		public string CustomHouse
		{
			get
			{
				return this._CustomHouse;
			}
			set
			{
				if ((this._CustomHouse != value))
				{
					this.OnCustomHouseChanging(value);
					this.SendPropertyChanging();
					this._CustomHouse = value;
					this.SendPropertyChanged("CustomHouse");
					this.OnCustomHouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N_ZAP", DbType="Int")]
		public System.Nullable<int> N_ZAP
		{
			get
			{
				return this._N_ZAP;
			}
			set
			{
				if ((this._N_ZAP != value))
				{
					this.OnN_ZAPChanging(value);
					this.SendPropertyChanging();
					this._N_ZAP = value;
					this.SendPropertyChanged("N_ZAP");
					this.OnN_ZAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_NOV", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> PR_NOV
		{
			get
			{
				return this._PR_NOV;
			}
			set
			{
				if ((this._PR_NOV != value))
				{
					this.OnPR_NOVChanging(value);
					this.SendPropertyChanging();
					this._PR_NOV = value;
					this.SendPropertyChanged("PR_NOV");
					this.OnPR_NOVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOST_P", DbType="Int")]
		public System.Nullable<int> DOST_P
		{
			get
			{
				return this._DOST_P;
			}
			set
			{
				if ((this._DOST_P != value))
				{
					this.OnDOST_PChanging(value);
					this.SendPropertyChanging();
					this._DOST_P = value;
					this.SendPropertyChanged("DOST_P");
					this.OnDOST_PChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENT_AKT_EKMP_TBL", Storage="_AKT_EKMP_TBL", ThisKey="ID", OtherKey="PID")]
		public EntitySet<AKT_EKMP_TBL> AKT_EKMP_TBL
		{
			get
			{
				return this._AKT_EKMP_TBL;
			}
			set
			{
				this._AKT_EKMP_TBL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENT_AKT_MEE_TBL", Storage="_AKT_MEE_TBL", ThisKey="ID", OtherKey="PID")]
		public EntitySet<AKT_MEE_TBL> AKT_MEE_TBL
		{
			get
			{
				return this._AKT_MEE_TBL;
			}
			set
			{
				this._AKT_MEE_TBL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENT_SLUCH", Storage="_SLUCH", ThisKey="ID", OtherKey="PID")]
		public EntitySet<SLUCH> SLUCH
		{
			get
			{
				return this._SLUCH;
			}
			set
			{
				this._SLUCH.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F002_PACIENT", Storage="_F002", ThisKey="SMO", OtherKey="smocod", IsForeignKey=true)]
		public F002 F002
		{
			get
			{
				return this._F002.Entity;
			}
			set
			{
				F002 previousValue = this._F002.Entity;
				if (((previousValue != value) 
							|| (this._F002.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F002.Entity = null;
						previousValue.PACIENT.Remove(this);
					}
					this._F002.Entity = value;
					if ((value != null))
					{
						value.PACIENT.Add(this);
						this._SMO = value.smocod;
					}
					else
					{
						this._SMO = default(string);
					}
					this.SendPropertyChanged("F002");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F008_PACIENT", Storage="_F008", ThisKey="VPOLIS", OtherKey="Id", IsForeignKey=true)]
		public F008 F008
		{
			get
			{
				return this._F008.Entity;
			}
			set
			{
				F008 previousValue = this._F008.Entity;
				if (((previousValue != value) 
							|| (this._F008.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F008.Entity = null;
						previousValue.PACIENT.Remove(this);
					}
					this._F008.Entity = value;
					if ((value != null))
					{
						value.PACIENT.Add(this);
						this._VPOLIS = value.Id;
					}
					else
					{
						this._VPOLIS = default(Nullable<int>);
					}
					this.SendPropertyChanged("F008");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F010_PACIENT", Storage="_F010", ThisKey="SMO_OK", OtherKey="KOD_OKATO", IsForeignKey=true)]
		public F010 F010
		{
			get
			{
				return this._F010.Entity;
			}
			set
			{
				F010 previousValue = this._F010.Entity;
				if (((previousValue != value) 
							|| (this._F010.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F010.Entity = null;
						previousValue.PACIENT.Remove(this);
					}
					this._F010.Entity = value;
					if ((value != null))
					{
						value.PACIENT.Add(this);
						this._SMO_OK = value.KOD_OKATO;
					}
					else
					{
						this._SMO_OK = default(string);
					}
					this.SendPropertyChanged("F010");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F011_PACIENT", Storage="_F011", ThisKey="DOCTYPE", OtherKey="Id", IsForeignKey=true)]
		public F011 F011
		{
			get
			{
				return this._F011.Entity;
			}
			set
			{
				F011 previousValue = this._F011.Entity;
				if (((previousValue != value) 
							|| (this._F011.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F011.Entity = null;
						previousValue.PACIENT.Remove(this);
					}
					this._F011.Entity = value;
					if ((value != null))
					{
						value.PACIENT.Add(this);
						this._DOCTYPE = value.Id;
					}
					else
					{
						this._DOCTYPE = default(Nullable<int>);
					}
					this.SendPropertyChanged("F011");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KatLgot_PACIENT", Storage="_KatLgot", ThisKey="KAT_LGOT", OtherKey="ID", IsForeignKey=true)]
		public KatLgot KatLgot
		{
			get
			{
				return this._KatLgot.Entity;
			}
			set
			{
				KatLgot previousValue = this._KatLgot.Entity;
				if (((previousValue != value) 
							|| (this._KatLgot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KatLgot.Entity = null;
						previousValue.PACIENT.Remove(this);
					}
					this._KatLgot.Entity = value;
					if ((value != null))
					{
						value.PACIENT.Add(this);
						this._KAT_LGOT = value.ID;
					}
					else
					{
						this._KAT_LGOT = default(Nullable<int>);
					}
					this.SendPropertyChanged("KatLgot");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KodTer_PACIENT", Storage="_KodTer", ThisKey="KOD_TER", OtherKey="ID", IsForeignKey=true)]
		public KodTer KodTer
		{
			get
			{
				return this._KodTer.Entity;
			}
			set
			{
				KodTer previousValue = this._KodTer.Entity;
				if (((previousValue != value) 
							|| (this._KodTer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KodTer.Entity = null;
						previousValue.PACIENT.Remove(this);
					}
					this._KodTer.Entity = value;
					if ((value != null))
					{
						value.PACIENT.Add(this);
						this._KOD_TER = value.ID;
					}
					else
					{
						this._KOD_TER = default(Nullable<int>);
					}
					this.SendPropertyChanged("KodTer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SocStat_PACIENT", Storage="_SocStat", ThisKey="SOC_STAT", OtherKey="ID", IsForeignKey=true)]
		public SocStat SocStat
		{
			get
			{
				return this._SocStat.Entity;
			}
			set
			{
				SocStat previousValue = this._SocStat.Entity;
				if (((previousValue != value) 
							|| (this._SocStat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SocStat.Entity = null;
						previousValue.PACIENT.Remove(this);
					}
					this._SocStat.Entity = value;
					if ((value != null))
					{
						value.PACIENT.Add(this);
						this._SOC_STAT = value.ID;
					}
					else
					{
						this._SOC_STAT = default(Nullable<int>);
					}
					this.SendPropertyChanged("SocStat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V005_PACIENT", Storage="_V005", ThisKey="W", OtherKey="Id", IsForeignKey=true)]
		public V005 V005
		{
			get
			{
				return this._V005.Entity;
			}
			set
			{
				V005 previousValue = this._V005.Entity;
				if (((previousValue != value) 
							|| (this._V005.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V005.Entity = null;
						previousValue.PACIENT.Remove(this);
					}
					this._V005.Entity = value;
					if ((value != null))
					{
						value.PACIENT.Add(this);
						this._W = value.Id;
					}
					else
					{
						this._W = default(Nullable<int>);
					}
					this.SendPropertyChanged("V005");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V005_PACIENT1", Storage="_V0051", ThisKey="W_P", OtherKey="Id", IsForeignKey=true)]
		public V005 V0051
		{
			get
			{
				return this._V0051.Entity;
			}
			set
			{
				V005 previousValue = this._V0051.Entity;
				if (((previousValue != value) 
							|| (this._V0051.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V0051.Entity = null;
						previousValue.PACIENT1.Remove(this);
					}
					this._V0051.Entity = value;
					if ((value != null))
					{
						value.PACIENT1.Add(this);
						this._W_P = value.Id;
					}
					else
					{
						this._W_P = default(Nullable<int>);
					}
					this.SendPropertyChanged("V0051");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AKT_EKMP_TBL(AKT_EKMP_TBL entity)
		{
			this.SendPropertyChanging();
			entity.PACIENT = this;
		}
		
		private void detach_AKT_EKMP_TBL(AKT_EKMP_TBL entity)
		{
			this.SendPropertyChanging();
			entity.PACIENT = null;
		}
		
		private void attach_AKT_MEE_TBL(AKT_MEE_TBL entity)
		{
			this.SendPropertyChanging();
			entity.PACIENT = this;
		}
		
		private void detach_AKT_MEE_TBL(AKT_MEE_TBL entity)
		{
			this.SendPropertyChanging();
			entity.PACIENT = null;
		}
		
		private void attach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.PACIENT = this;
		}
		
		private void detach_SLUCH(SLUCH entity)
		{
			this.SendPropertyChanging();
			entity.PACIENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USL_KSLP")]
	public partial class USL_KSLP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private decimal _IDSL;
		
		private decimal _Z_SL;
		
		private int _SLID;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDSLChanging(decimal value);
    partial void OnIDSLChanged();
    partial void OnZ_SLChanging(decimal value);
    partial void OnZ_SLChanged();
    partial void OnSLIDChanging(int value);
    partial void OnSLIDChanged();
    #endregion
		
		public USL_KSLP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSL", DbType="Decimal(4,0) NOT NULL")]
		public decimal IDSL
		{
			get
			{
				return this._IDSL;
			}
			set
			{
				if ((this._IDSL != value))
				{
					this.OnIDSLChanging(value);
					this.SendPropertyChanging();
					this._IDSL = value;
					this.SendPropertyChanged("IDSL");
					this.OnIDSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Z_SL", DbType="Decimal(5,2) NOT NULL")]
		public decimal Z_SL
		{
			get
			{
				return this._Z_SL;
			}
			set
			{
				if ((this._Z_SL != value))
				{
					this.OnZ_SLChanging(value);
					this.SendPropertyChanging();
					this._Z_SL = value;
					this.SendPropertyChanged("Z_SL");
					this.OnZ_SLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLID", DbType="Int NOT NULL")]
		public int SLID
		{
			get
			{
				return this._SLID;
			}
			set
			{
				if ((this._SLID != value))
				{
					this.OnSLIDChanging(value);
					this.SendPropertyChanging();
					this._SLID = value;
					this.SendPropertyChanged("SLID");
					this.OnSLIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCHET")]
	public partial class SCHET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CODE;
		
		private string _CODE_MO;
		
		private System.Nullable<int> _YEAR;
		
		private System.Nullable<int> _MONTH;
		
		private string _NSCHET;
		
		private System.Nullable<System.DateTime> _DSCHET;
		
		private string _PLAT;
		
		private System.Nullable<decimal> _SUMMAV;
		
		private string _COMENTS;
		
		private System.Nullable<decimal> _SUMMAP;
		
		private System.Nullable<decimal> _SANK_MEK;
		
		private System.Nullable<decimal> _SANK_MEE;
		
		private System.Nullable<decimal> _SANK_EKMP;
		
		private System.Nullable<int> _COUNT_SL;
		
		private string _NameWithID;
		
		private string _DISP;
		
		private string _ZAPFILENAME;
		
		private string _PERSFILENAME;
		
		private System.Xml.Linq.XElement _ZAPXMLFILE;
		
		private System.Xml.Linq.XElement _PERSXMLFILE;
		
		private System.Nullable<int> _SD_Z;
		
		private string _OmsFileName;
		
		private EntitySet<FREP> _FREP;
		
		private EntitySet<SANK> _SANK;
		
		private EntitySet<SANK_RE> _SANK_RE;
		
		private EntitySet<SCHET_OMS> _SCHET_OMS;
		
		private EntitySet<SCHET_SMO> _SCHET_SMO;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCODEChanging(System.Nullable<int> value);
    partial void OnCODEChanged();
    partial void OnCODE_MOChanging(string value);
    partial void OnCODE_MOChanged();
    partial void OnYEARChanging(System.Nullable<int> value);
    partial void OnYEARChanged();
    partial void OnMONTHChanging(System.Nullable<int> value);
    partial void OnMONTHChanged();
    partial void OnNSCHETChanging(string value);
    partial void OnNSCHETChanged();
    partial void OnDSCHETChanging(System.Nullable<System.DateTime> value);
    partial void OnDSCHETChanged();
    partial void OnPLATChanging(string value);
    partial void OnPLATChanged();
    partial void OnSUMMAVChanging(System.Nullable<decimal> value);
    partial void OnSUMMAVChanged();
    partial void OnCOMENTSChanging(string value);
    partial void OnCOMENTSChanged();
    partial void OnSUMMAPChanging(System.Nullable<decimal> value);
    partial void OnSUMMAPChanged();
    partial void OnSANK_MEKChanging(System.Nullable<decimal> value);
    partial void OnSANK_MEKChanged();
    partial void OnSANK_MEEChanging(System.Nullable<decimal> value);
    partial void OnSANK_MEEChanged();
    partial void OnSANK_EKMPChanging(System.Nullable<decimal> value);
    partial void OnSANK_EKMPChanged();
    partial void OnCOUNT_SLChanging(System.Nullable<int> value);
    partial void OnCOUNT_SLChanged();
    partial void OnNameWithIDChanging(string value);
    partial void OnNameWithIDChanged();
    partial void OnDISPChanging(string value);
    partial void OnDISPChanged();
    partial void OnZAPFILENAMEChanging(string value);
    partial void OnZAPFILENAMEChanged();
    partial void OnPERSFILENAMEChanging(string value);
    partial void OnPERSFILENAMEChanged();
    partial void OnZAPXMLFILEChanging(System.Xml.Linq.XElement value);
    partial void OnZAPXMLFILEChanged();
    partial void OnPERSXMLFILEChanging(System.Xml.Linq.XElement value);
    partial void OnPERSXMLFILEChanged();
    partial void OnSD_ZChanging(System.Nullable<int> value);
    partial void OnSD_ZChanged();
    partial void OnOmsFileNameChanging(string value);
    partial void OnOmsFileNameChanged();
    #endregion
		
		public SCHET()
		{
			this._FREP = new EntitySet<FREP>(new Action<FREP>(this.attach_FREP), new Action<FREP>(this.detach_FREP));
			this._SANK = new EntitySet<SANK>(new Action<SANK>(this.attach_SANK), new Action<SANK>(this.detach_SANK));
			this._SANK_RE = new EntitySet<SANK_RE>(new Action<SANK_RE>(this.attach_SANK_RE), new Action<SANK_RE>(this.detach_SANK_RE));
			this._SCHET_OMS = new EntitySet<SCHET_OMS>(new Action<SCHET_OMS>(this.attach_SCHET_OMS), new Action<SCHET_OMS>(this.detach_SCHET_OMS));
			this._SCHET_SMO = new EntitySet<SCHET_SMO>(new Action<SCHET_SMO>(this.attach_SCHET_SMO), new Action<SCHET_SMO>(this.detach_SCHET_SMO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="Int")]
		public System.Nullable<int> CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE_MO", DbType="NVarChar(6)")]
		public string CODE_MO
		{
			get
			{
				return this._CODE_MO;
			}
			set
			{
				if ((this._CODE_MO != value))
				{
					this.OnCODE_MOChanging(value);
					this.SendPropertyChanging();
					this._CODE_MO = value;
					this.SendPropertyChanged("CODE_MO");
					this.OnCODE_MOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YEAR", DbType="Int")]
		public System.Nullable<int> YEAR
		{
			get
			{
				return this._YEAR;
			}
			set
			{
				if ((this._YEAR != value))
				{
					this.OnYEARChanging(value);
					this.SendPropertyChanging();
					this._YEAR = value;
					this.SendPropertyChanged("YEAR");
					this.OnYEARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MONTH", DbType="Int")]
		public System.Nullable<int> MONTH
		{
			get
			{
				return this._MONTH;
			}
			set
			{
				if ((this._MONTH != value))
				{
					this.OnMONTHChanging(value);
					this.SendPropertyChanging();
					this._MONTH = value;
					this.SendPropertyChanged("MONTH");
					this.OnMONTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSCHET", DbType="NVarChar(15)")]
		public string NSCHET
		{
			get
			{
				return this._NSCHET;
			}
			set
			{
				if ((this._NSCHET != value))
				{
					this.OnNSCHETChanging(value);
					this.SendPropertyChanging();
					this._NSCHET = value;
					this.SendPropertyChanged("NSCHET");
					this.OnNSCHETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSCHET", DbType="DateTime")]
		public System.Nullable<System.DateTime> DSCHET
		{
			get
			{
				return this._DSCHET;
			}
			set
			{
				if ((this._DSCHET != value))
				{
					this.OnDSCHETChanging(value);
					this.SendPropertyChanging();
					this._DSCHET = value;
					this.SendPropertyChanged("DSCHET");
					this.OnDSCHETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLAT", DbType="NVarChar(5)")]
		public string PLAT
		{
			get
			{
				return this._PLAT;
			}
			set
			{
				if ((this._PLAT != value))
				{
					this.OnPLATChanging(value);
					this.SendPropertyChanging();
					this._PLAT = value;
					this.SendPropertyChanged("PLAT");
					this.OnPLATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUMMAV", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUMMAV
		{
			get
			{
				return this._SUMMAV;
			}
			set
			{
				if ((this._SUMMAV != value))
				{
					this.OnSUMMAVChanging(value);
					this.SendPropertyChanging();
					this._SUMMAV = value;
					this.SendPropertyChanged("SUMMAV");
					this.OnSUMMAVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMENTS", DbType="NVarChar(250)")]
		public string COMENTS
		{
			get
			{
				return this._COMENTS;
			}
			set
			{
				if ((this._COMENTS != value))
				{
					this.OnCOMENTSChanging(value);
					this.SendPropertyChanging();
					this._COMENTS = value;
					this.SendPropertyChanged("COMENTS");
					this.OnCOMENTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUMMAP", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUMMAP
		{
			get
			{
				return this._SUMMAP;
			}
			set
			{
				if ((this._SUMMAP != value))
				{
					this.OnSUMMAPChanging(value);
					this.SendPropertyChanging();
					this._SUMMAP = value;
					this.SendPropertyChanged("SUMMAP");
					this.OnSUMMAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANK_MEK", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SANK_MEK
		{
			get
			{
				return this._SANK_MEK;
			}
			set
			{
				if ((this._SANK_MEK != value))
				{
					this.OnSANK_MEKChanging(value);
					this.SendPropertyChanging();
					this._SANK_MEK = value;
					this.SendPropertyChanged("SANK_MEK");
					this.OnSANK_MEKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANK_MEE", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SANK_MEE
		{
			get
			{
				return this._SANK_MEE;
			}
			set
			{
				if ((this._SANK_MEE != value))
				{
					this.OnSANK_MEEChanging(value);
					this.SendPropertyChanging();
					this._SANK_MEE = value;
					this.SendPropertyChanged("SANK_MEE");
					this.OnSANK_MEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANK_EKMP", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SANK_EKMP
		{
			get
			{
				return this._SANK_EKMP;
			}
			set
			{
				if ((this._SANK_EKMP != value))
				{
					this.OnSANK_EKMPChanging(value);
					this.SendPropertyChanging();
					this._SANK_EKMP = value;
					this.SendPropertyChanged("SANK_EKMP");
					this.OnSANK_EKMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNT_SL", DbType="Int")]
		public System.Nullable<int> COUNT_SL
		{
			get
			{
				return this._COUNT_SL;
			}
			set
			{
				if ((this._COUNT_SL != value))
				{
					this.OnCOUNT_SLChanging(value);
					this.SendPropertyChanging();
					this._COUNT_SL = value;
					this.SendPropertyChanged("COUNT_SL");
					this.OnCOUNT_SLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameWithID", AutoSync=AutoSync.Always, DbType="NVarChar(273)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NameWithID
		{
			get
			{
				return this._NameWithID;
			}
			set
			{
				if ((this._NameWithID != value))
				{
					this.OnNameWithIDChanging(value);
					this.SendPropertyChanging();
					this._NameWithID = value;
					this.SendPropertyChanged("NameWithID");
					this.OnNameWithIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISP", DbType="NVarChar(3)")]
		public string DISP
		{
			get
			{
				return this._DISP;
			}
			set
			{
				if ((this._DISP != value))
				{
					this.OnDISPChanging(value);
					this.SendPropertyChanging();
					this._DISP = value;
					this.SendPropertyChanged("DISP");
					this.OnDISPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZAPFILENAME", DbType="NVarChar(26)")]
		public string ZAPFILENAME
		{
			get
			{
				return this._ZAPFILENAME;
			}
			set
			{
				if ((this._ZAPFILENAME != value))
				{
					this.OnZAPFILENAMEChanging(value);
					this.SendPropertyChanging();
					this._ZAPFILENAME = value;
					this.SendPropertyChanged("ZAPFILENAME");
					this.OnZAPFILENAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERSFILENAME", DbType="NVarChar(26)")]
		public string PERSFILENAME
		{
			get
			{
				return this._PERSFILENAME;
			}
			set
			{
				if ((this._PERSFILENAME != value))
				{
					this.OnPERSFILENAMEChanging(value);
					this.SendPropertyChanging();
					this._PERSFILENAME = value;
					this.SendPropertyChanged("PERSFILENAME");
					this.OnPERSFILENAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZAPXMLFILE", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement ZAPXMLFILE
		{
			get
			{
				return this._ZAPXMLFILE;
			}
			set
			{
				if ((this._ZAPXMLFILE != value))
				{
					this.OnZAPXMLFILEChanging(value);
					this.SendPropertyChanging();
					this._ZAPXMLFILE = value;
					this.SendPropertyChanged("ZAPXMLFILE");
					this.OnZAPXMLFILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERSXMLFILE", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement PERSXMLFILE
		{
			get
			{
				return this._PERSXMLFILE;
			}
			set
			{
				if ((this._PERSXMLFILE != value))
				{
					this.OnPERSXMLFILEChanging(value);
					this.SendPropertyChanging();
					this._PERSXMLFILE = value;
					this.SendPropertyChanged("PERSXMLFILE");
					this.OnPERSXMLFILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SD_Z", DbType="Int")]
		public System.Nullable<int> SD_Z
		{
			get
			{
				return this._SD_Z;
			}
			set
			{
				if ((this._SD_Z != value))
				{
					this.OnSD_ZChanging(value);
					this.SendPropertyChanging();
					this._SD_Z = value;
					this.SendPropertyChanged("SD_Z");
					this.OnSD_ZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OmsFileName", DbType="NVarChar(30)")]
		public string OmsFileName
		{
			get
			{
				return this._OmsFileName;
			}
			set
			{
				if ((this._OmsFileName != value))
				{
					this.OnOmsFileNameChanging(value);
					this.SendPropertyChanging();
					this._OmsFileName = value;
					this.SendPropertyChanged("OmsFileName");
					this.OnOmsFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHET_FREP", Storage="_FREP", ThisKey="ID", OtherKey="SCHET_ID")]
		public EntitySet<FREP> FREP
		{
			get
			{
				return this._FREP;
			}
			set
			{
				this._FREP.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHET_SANK", Storage="_SANK", ThisKey="ID", OtherKey="SCHET_ID")]
		public EntitySet<SANK> SANK
		{
			get
			{
				return this._SANK;
			}
			set
			{
				this._SANK.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHET_SANK_RE", Storage="_SANK_RE", ThisKey="ID", OtherKey="SCHET_ID")]
		public EntitySet<SANK_RE> SANK_RE
		{
			get
			{
				return this._SANK_RE;
			}
			set
			{
				this._SANK_RE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHET_SCHET_OMS", Storage="_SCHET_OMS", ThisKey="ID", OtherKey="SCHET_ID")]
		public EntitySet<SCHET_OMS> SCHET_OMS
		{
			get
			{
				return this._SCHET_OMS;
			}
			set
			{
				this._SCHET_OMS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHET_SCHET_SMO", Storage="_SCHET_SMO", ThisKey="ID", OtherKey="SCHET_ID")]
		public EntitySet<SCHET_SMO> SCHET_SMO
		{
			get
			{
				return this._SCHET_SMO;
			}
			set
			{
				this._SCHET_SMO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FREP(FREP entity)
		{
			this.SendPropertyChanging();
			entity.SCHET = this;
		}
		
		private void detach_FREP(FREP entity)
		{
			this.SendPropertyChanging();
			entity.SCHET = null;
		}
		
		private void attach_SANK(SANK entity)
		{
			this.SendPropertyChanging();
			entity.SCHET = this;
		}
		
		private void detach_SANK(SANK entity)
		{
			this.SendPropertyChanging();
			entity.SCHET = null;
		}
		
		private void attach_SANK_RE(SANK_RE entity)
		{
			this.SendPropertyChanging();
			entity.SCHET = this;
		}
		
		private void detach_SANK_RE(SANK_RE entity)
		{
			this.SendPropertyChanging();
			entity.SCHET = null;
		}
		
		private void attach_SCHET_OMS(SCHET_OMS entity)
		{
			this.SendPropertyChanging();
			entity.SCHET = this;
		}
		
		private void detach_SCHET_OMS(SCHET_OMS entity)
		{
			this.SendPropertyChanging();
			entity.SCHET = null;
		}
		
		private void attach_SCHET_SMO(SCHET_SMO entity)
		{
			this.SendPropertyChanging();
			entity.SCHET = this;
		}
		
		private void detach_SCHET_SMO(SCHET_SMO entity)
		{
			this.SendPropertyChanging();
			entity.SCHET = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SLUCH")]
	public partial class SLUCH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDCASE;
		
		private System.Nullable<int> _USL_OK;
		
		private System.Nullable<int> _VIDPOM;
		
		private string _NPR_MO;
		
		private System.Nullable<int> _EXTR;
		
		private string _LPU;
		
		private string _LPU_1;
		
		private string _PODR;
		
		private System.Nullable<int> _PROFIL;
		
		private System.Nullable<byte> _DET;
		
		private string _NHISTORY;
		
		private System.Nullable<System.DateTime> _DATE_1;
		
		private System.Nullable<System.DateTime> _DATE_2;
		
		private string _DS0;
		
		private string _DS1;
		
		private string _DS2;
		
		private string _CODE_MES1;
		
		private string _CODE_MES2;
		
		private System.Nullable<int> _SLUCH_TYPE;
		
		private System.Nullable<int> _RSLT;
		
		private System.Nullable<int> _ISHOD;
		
		private System.Nullable<int> _PRVS;
		
		private string _IDDOKT;
		
		private string _OS_SLUCH;
		
		private System.Nullable<int> _OS_SLUCH_REGION;
		
		private System.Nullable<int> _IDSP;
		
		private System.Nullable<decimal> _ED_COL;
		
		private System.Nullable<decimal> _TARIF;
		
		private System.Nullable<decimal> _SUMV;
		
		private System.Nullable<decimal> _OPLATA;
		
		private System.Nullable<decimal> _SUMP;
		
		private System.Nullable<decimal> _SANK_IT;
		
		private string _COMENTSL;
		
		private System.Nullable<int> _SCHET_ID;
		
		private System.Nullable<int> _GR_ZDOROV;
		
		private System.Nullable<int> _VETERAN;
		
		private System.Nullable<int> _SCHOOL;
		
		private System.Nullable<int> _WORK_STAT;
		
		private int _PID;
		
		private string _ID_TEMP;
		
		private string _PID_TEMP;
		
		private string _IDKSG;
		
		private string _MEK_COMENT;
		
		private string _MEE_COMENT;
		
		private string _EKMP_COMENT;
		
		private System.Nullable<int> _MEE_TYPE;
		
		private System.Nullable<int> _KSG_OPLATA;
		
		private System.Nullable<int> _KDAY;
		
		private System.Nullable<System.DateTime> _REQUEST_DATE;
		
		private System.Nullable<int> _USERID;
		
		private System.Nullable<int> _MSPID;
		
		private System.Nullable<int> _LPUID;
		
		private System.Nullable<decimal> _DIFF_K;
		
		private string _VID_HMP;
		
		private System.Nullable<int> _METOD_HMP;
		
		private System.Guid _IDSLG;
		
		private bool _ISIDSLG;
		
		private string _REMEK_COM;
		
		private System.Nullable<int> _MEK_COUNT;
		
		private System.Nullable<int> _MEE_COUNT;
		
		private System.Nullable<int> _EKMP_COUNT;
		
		private System.Nullable<int> _RMEK_COUNT;
		
		private System.Nullable<int> _RMEE_COUNT;
		
		private System.Nullable<int> _REKMP_COUNT;
		
		private System.Nullable<int> _GOSP;
		
		private System.Nullable<int> _VR_DOST;
		
		private System.Nullable<int> _TRAVMA;
		
		private string _NNAPR;
		
		private System.Nullable<System.DateTime> _DNAPR;
		
		private System.Nullable<int> _KDOST;
		
		private string _NDOST;
		
		private System.Nullable<int> _VOPL;
		
		private string _NNAR;
		
		private string _DSN;
		
		private System.Nullable<bool> _DOSTP;
		
		private string _DSKZ;
		
		private string _PRS;
		
		private string _DSS;
		
		private string _DSPA;
		
		private System.Nullable<int> _IDDOKTP;
		
		private System.Nullable<int> _IDDOKTO;
		
		private System.Nullable<int> _DEFGOSP;
		
		private System.Nullable<int> _SCHET_OMS_ID;
		
		private string _KSG_COM;
		
		private string _KDAY_COM;
		
		private string _DIFF_COM;
		
		private System.Nullable<decimal> _RSLT_D;
		
		private string _VOZR;
		
		private System.Nullable<decimal> _TER_ID;
		
		private System.Nullable<int> _FOR_POM;
		
		private string _KSG_DKK;
		
		private System.Nullable<int> _PROFIL_K;
		
		private System.Nullable<int> _PRVS21;
		
		private EntitySet<SANK> _SANK;
		
		private EntitySet<USL> _USL;
		
		private EntityRef<SprDEFGOSP> _SprDEFGOSP;
		
		private EntityRef<DetProfilDb> _DetProfilDb;
		
		private EntityRef<Dostav> _Dostav;
		
		private EntityRef<M001_KSG> _M001_KSG;
		
		private EntityRef<M001_KSG> _M001_KSG1;
		
		private EntityRef<M001_KSG> _M001_KSG2;
		
		private EntityRef<M001_KSG> _M001_KSG3;
		
		private EntityRef<F005> _F005;
		
		private EntityRef<Gospit> _Gospit;
		
		private EntityRef<GrZdorovDb> _GrZdorovDb;
		
		private EntityRef<DoctorBd> _DoctorBd;
		
		private EntityRef<DoctorBd> _DoctorBd1;
		
		private EntityRef<F003> _F003;
		
		private EntityRef<F003> _F0031;
		
		private EntityRef<OsobSluchDb> _OsobSluchDb;
		
		private EntityRef<PACIENT> _PACIENT;
		
		private EntityRef<SCHET_OMS> _SCHET_OMS;
		
		private EntityRef<SchoolStatusDb> _SchoolStatusDb;
		
		private EntityRef<SprExtr> _SprExtr;
		
		private EntityRef<SprKDOST> _SprKDOST;
		
		private EntityRef<SprVOPL> _SprVOPL;
		
		private EntityRef<TravmaTbl> _TravmaTbl;
		
		private EntityRef<TypeSluchDb> _TypeSluchDb;
		
		private EntityRef<Users> _Users;
		
		private EntityRef<V002> _V002;
		
		private EntityRef<V004> _V004;
		
		private EntityRef<V006> _V006;
		
		private EntityRef<V008> _V008;
		
		private EntityRef<V009> _V009;
		
		private EntityRef<V010> _V010;
		
		private EntityRef<V012> _V012;
		
		private EntityRef<V015> _V015;
		
		private EntityRef<VeteranDb> _VeteranDb;
		
		private EntityRef<SprVozr> _SprVozr;
		
		private EntityRef<WorkStatDb> _WorkStatDb;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDCASEChanging(System.Nullable<int> value);
    partial void OnIDCASEChanged();
    partial void OnUSL_OKChanging(System.Nullable<int> value);
    partial void OnUSL_OKChanged();
    partial void OnVIDPOMChanging(System.Nullable<int> value);
    partial void OnVIDPOMChanged();
    partial void OnNPR_MOChanging(string value);
    partial void OnNPR_MOChanged();
    partial void OnEXTRChanging(System.Nullable<int> value);
    partial void OnEXTRChanged();
    partial void OnLPUChanging(string value);
    partial void OnLPUChanged();
    partial void OnLPU_1Changing(string value);
    partial void OnLPU_1Changed();
    partial void OnPODRChanging(string value);
    partial void OnPODRChanged();
    partial void OnPROFILChanging(System.Nullable<int> value);
    partial void OnPROFILChanged();
    partial void OnDETChanging(System.Nullable<byte> value);
    partial void OnDETChanged();
    partial void OnNHISTORYChanging(string value);
    partial void OnNHISTORYChanged();
    partial void OnDATE_1Changing(System.Nullable<System.DateTime> value);
    partial void OnDATE_1Changed();
    partial void OnDATE_2Changing(System.Nullable<System.DateTime> value);
    partial void OnDATE_2Changed();
    partial void OnDS0Changing(string value);
    partial void OnDS0Changed();
    partial void OnDS1Changing(string value);
    partial void OnDS1Changed();
    partial void OnDS2Changing(string value);
    partial void OnDS2Changed();
    partial void OnCODE_MES1Changing(string value);
    partial void OnCODE_MES1Changed();
    partial void OnCODE_MES2Changing(string value);
    partial void OnCODE_MES2Changed();
    partial void OnSLUCH_TYPEChanging(System.Nullable<int> value);
    partial void OnSLUCH_TYPEChanged();
    partial void OnRSLTChanging(System.Nullable<int> value);
    partial void OnRSLTChanged();
    partial void OnISHODChanging(System.Nullable<int> value);
    partial void OnISHODChanged();
    partial void OnPRVSChanging(System.Nullable<int> value);
    partial void OnPRVSChanged();
    partial void OnIDDOKTChanging(string value);
    partial void OnIDDOKTChanged();
    partial void OnOS_SLUCHChanging(string value);
    partial void OnOS_SLUCHChanged();
    partial void OnOS_SLUCH_REGIONChanging(System.Nullable<int> value);
    partial void OnOS_SLUCH_REGIONChanged();
    partial void OnIDSPChanging(System.Nullable<int> value);
    partial void OnIDSPChanged();
    partial void OnED_COLChanging(System.Nullable<decimal> value);
    partial void OnED_COLChanged();
    partial void OnTARIFChanging(System.Nullable<decimal> value);
    partial void OnTARIFChanged();
    partial void OnSUMVChanging(System.Nullable<decimal> value);
    partial void OnSUMVChanged();
    partial void OnOPLATAChanging(System.Nullable<decimal> value);
    partial void OnOPLATAChanged();
    partial void OnSUMPChanging(System.Nullable<decimal> value);
    partial void OnSUMPChanged();
    partial void OnSANK_ITChanging(System.Nullable<decimal> value);
    partial void OnSANK_ITChanged();
    partial void OnCOMENTSLChanging(string value);
    partial void OnCOMENTSLChanged();
    partial void OnSCHET_IDChanging(System.Nullable<int> value);
    partial void OnSCHET_IDChanged();
    partial void OnGR_ZDOROVChanging(System.Nullable<int> value);
    partial void OnGR_ZDOROVChanged();
    partial void OnVETERANChanging(System.Nullable<int> value);
    partial void OnVETERANChanged();
    partial void OnSCHOOLChanging(System.Nullable<int> value);
    partial void OnSCHOOLChanged();
    partial void OnWORK_STATChanging(System.Nullable<int> value);
    partial void OnWORK_STATChanged();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnID_TEMPChanging(string value);
    partial void OnID_TEMPChanged();
    partial void OnPID_TEMPChanging(string value);
    partial void OnPID_TEMPChanged();
    partial void OnIDKSGChanging(string value);
    partial void OnIDKSGChanged();
    partial void OnMEK_COMENTChanging(string value);
    partial void OnMEK_COMENTChanged();
    partial void OnMEE_COMENTChanging(string value);
    partial void OnMEE_COMENTChanged();
    partial void OnEKMP_COMENTChanging(string value);
    partial void OnEKMP_COMENTChanged();
    partial void OnMEE_TYPEChanging(System.Nullable<int> value);
    partial void OnMEE_TYPEChanged();
    partial void OnKSG_OPLATAChanging(System.Nullable<int> value);
    partial void OnKSG_OPLATAChanged();
    partial void OnKDAYChanging(System.Nullable<int> value);
    partial void OnKDAYChanged();
    partial void OnREQUEST_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnREQUEST_DATEChanged();
    partial void OnUSERIDChanging(System.Nullable<int> value);
    partial void OnUSERIDChanged();
    partial void OnMSPIDChanging(System.Nullable<int> value);
    partial void OnMSPIDChanged();
    partial void OnLPUIDChanging(System.Nullable<int> value);
    partial void OnLPUIDChanged();
    partial void OnDIFF_KChanging(System.Nullable<decimal> value);
    partial void OnDIFF_KChanged();
    partial void OnVID_HMPChanging(string value);
    partial void OnVID_HMPChanged();
    partial void OnMETOD_HMPChanging(System.Nullable<int> value);
    partial void OnMETOD_HMPChanged();
    partial void OnIDSLGChanging(System.Guid value);
    partial void OnIDSLGChanged();
    partial void OnISIDSLGChanging(bool value);
    partial void OnISIDSLGChanged();
    partial void OnREMEK_COMChanging(string value);
    partial void OnREMEK_COMChanged();
    partial void OnMEK_COUNTChanging(System.Nullable<int> value);
    partial void OnMEK_COUNTChanged();
    partial void OnMEE_COUNTChanging(System.Nullable<int> value);
    partial void OnMEE_COUNTChanged();
    partial void OnEKMP_COUNTChanging(System.Nullable<int> value);
    partial void OnEKMP_COUNTChanged();
    partial void OnRMEK_COUNTChanging(System.Nullable<int> value);
    partial void OnRMEK_COUNTChanged();
    partial void OnRMEE_COUNTChanging(System.Nullable<int> value);
    partial void OnRMEE_COUNTChanged();
    partial void OnREKMP_COUNTChanging(System.Nullable<int> value);
    partial void OnREKMP_COUNTChanged();
    partial void OnGOSPChanging(System.Nullable<int> value);
    partial void OnGOSPChanged();
    partial void OnVR_DOSTChanging(System.Nullable<int> value);
    partial void OnVR_DOSTChanged();
    partial void OnTRAVMAChanging(System.Nullable<int> value);
    partial void OnTRAVMAChanged();
    partial void OnNNAPRChanging(string value);
    partial void OnNNAPRChanged();
    partial void OnDNAPRChanging(System.Nullable<System.DateTime> value);
    partial void OnDNAPRChanged();
    partial void OnKDOSTChanging(System.Nullable<int> value);
    partial void OnKDOSTChanged();
    partial void OnNDOSTChanging(string value);
    partial void OnNDOSTChanged();
    partial void OnVOPLChanging(System.Nullable<int> value);
    partial void OnVOPLChanged();
    partial void OnNNARChanging(string value);
    partial void OnNNARChanged();
    partial void OnDSNChanging(string value);
    partial void OnDSNChanged();
    partial void OnDOSTPChanging(System.Nullable<bool> value);
    partial void OnDOSTPChanged();
    partial void OnDSKZChanging(string value);
    partial void OnDSKZChanged();
    partial void OnPRSChanging(string value);
    partial void OnPRSChanged();
    partial void OnDSSChanging(string value);
    partial void OnDSSChanged();
    partial void OnDSPAChanging(string value);
    partial void OnDSPAChanged();
    partial void OnIDDOKTPChanging(System.Nullable<int> value);
    partial void OnIDDOKTPChanged();
    partial void OnIDDOKTOChanging(System.Nullable<int> value);
    partial void OnIDDOKTOChanged();
    partial void OnDEFGOSPChanging(System.Nullable<int> value);
    partial void OnDEFGOSPChanged();
    partial void OnSCHET_OMS_IDChanging(System.Nullable<int> value);
    partial void OnSCHET_OMS_IDChanged();
    partial void OnKSG_COMChanging(string value);
    partial void OnKSG_COMChanged();
    partial void OnKDAY_COMChanging(string value);
    partial void OnKDAY_COMChanged();
    partial void OnDIFF_COMChanging(string value);
    partial void OnDIFF_COMChanged();
    partial void OnRSLT_DChanging(System.Nullable<decimal> value);
    partial void OnRSLT_DChanged();
    partial void OnVOZRChanging(string value);
    partial void OnVOZRChanged();
    partial void OnTER_IDChanging(System.Nullable<decimal> value);
    partial void OnTER_IDChanged();
    partial void OnFOR_POMChanging(System.Nullable<int> value);
    partial void OnFOR_POMChanged();
    partial void OnKSG_DKKChanging(string value);
    partial void OnKSG_DKKChanged();
    partial void OnPROFIL_KChanging(System.Nullable<int> value);
    partial void OnPROFIL_KChanged();
    partial void OnPRVS21Changing(System.Nullable<int> value);
    partial void OnPRVS21Changed();
    #endregion
		
		public SLUCH()
		{
			this._SANK = new EntitySet<SANK>(new Action<SANK>(this.attach_SANK), new Action<SANK>(this.detach_SANK));
			this._USL = new EntitySet<USL>(new Action<USL>(this.attach_USL), new Action<USL>(this.detach_USL));
			this._SprDEFGOSP = default(EntityRef<SprDEFGOSP>);
			this._DetProfilDb = default(EntityRef<DetProfilDb>);
			this._Dostav = default(EntityRef<Dostav>);
			this._M001_KSG = default(EntityRef<M001_KSG>);
			this._M001_KSG1 = default(EntityRef<M001_KSG>);
			this._M001_KSG2 = default(EntityRef<M001_KSG>);
			this._M001_KSG3 = default(EntityRef<M001_KSG>);
			this._F005 = default(EntityRef<F005>);
			this._Gospit = default(EntityRef<Gospit>);
			this._GrZdorovDb = default(EntityRef<GrZdorovDb>);
			this._DoctorBd = default(EntityRef<DoctorBd>);
			this._DoctorBd1 = default(EntityRef<DoctorBd>);
			this._F003 = default(EntityRef<F003>);
			this._F0031 = default(EntityRef<F003>);
			this._OsobSluchDb = default(EntityRef<OsobSluchDb>);
			this._PACIENT = default(EntityRef<PACIENT>);
			this._SCHET_OMS = default(EntityRef<SCHET_OMS>);
			this._SchoolStatusDb = default(EntityRef<SchoolStatusDb>);
			this._SprExtr = default(EntityRef<SprExtr>);
			this._SprKDOST = default(EntityRef<SprKDOST>);
			this._SprVOPL = default(EntityRef<SprVOPL>);
			this._TravmaTbl = default(EntityRef<TravmaTbl>);
			this._TypeSluchDb = default(EntityRef<TypeSluchDb>);
			this._Users = default(EntityRef<Users>);
			this._V002 = default(EntityRef<V002>);
			this._V004 = default(EntityRef<V004>);
			this._V006 = default(EntityRef<V006>);
			this._V008 = default(EntityRef<V008>);
			this._V009 = default(EntityRef<V009>);
			this._V010 = default(EntityRef<V010>);
			this._V012 = default(EntityRef<V012>);
			this._V015 = default(EntityRef<V015>);
			this._VeteranDb = default(EntityRef<VeteranDb>);
			this._SprVozr = default(EntityRef<SprVozr>);
			this._WorkStatDb = default(EntityRef<WorkStatDb>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCASE", DbType="Int")]
		public System.Nullable<int> IDCASE
		{
			get
			{
				return this._IDCASE;
			}
			set
			{
				if ((this._IDCASE != value))
				{
					this.OnIDCASEChanging(value);
					this.SendPropertyChanging();
					this._IDCASE = value;
					this.SendPropertyChanged("IDCASE");
					this.OnIDCASEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USL_OK", DbType="Int")]
		public System.Nullable<int> USL_OK
		{
			get
			{
				return this._USL_OK;
			}
			set
			{
				if ((this._USL_OK != value))
				{
					if (this._V006.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSL_OKChanging(value);
					this.SendPropertyChanging();
					this._USL_OK = value;
					this.SendPropertyChanged("USL_OK");
					this.OnUSL_OKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIDPOM", DbType="Int")]
		public System.Nullable<int> VIDPOM
		{
			get
			{
				return this._VIDPOM;
			}
			set
			{
				if ((this._VIDPOM != value))
				{
					if (this._V008.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVIDPOMChanging(value);
					this.SendPropertyChanging();
					this._VIDPOM = value;
					this.SendPropertyChanged("VIDPOM");
					this.OnVIDPOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPR_MO", DbType="VarChar(6)")]
		public string NPR_MO
		{
			get
			{
				return this._NPR_MO;
			}
			set
			{
				if ((this._NPR_MO != value))
				{
					if (this._F0031.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNPR_MOChanging(value);
					this.SendPropertyChanging();
					this._NPR_MO = value;
					this.SendPropertyChanged("NPR_MO");
					this.OnNPR_MOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXTR", DbType="Int")]
		public System.Nullable<int> EXTR
		{
			get
			{
				return this._EXTR;
			}
			set
			{
				if ((this._EXTR != value))
				{
					if (this._SprExtr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEXTRChanging(value);
					this.SendPropertyChanging();
					this._EXTR = value;
					this.SendPropertyChanged("EXTR");
					this.OnEXTRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPU", DbType="VarChar(6)")]
		public string LPU
		{
			get
			{
				return this._LPU;
			}
			set
			{
				if ((this._LPU != value))
				{
					if (this._F003.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLPUChanging(value);
					this.SendPropertyChanging();
					this._LPU = value;
					this.SendPropertyChanged("LPU");
					this.OnLPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPU_1", DbType="NVarChar(6)")]
		public string LPU_1
		{
			get
			{
				return this._LPU_1;
			}
			set
			{
				if ((this._LPU_1 != value))
				{
					this.OnLPU_1Changing(value);
					this.SendPropertyChanging();
					this._LPU_1 = value;
					this.SendPropertyChanged("LPU_1");
					this.OnLPU_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODR", DbType="NVarChar(20)")]
		public string PODR
		{
			get
			{
				return this._PODR;
			}
			set
			{
				if ((this._PODR != value))
				{
					this.OnPODRChanging(value);
					this.SendPropertyChanging();
					this._PODR = value;
					this.SendPropertyChanged("PODR");
					this.OnPODRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROFIL", DbType="Int")]
		public System.Nullable<int> PROFIL
		{
			get
			{
				return this._PROFIL;
			}
			set
			{
				if ((this._PROFIL != value))
				{
					if (this._V002.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPROFILChanging(value);
					this.SendPropertyChanging();
					this._PROFIL = value;
					this.SendPropertyChanged("PROFIL");
					this.OnPROFILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DET", DbType="TinyInt")]
		public System.Nullable<byte> DET
		{
			get
			{
				return this._DET;
			}
			set
			{
				if ((this._DET != value))
				{
					if (this._DetProfilDb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDETChanging(value);
					this.SendPropertyChanging();
					this._DET = value;
					this.SendPropertyChanged("DET");
					this.OnDETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NHISTORY", DbType="NVarChar(50)")]
		public string NHISTORY
		{
			get
			{
				return this._NHISTORY;
			}
			set
			{
				if ((this._NHISTORY != value))
				{
					this.OnNHISTORYChanging(value);
					this.SendPropertyChanging();
					this._NHISTORY = value;
					this.SendPropertyChanged("NHISTORY");
					this.OnNHISTORYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_1", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_1
		{
			get
			{
				return this._DATE_1;
			}
			set
			{
				if ((this._DATE_1 != value))
				{
					this.OnDATE_1Changing(value);
					this.SendPropertyChanging();
					this._DATE_1 = value;
					this.SendPropertyChanged("DATE_1");
					this.OnDATE_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_2", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_2
		{
			get
			{
				return this._DATE_2;
			}
			set
			{
				if ((this._DATE_2 != value))
				{
					this.OnDATE_2Changing(value);
					this.SendPropertyChanging();
					this._DATE_2 = value;
					this.SendPropertyChanged("DATE_2");
					this.OnDATE_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS0", DbType="NVarChar(10)")]
		public string DS0
		{
			get
			{
				return this._DS0;
			}
			set
			{
				if ((this._DS0 != value))
				{
					this.OnDS0Changing(value);
					this.SendPropertyChanging();
					this._DS0 = value;
					this.SendPropertyChanged("DS0");
					this.OnDS0Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS1", DbType="NVarChar(10)")]
		public string DS1
		{
			get
			{
				return this._DS1;
			}
			set
			{
				if ((this._DS1 != value))
				{
					this.OnDS1Changing(value);
					this.SendPropertyChanging();
					this._DS1 = value;
					this.SendPropertyChanged("DS1");
					this.OnDS1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS2", DbType="NVarChar(10)")]
		public string DS2
		{
			get
			{
				return this._DS2;
			}
			set
			{
				if ((this._DS2 != value))
				{
					this.OnDS2Changing(value);
					this.SendPropertyChanging();
					this._DS2 = value;
					this.SendPropertyChanged("DS2");
					this.OnDS2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE_MES1", DbType="NVarChar(16)")]
		public string CODE_MES1
		{
			get
			{
				return this._CODE_MES1;
			}
			set
			{
				if ((this._CODE_MES1 != value))
				{
					this.OnCODE_MES1Changing(value);
					this.SendPropertyChanging();
					this._CODE_MES1 = value;
					this.SendPropertyChanged("CODE_MES1");
					this.OnCODE_MES1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE_MES2", DbType="NVarChar(16)")]
		public string CODE_MES2
		{
			get
			{
				return this._CODE_MES2;
			}
			set
			{
				if ((this._CODE_MES2 != value))
				{
					this.OnCODE_MES2Changing(value);
					this.SendPropertyChanging();
					this._CODE_MES2 = value;
					this.SendPropertyChanged("CODE_MES2");
					this.OnCODE_MES2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLUCH_TYPE", DbType="Int")]
		public System.Nullable<int> SLUCH_TYPE
		{
			get
			{
				return this._SLUCH_TYPE;
			}
			set
			{
				if ((this._SLUCH_TYPE != value))
				{
					if (this._TypeSluchDb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSLUCH_TYPEChanging(value);
					this.SendPropertyChanging();
					this._SLUCH_TYPE = value;
					this.SendPropertyChanged("SLUCH_TYPE");
					this.OnSLUCH_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSLT", DbType="Int")]
		public System.Nullable<int> RSLT
		{
			get
			{
				return this._RSLT;
			}
			set
			{
				if ((this._RSLT != value))
				{
					if (this._V009.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRSLTChanging(value);
					this.SendPropertyChanging();
					this._RSLT = value;
					this.SendPropertyChanged("RSLT");
					this.OnRSLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISHOD", DbType="Int")]
		public System.Nullable<int> ISHOD
		{
			get
			{
				return this._ISHOD;
			}
			set
			{
				if ((this._ISHOD != value))
				{
					if (this._V012.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnISHODChanging(value);
					this.SendPropertyChanging();
					this._ISHOD = value;
					this.SendPropertyChanged("ISHOD");
					this.OnISHODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRVS", DbType="Int")]
		public System.Nullable<int> PRVS
		{
			get
			{
				return this._PRVS;
			}
			set
			{
				if ((this._PRVS != value))
				{
					if (this._V004.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRVSChanging(value);
					this.SendPropertyChanging();
					this._PRVS = value;
					this.SendPropertyChanged("PRVS");
					this.OnPRVSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDOKT", DbType="NVarChar(25)")]
		public string IDDOKT
		{
			get
			{
				return this._IDDOKT;
			}
			set
			{
				if ((this._IDDOKT != value))
				{
					this.OnIDDOKTChanging(value);
					this.SendPropertyChanging();
					this._IDDOKT = value;
					this.SendPropertyChanged("IDDOKT");
					this.OnIDDOKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS_SLUCH", DbType="NVarChar(20)")]
		public string OS_SLUCH
		{
			get
			{
				return this._OS_SLUCH;
			}
			set
			{
				if ((this._OS_SLUCH != value))
				{
					this.OnOS_SLUCHChanging(value);
					this.SendPropertyChanging();
					this._OS_SLUCH = value;
					this.SendPropertyChanged("OS_SLUCH");
					this.OnOS_SLUCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS_SLUCH_REGION", DbType="Int")]
		public System.Nullable<int> OS_SLUCH_REGION
		{
			get
			{
				return this._OS_SLUCH_REGION;
			}
			set
			{
				if ((this._OS_SLUCH_REGION != value))
				{
					if (this._OsobSluchDb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOS_SLUCH_REGIONChanging(value);
					this.SendPropertyChanging();
					this._OS_SLUCH_REGION = value;
					this.SendPropertyChanged("OS_SLUCH_REGION");
					this.OnOS_SLUCH_REGIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSP", DbType="Int")]
		public System.Nullable<int> IDSP
		{
			get
			{
				return this._IDSP;
			}
			set
			{
				if ((this._IDSP != value))
				{
					if (this._V010.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSPChanging(value);
					this.SendPropertyChanging();
					this._IDSP = value;
					this.SendPropertyChanged("IDSP");
					this.OnIDSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_COL", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> ED_COL
		{
			get
			{
				return this._ED_COL;
			}
			set
			{
				if ((this._ED_COL != value))
				{
					this.OnED_COLChanging(value);
					this.SendPropertyChanging();
					this._ED_COL = value;
					this.SendPropertyChanged("ED_COL");
					this.OnED_COLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> TARIF
		{
			get
			{
				return this._TARIF;
			}
			set
			{
				if ((this._TARIF != value))
				{
					this.OnTARIFChanging(value);
					this.SendPropertyChanging();
					this._TARIF = value;
					this.SendPropertyChanged("TARIF");
					this.OnTARIFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUMV", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUMV
		{
			get
			{
				return this._SUMV;
			}
			set
			{
				if ((this._SUMV != value))
				{
					this.OnSUMVChanging(value);
					this.SendPropertyChanging();
					this._SUMV = value;
					this.SendPropertyChanged("SUMV");
					this.OnSUMVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPLATA", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> OPLATA
		{
			get
			{
				return this._OPLATA;
			}
			set
			{
				if ((this._OPLATA != value))
				{
					if (this._F005.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOPLATAChanging(value);
					this.SendPropertyChanging();
					this._OPLATA = value;
					this.SendPropertyChanged("OPLATA");
					this.OnOPLATAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUMP", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUMP
		{
			get
			{
				return this._SUMP;
			}
			set
			{
				if ((this._SUMP != value))
				{
					this.OnSUMPChanging(value);
					this.SendPropertyChanging();
					this._SUMP = value;
					this.SendPropertyChanged("SUMP");
					this.OnSUMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANK_IT", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SANK_IT
		{
			get
			{
				return this._SANK_IT;
			}
			set
			{
				if ((this._SANK_IT != value))
				{
					this.OnSANK_ITChanging(value);
					this.SendPropertyChanging();
					this._SANK_IT = value;
					this.SendPropertyChanged("SANK_IT");
					this.OnSANK_ITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMENTSL", DbType="NVarChar(250)")]
		public string COMENTSL
		{
			get
			{
				return this._COMENTSL;
			}
			set
			{
				if ((this._COMENTSL != value))
				{
					this.OnCOMENTSLChanging(value);
					this.SendPropertyChanging();
					this._COMENTSL = value;
					this.SendPropertyChanged("COMENTSL");
					this.OnCOMENTSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHET_ID", DbType="Int")]
		public System.Nullable<int> SCHET_ID
		{
			get
			{
				return this._SCHET_ID;
			}
			set
			{
				if ((this._SCHET_ID != value))
				{
					this.OnSCHET_IDChanging(value);
					this.SendPropertyChanging();
					this._SCHET_ID = value;
					this.SendPropertyChanged("SCHET_ID");
					this.OnSCHET_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GR_ZDOROV", DbType="Int")]
		public System.Nullable<int> GR_ZDOROV
		{
			get
			{
				return this._GR_ZDOROV;
			}
			set
			{
				if ((this._GR_ZDOROV != value))
				{
					if (this._GrZdorovDb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGR_ZDOROVChanging(value);
					this.SendPropertyChanging();
					this._GR_ZDOROV = value;
					this.SendPropertyChanged("GR_ZDOROV");
					this.OnGR_ZDOROVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VETERAN", DbType="Int")]
		public System.Nullable<int> VETERAN
		{
			get
			{
				return this._VETERAN;
			}
			set
			{
				if ((this._VETERAN != value))
				{
					if (this._VeteranDb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVETERANChanging(value);
					this.SendPropertyChanging();
					this._VETERAN = value;
					this.SendPropertyChanged("VETERAN");
					this.OnVETERANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHOOL", DbType="Int")]
		public System.Nullable<int> SCHOOL
		{
			get
			{
				return this._SCHOOL;
			}
			set
			{
				if ((this._SCHOOL != value))
				{
					if (this._SchoolStatusDb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSCHOOLChanging(value);
					this.SendPropertyChanging();
					this._SCHOOL = value;
					this.SendPropertyChanged("SCHOOL");
					this.OnSCHOOLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WORK_STAT", DbType="Int")]
		public System.Nullable<int> WORK_STAT
		{
			get
			{
				return this._WORK_STAT;
			}
			set
			{
				if ((this._WORK_STAT != value))
				{
					if (this._WorkStatDb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWORK_STATChanging(value);
					this.SendPropertyChanging();
					this._WORK_STAT = value;
					this.SendPropertyChanged("WORK_STAT");
					this.OnWORK_STATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL")]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					if (this._PACIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TEMP", DbType="NVarChar(36)")]
		public string ID_TEMP
		{
			get
			{
				return this._ID_TEMP;
			}
			set
			{
				if ((this._ID_TEMP != value))
				{
					this.OnID_TEMPChanging(value);
					this.SendPropertyChanging();
					this._ID_TEMP = value;
					this.SendPropertyChanged("ID_TEMP");
					this.OnID_TEMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID_TEMP", DbType="NVarChar(36)")]
		public string PID_TEMP
		{
			get
			{
				return this._PID_TEMP;
			}
			set
			{
				if ((this._PID_TEMP != value))
				{
					this.OnPID_TEMPChanging(value);
					this.SendPropertyChanging();
					this._PID_TEMP = value;
					this.SendPropertyChanged("PID_TEMP");
					this.OnPID_TEMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKSG", DbType="NVarChar(20)")]
		public string IDKSG
		{
			get
			{
				return this._IDKSG;
			}
			set
			{
				if ((this._IDKSG != value))
				{
					this.OnIDKSGChanging(value);
					this.SendPropertyChanging();
					this._IDKSG = value;
					this.SendPropertyChanged("IDKSG");
					this.OnIDKSGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEK_COMENT", DbType="VarChar(250)")]
		public string MEK_COMENT
		{
			get
			{
				return this._MEK_COMENT;
			}
			set
			{
				if ((this._MEK_COMENT != value))
				{
					this.OnMEK_COMENTChanging(value);
					this.SendPropertyChanging();
					this._MEK_COMENT = value;
					this.SendPropertyChanged("MEK_COMENT");
					this.OnMEK_COMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEE_COMENT", DbType="VarChar(250)")]
		public string MEE_COMENT
		{
			get
			{
				return this._MEE_COMENT;
			}
			set
			{
				if ((this._MEE_COMENT != value))
				{
					this.OnMEE_COMENTChanging(value);
					this.SendPropertyChanging();
					this._MEE_COMENT = value;
					this.SendPropertyChanged("MEE_COMENT");
					this.OnMEE_COMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EKMP_COMENT", DbType="VarChar(250)")]
		public string EKMP_COMENT
		{
			get
			{
				return this._EKMP_COMENT;
			}
			set
			{
				if ((this._EKMP_COMENT != value))
				{
					this.OnEKMP_COMENTChanging(value);
					this.SendPropertyChanging();
					this._EKMP_COMENT = value;
					this.SendPropertyChanged("EKMP_COMENT");
					this.OnEKMP_COMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEE_TYPE", DbType="Int")]
		public System.Nullable<int> MEE_TYPE
		{
			get
			{
				return this._MEE_TYPE;
			}
			set
			{
				if ((this._MEE_TYPE != value))
				{
					this.OnMEE_TYPEChanging(value);
					this.SendPropertyChanging();
					this._MEE_TYPE = value;
					this.SendPropertyChanged("MEE_TYPE");
					this.OnMEE_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG_OPLATA", DbType="Int")]
		public System.Nullable<int> KSG_OPLATA
		{
			get
			{
				return this._KSG_OPLATA;
			}
			set
			{
				if ((this._KSG_OPLATA != value))
				{
					this.OnKSG_OPLATAChanging(value);
					this.SendPropertyChanging();
					this._KSG_OPLATA = value;
					this.SendPropertyChanged("KSG_OPLATA");
					this.OnKSG_OPLATAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KDAY", DbType="Int")]
		public System.Nullable<int> KDAY
		{
			get
			{
				return this._KDAY;
			}
			set
			{
				if ((this._KDAY != value))
				{
					this.OnKDAYChanging(value);
					this.SendPropertyChanging();
					this._KDAY = value;
					this.SendPropertyChanged("KDAY");
					this.OnKDAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REQUEST_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> REQUEST_DATE
		{
			get
			{
				return this._REQUEST_DATE;
			}
			set
			{
				if ((this._REQUEST_DATE != value))
				{
					this.OnREQUEST_DATEChanging(value);
					this.SendPropertyChanging();
					this._REQUEST_DATE = value;
					this.SendPropertyChanged("REQUEST_DATE");
					this.OnREQUEST_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="Int")]
		public System.Nullable<int> USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSPID", DbType="Int")]
		public System.Nullable<int> MSPID
		{
			get
			{
				return this._MSPID;
			}
			set
			{
				if ((this._MSPID != value))
				{
					if (this._V015.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMSPIDChanging(value);
					this.SendPropertyChanging();
					this._MSPID = value;
					this.SendPropertyChanged("MSPID");
					this.OnMSPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPUID", DbType="Int")]
		public System.Nullable<int> LPUID
		{
			get
			{
				return this._LPUID;
			}
			set
			{
				if ((this._LPUID != value))
				{
					this.OnLPUIDChanging(value);
					this.SendPropertyChanging();
					this._LPUID = value;
					this.SendPropertyChanged("LPUID");
					this.OnLPUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIFF_K", DbType="Decimal(5,4)")]
		public System.Nullable<decimal> DIFF_K
		{
			get
			{
				return this._DIFF_K;
			}
			set
			{
				if ((this._DIFF_K != value))
				{
					this.OnDIFF_KChanging(value);
					this.SendPropertyChanging();
					this._DIFF_K = value;
					this.SendPropertyChanged("DIFF_K");
					this.OnDIFF_KChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VID_HMP", DbType="NVarChar(12)")]
		public string VID_HMP
		{
			get
			{
				return this._VID_HMP;
			}
			set
			{
				if ((this._VID_HMP != value))
				{
					this.OnVID_HMPChanging(value);
					this.SendPropertyChanging();
					this._VID_HMP = value;
					this.SendPropertyChanged("VID_HMP");
					this.OnVID_HMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_METOD_HMP", DbType="Int")]
		public System.Nullable<int> METOD_HMP
		{
			get
			{
				return this._METOD_HMP;
			}
			set
			{
				if ((this._METOD_HMP != value))
				{
					this.OnMETOD_HMPChanging(value);
					this.SendPropertyChanging();
					this._METOD_HMP = value;
					this.SendPropertyChanged("METOD_HMP");
					this.OnMETOD_HMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSLG", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid IDSLG
		{
			get
			{
				return this._IDSLG;
			}
			set
			{
				if ((this._IDSLG != value))
				{
					this.OnIDSLGChanging(value);
					this.SendPropertyChanging();
					this._IDSLG = value;
					this.SendPropertyChanged("IDSLG");
					this.OnIDSLGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISIDSLG", DbType="Bit NOT NULL")]
		public bool ISIDSLG
		{
			get
			{
				return this._ISIDSLG;
			}
			set
			{
				if ((this._ISIDSLG != value))
				{
					this.OnISIDSLGChanging(value);
					this.SendPropertyChanging();
					this._ISIDSLG = value;
					this.SendPropertyChanged("ISIDSLG");
					this.OnISIDSLGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REMEK_COM", DbType="NVarChar(250)")]
		public string REMEK_COM
		{
			get
			{
				return this._REMEK_COM;
			}
			set
			{
				if ((this._REMEK_COM != value))
				{
					this.OnREMEK_COMChanging(value);
					this.SendPropertyChanging();
					this._REMEK_COM = value;
					this.SendPropertyChanged("REMEK_COM");
					this.OnREMEK_COMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEK_COUNT", DbType="Int")]
		public System.Nullable<int> MEK_COUNT
		{
			get
			{
				return this._MEK_COUNT;
			}
			set
			{
				if ((this._MEK_COUNT != value))
				{
					this.OnMEK_COUNTChanging(value);
					this.SendPropertyChanging();
					this._MEK_COUNT = value;
					this.SendPropertyChanged("MEK_COUNT");
					this.OnMEK_COUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEE_COUNT", DbType="Int")]
		public System.Nullable<int> MEE_COUNT
		{
			get
			{
				return this._MEE_COUNT;
			}
			set
			{
				if ((this._MEE_COUNT != value))
				{
					this.OnMEE_COUNTChanging(value);
					this.SendPropertyChanging();
					this._MEE_COUNT = value;
					this.SendPropertyChanged("MEE_COUNT");
					this.OnMEE_COUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EKMP_COUNT", DbType="Int")]
		public System.Nullable<int> EKMP_COUNT
		{
			get
			{
				return this._EKMP_COUNT;
			}
			set
			{
				if ((this._EKMP_COUNT != value))
				{
					this.OnEKMP_COUNTChanging(value);
					this.SendPropertyChanging();
					this._EKMP_COUNT = value;
					this.SendPropertyChanged("EKMP_COUNT");
					this.OnEKMP_COUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RMEK_COUNT", DbType="Int")]
		public System.Nullable<int> RMEK_COUNT
		{
			get
			{
				return this._RMEK_COUNT;
			}
			set
			{
				if ((this._RMEK_COUNT != value))
				{
					this.OnRMEK_COUNTChanging(value);
					this.SendPropertyChanging();
					this._RMEK_COUNT = value;
					this.SendPropertyChanged("RMEK_COUNT");
					this.OnRMEK_COUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RMEE_COUNT", DbType="Int")]
		public System.Nullable<int> RMEE_COUNT
		{
			get
			{
				return this._RMEE_COUNT;
			}
			set
			{
				if ((this._RMEE_COUNT != value))
				{
					this.OnRMEE_COUNTChanging(value);
					this.SendPropertyChanging();
					this._RMEE_COUNT = value;
					this.SendPropertyChanged("RMEE_COUNT");
					this.OnRMEE_COUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REKMP_COUNT", DbType="Int")]
		public System.Nullable<int> REKMP_COUNT
		{
			get
			{
				return this._REKMP_COUNT;
			}
			set
			{
				if ((this._REKMP_COUNT != value))
				{
					this.OnREKMP_COUNTChanging(value);
					this.SendPropertyChanging();
					this._REKMP_COUNT = value;
					this.SendPropertyChanged("REKMP_COUNT");
					this.OnREKMP_COUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GOSP", DbType="Int")]
		public System.Nullable<int> GOSP
		{
			get
			{
				return this._GOSP;
			}
			set
			{
				if ((this._GOSP != value))
				{
					if (this._Gospit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGOSPChanging(value);
					this.SendPropertyChanging();
					this._GOSP = value;
					this.SendPropertyChanged("GOSP");
					this.OnGOSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VR_DOST", DbType="Int")]
		public System.Nullable<int> VR_DOST
		{
			get
			{
				return this._VR_DOST;
			}
			set
			{
				if ((this._VR_DOST != value))
				{
					if (this._Dostav.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVR_DOSTChanging(value);
					this.SendPropertyChanging();
					this._VR_DOST = value;
					this.SendPropertyChanged("VR_DOST");
					this.OnVR_DOSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRAVMA", DbType="Int")]
		public System.Nullable<int> TRAVMA
		{
			get
			{
				return this._TRAVMA;
			}
			set
			{
				if ((this._TRAVMA != value))
				{
					if (this._TravmaTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTRAVMAChanging(value);
					this.SendPropertyChanging();
					this._TRAVMA = value;
					this.SendPropertyChanged("TRAVMA");
					this.OnTRAVMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NNAPR", DbType="NVarChar(50)")]
		public string NNAPR
		{
			get
			{
				return this._NNAPR;
			}
			set
			{
				if ((this._NNAPR != value))
				{
					this.OnNNAPRChanging(value);
					this.SendPropertyChanging();
					this._NNAPR = value;
					this.SendPropertyChanged("NNAPR");
					this.OnNNAPRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNAPR", DbType="DateTime")]
		public System.Nullable<System.DateTime> DNAPR
		{
			get
			{
				return this._DNAPR;
			}
			set
			{
				if ((this._DNAPR != value))
				{
					this.OnDNAPRChanging(value);
					this.SendPropertyChanging();
					this._DNAPR = value;
					this.SendPropertyChanged("DNAPR");
					this.OnDNAPRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KDOST", DbType="Int")]
		public System.Nullable<int> KDOST
		{
			get
			{
				return this._KDOST;
			}
			set
			{
				if ((this._KDOST != value))
				{
					if (this._SprKDOST.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKDOSTChanging(value);
					this.SendPropertyChanging();
					this._KDOST = value;
					this.SendPropertyChanged("KDOST");
					this.OnKDOSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDOST", DbType="NVarChar(50)")]
		public string NDOST
		{
			get
			{
				return this._NDOST;
			}
			set
			{
				if ((this._NDOST != value))
				{
					this.OnNDOSTChanging(value);
					this.SendPropertyChanging();
					this._NDOST = value;
					this.SendPropertyChanged("NDOST");
					this.OnNDOSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VOPL", DbType="Int")]
		public System.Nullable<int> VOPL
		{
			get
			{
				return this._VOPL;
			}
			set
			{
				if ((this._VOPL != value))
				{
					if (this._SprVOPL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVOPLChanging(value);
					this.SendPropertyChanging();
					this._VOPL = value;
					this.SendPropertyChanged("VOPL");
					this.OnVOPLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NNAR", DbType="NVarChar(50)")]
		public string NNAR
		{
			get
			{
				return this._NNAR;
			}
			set
			{
				if ((this._NNAR != value))
				{
					this.OnNNARChanging(value);
					this.SendPropertyChanging();
					this._NNAR = value;
					this.SendPropertyChanged("NNAR");
					this.OnNNARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSN", DbType="NVarChar(10)")]
		public string DSN
		{
			get
			{
				return this._DSN;
			}
			set
			{
				if ((this._DSN != value))
				{
					if (this._M001_KSG1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDSNChanging(value);
					this.SendPropertyChanging();
					this._DSN = value;
					this.SendPropertyChanged("DSN");
					this.OnDSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOSTP", DbType="Bit")]
		public System.Nullable<bool> DOSTP
		{
			get
			{
				return this._DOSTP;
			}
			set
			{
				if ((this._DOSTP != value))
				{
					this.OnDOSTPChanging(value);
					this.SendPropertyChanging();
					this._DOSTP = value;
					this.SendPropertyChanged("DOSTP");
					this.OnDOSTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSKZ", DbType="NVarChar(10)")]
		public string DSKZ
		{
			get
			{
				return this._DSKZ;
			}
			set
			{
				if ((this._DSKZ != value))
				{
					if (this._M001_KSG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDSKZChanging(value);
					this.SendPropertyChanging();
					this._DSKZ = value;
					this.SendPropertyChanged("DSKZ");
					this.OnDSKZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRS", DbType="NVarChar(150)")]
		public string PRS
		{
			get
			{
				return this._PRS;
			}
			set
			{
				if ((this._PRS != value))
				{
					this.OnPRSChanging(value);
					this.SendPropertyChanging();
					this._PRS = value;
					this.SendPropertyChanged("PRS");
					this.OnPRSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSS", DbType="NVarChar(10)")]
		public string DSS
		{
			get
			{
				return this._DSS;
			}
			set
			{
				if ((this._DSS != value))
				{
					if (this._M001_KSG3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDSSChanging(value);
					this.SendPropertyChanging();
					this._DSS = value;
					this.SendPropertyChanged("DSS");
					this.OnDSSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSPA", DbType="NVarChar(10)")]
		public string DSPA
		{
			get
			{
				return this._DSPA;
			}
			set
			{
				if ((this._DSPA != value))
				{
					if (this._M001_KSG2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDSPAChanging(value);
					this.SendPropertyChanging();
					this._DSPA = value;
					this.SendPropertyChanged("DSPA");
					this.OnDSPAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDOKTP", DbType="Int")]
		public System.Nullable<int> IDDOKTP
		{
			get
			{
				return this._IDDOKTP;
			}
			set
			{
				if ((this._IDDOKTP != value))
				{
					if (this._DoctorBd1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDOKTPChanging(value);
					this.SendPropertyChanging();
					this._IDDOKTP = value;
					this.SendPropertyChanged("IDDOKTP");
					this.OnIDDOKTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDOKTO", DbType="Int")]
		public System.Nullable<int> IDDOKTO
		{
			get
			{
				return this._IDDOKTO;
			}
			set
			{
				if ((this._IDDOKTO != value))
				{
					if (this._DoctorBd.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDOKTOChanging(value);
					this.SendPropertyChanging();
					this._IDDOKTO = value;
					this.SendPropertyChanged("IDDOKTO");
					this.OnIDDOKTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEFGOSP", DbType="Int")]
		public System.Nullable<int> DEFGOSP
		{
			get
			{
				return this._DEFGOSP;
			}
			set
			{
				if ((this._DEFGOSP != value))
				{
					if (this._SprDEFGOSP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDEFGOSPChanging(value);
					this.SendPropertyChanging();
					this._DEFGOSP = value;
					this.SendPropertyChanged("DEFGOSP");
					this.OnDEFGOSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHET_OMS_ID", DbType="Int")]
		public System.Nullable<int> SCHET_OMS_ID
		{
			get
			{
				return this._SCHET_OMS_ID;
			}
			set
			{
				if ((this._SCHET_OMS_ID != value))
				{
					if (this._SCHET_OMS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSCHET_OMS_IDChanging(value);
					this.SendPropertyChanging();
					this._SCHET_OMS_ID = value;
					this.SendPropertyChanged("SCHET_OMS_ID");
					this.OnSCHET_OMS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG_COM", DbType="NVarChar(1000)")]
		public string KSG_COM
		{
			get
			{
				return this._KSG_COM;
			}
			set
			{
				if ((this._KSG_COM != value))
				{
					this.OnKSG_COMChanging(value);
					this.SendPropertyChanging();
					this._KSG_COM = value;
					this.SendPropertyChanged("KSG_COM");
					this.OnKSG_COMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KDAY_COM", DbType="NVarChar(100)")]
		public string KDAY_COM
		{
			get
			{
				return this._KDAY_COM;
			}
			set
			{
				if ((this._KDAY_COM != value))
				{
					this.OnKDAY_COMChanging(value);
					this.SendPropertyChanging();
					this._KDAY_COM = value;
					this.SendPropertyChanged("KDAY_COM");
					this.OnKDAY_COMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIFF_COM", DbType="NVarChar(100)")]
		public string DIFF_COM
		{
			get
			{
				return this._DIFF_COM;
			}
			set
			{
				if ((this._DIFF_COM != value))
				{
					this.OnDIFF_COMChanging(value);
					this.SendPropertyChanging();
					this._DIFF_COM = value;
					this.SendPropertyChanged("DIFF_COM");
					this.OnDIFF_COMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSLT_D", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> RSLT_D
		{
			get
			{
				return this._RSLT_D;
			}
			set
			{
				if ((this._RSLT_D != value))
				{
					this.OnRSLT_DChanging(value);
					this.SendPropertyChanging();
					this._RSLT_D = value;
					this.SendPropertyChanged("RSLT_D");
					this.OnRSLT_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VOZR", DbType="NVarChar(7)")]
		public string VOZR
		{
			get
			{
				return this._VOZR;
			}
			set
			{
				if ((this._VOZR != value))
				{
					if (this._SprVozr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVOZRChanging(value);
					this.SendPropertyChanging();
					this._VOZR = value;
					this.SendPropertyChanged("VOZR");
					this.OnVOZRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TER_ID", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> TER_ID
		{
			get
			{
				return this._TER_ID;
			}
			set
			{
				if ((this._TER_ID != value))
				{
					this.OnTER_IDChanging(value);
					this.SendPropertyChanging();
					this._TER_ID = value;
					this.SendPropertyChanged("TER_ID");
					this.OnTER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOR_POM", DbType="Int")]
		public System.Nullable<int> FOR_POM
		{
			get
			{
				return this._FOR_POM;
			}
			set
			{
				if ((this._FOR_POM != value))
				{
					this.OnFOR_POMChanging(value);
					this.SendPropertyChanging();
					this._FOR_POM = value;
					this.SendPropertyChanged("FOR_POM");
					this.OnFOR_POMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSG_DKK", DbType="NVarChar(10)")]
		public string KSG_DKK
		{
			get
			{
				return this._KSG_DKK;
			}
			set
			{
				if ((this._KSG_DKK != value))
				{
					this.OnKSG_DKKChanging(value);
					this.SendPropertyChanging();
					this._KSG_DKK = value;
					this.SendPropertyChanged("KSG_DKK");
					this.OnKSG_DKKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROFIL_K", DbType="Int")]
		public System.Nullable<int> PROFIL_K
		{
			get
			{
				return this._PROFIL_K;
			}
			set
			{
				if ((this._PROFIL_K != value))
				{
					this.OnPROFIL_KChanging(value);
					this.SendPropertyChanging();
					this._PROFIL_K = value;
					this.SendPropertyChanged("PROFIL_K");
					this.OnPROFIL_KChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRVS21", DbType="Int")]
		public System.Nullable<int> PRVS21
		{
			get
			{
				return this._PRVS21;
			}
			set
			{
				if ((this._PRVS21 != value))
				{
					this.OnPRVS21Changing(value);
					this.SendPropertyChanging();
					this._PRVS21 = value;
					this.SendPropertyChanged("PRVS21");
					this.OnPRVS21Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SLUCH_SANK", Storage="_SANK", ThisKey="ID", OtherKey="SLID")]
		public EntitySet<SANK> SANK
		{
			get
			{
				return this._SANK;
			}
			set
			{
				this._SANK.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SLUCH_USL", Storage="_USL", ThisKey="ID", OtherKey="SLID")]
		public EntitySet<USL> USL
		{
			get
			{
				return this._USL;
			}
			set
			{
				this._USL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprDEFGOSP_SLUCH", Storage="_SprDEFGOSP", ThisKey="DEFGOSP", OtherKey="ID", IsForeignKey=true)]
		public SprDEFGOSP SprDEFGOSP
		{
			get
			{
				return this._SprDEFGOSP.Entity;
			}
			set
			{
				SprDEFGOSP previousValue = this._SprDEFGOSP.Entity;
				if (((previousValue != value) 
							|| (this._SprDEFGOSP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SprDEFGOSP.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._SprDEFGOSP.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._DEFGOSP = value.ID;
					}
					else
					{
						this._DEFGOSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("SprDEFGOSP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DetProfilDb_SLUCH", Storage="_DetProfilDb", ThisKey="DET", OtherKey="Id", IsForeignKey=true)]
		public DetProfilDb DetProfilDb
		{
			get
			{
				return this._DetProfilDb.Entity;
			}
			set
			{
				DetProfilDb previousValue = this._DetProfilDb.Entity;
				if (((previousValue != value) 
							|| (this._DetProfilDb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DetProfilDb.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._DetProfilDb.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._DET = value.Id;
					}
					else
					{
						this._DET = default(Nullable<byte>);
					}
					this.SendPropertyChanged("DetProfilDb");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dostav_SLUCH", Storage="_Dostav", ThisKey="VR_DOST", OtherKey="ID", IsForeignKey=true)]
		public Dostav Dostav
		{
			get
			{
				return this._Dostav.Entity;
			}
			set
			{
				Dostav previousValue = this._Dostav.Entity;
				if (((previousValue != value) 
							|| (this._Dostav.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dostav.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._Dostav.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._VR_DOST = value.ID;
					}
					else
					{
						this._VR_DOST = default(Nullable<int>);
					}
					this.SendPropertyChanged("Dostav");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M001_KSG_SLUCH", Storage="_M001_KSG", ThisKey="DSKZ", OtherKey="IDDS", IsForeignKey=true)]
		public M001_KSG M001_KSG
		{
			get
			{
				return this._M001_KSG.Entity;
			}
			set
			{
				M001_KSG previousValue = this._M001_KSG.Entity;
				if (((previousValue != value) 
							|| (this._M001_KSG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._M001_KSG.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._M001_KSG.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._DSKZ = value.IDDS;
					}
					else
					{
						this._DSKZ = default(string);
					}
					this.SendPropertyChanged("M001_KSG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M001_KSG_SLUCH1", Storage="_M001_KSG1", ThisKey="DSN", OtherKey="IDDS", IsForeignKey=true)]
		public M001_KSG M001_KSG1
		{
			get
			{
				return this._M001_KSG1.Entity;
			}
			set
			{
				M001_KSG previousValue = this._M001_KSG1.Entity;
				if (((previousValue != value) 
							|| (this._M001_KSG1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._M001_KSG1.Entity = null;
						previousValue.SLUCH1.Remove(this);
					}
					this._M001_KSG1.Entity = value;
					if ((value != null))
					{
						value.SLUCH1.Add(this);
						this._DSN = value.IDDS;
					}
					else
					{
						this._DSN = default(string);
					}
					this.SendPropertyChanged("M001_KSG1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M001_KSG_SLUCH2", Storage="_M001_KSG2", ThisKey="DSPA", OtherKey="IDDS", IsForeignKey=true)]
		public M001_KSG M001_KSG2
		{
			get
			{
				return this._M001_KSG2.Entity;
			}
			set
			{
				M001_KSG previousValue = this._M001_KSG2.Entity;
				if (((previousValue != value) 
							|| (this._M001_KSG2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._M001_KSG2.Entity = null;
						previousValue.SLUCH2.Remove(this);
					}
					this._M001_KSG2.Entity = value;
					if ((value != null))
					{
						value.SLUCH2.Add(this);
						this._DSPA = value.IDDS;
					}
					else
					{
						this._DSPA = default(string);
					}
					this.SendPropertyChanged("M001_KSG2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="M001_KSG_SLUCH3", Storage="_M001_KSG3", ThisKey="DSS", OtherKey="IDDS", IsForeignKey=true)]
		public M001_KSG M001_KSG3
		{
			get
			{
				return this._M001_KSG3.Entity;
			}
			set
			{
				M001_KSG previousValue = this._M001_KSG3.Entity;
				if (((previousValue != value) 
							|| (this._M001_KSG3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._M001_KSG3.Entity = null;
						previousValue.SLUCH3.Remove(this);
					}
					this._M001_KSG3.Entity = value;
					if ((value != null))
					{
						value.SLUCH3.Add(this);
						this._DSS = value.IDDS;
					}
					else
					{
						this._DSS = default(string);
					}
					this.SendPropertyChanged("M001_KSG3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F005_SLUCH", Storage="_F005", ThisKey="OPLATA", OtherKey="Id", IsForeignKey=true)]
		public F005 F005
		{
			get
			{
				return this._F005.Entity;
			}
			set
			{
				F005 previousValue = this._F005.Entity;
				if (((previousValue != value) 
							|| (this._F005.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F005.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._F005.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._OPLATA = value.Id;
					}
					else
					{
						this._OPLATA = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("F005");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gospit_SLUCH", Storage="_Gospit", ThisKey="GOSP", OtherKey="ID", IsForeignKey=true)]
		public Gospit Gospit
		{
			get
			{
				return this._Gospit.Entity;
			}
			set
			{
				Gospit previousValue = this._Gospit.Entity;
				if (((previousValue != value) 
							|| (this._Gospit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gospit.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._Gospit.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._GOSP = value.ID;
					}
					else
					{
						this._GOSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("Gospit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GrZdorovDb_SLUCH", Storage="_GrZdorovDb", ThisKey="GR_ZDOROV", OtherKey="Id", IsForeignKey=true)]
		public GrZdorovDb GrZdorovDb
		{
			get
			{
				return this._GrZdorovDb.Entity;
			}
			set
			{
				GrZdorovDb previousValue = this._GrZdorovDb.Entity;
				if (((previousValue != value) 
							|| (this._GrZdorovDb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GrZdorovDb.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._GrZdorovDb.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._GR_ZDOROV = value.Id;
					}
					else
					{
						this._GR_ZDOROV = default(Nullable<int>);
					}
					this.SendPropertyChanged("GrZdorovDb");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorBd_SLUCH", Storage="_DoctorBd", ThisKey="IDDOKTO", OtherKey="id", IsForeignKey=true)]
		public DoctorBd DoctorBd
		{
			get
			{
				return this._DoctorBd.Entity;
			}
			set
			{
				DoctorBd previousValue = this._DoctorBd.Entity;
				if (((previousValue != value) 
							|| (this._DoctorBd.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoctorBd.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._DoctorBd.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._IDDOKTO = value.id;
					}
					else
					{
						this._IDDOKTO = default(Nullable<int>);
					}
					this.SendPropertyChanged("DoctorBd");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorBd_SLUCH1", Storage="_DoctorBd1", ThisKey="IDDOKTP", OtherKey="id", IsForeignKey=true)]
		public DoctorBd DoctorBd1
		{
			get
			{
				return this._DoctorBd1.Entity;
			}
			set
			{
				DoctorBd previousValue = this._DoctorBd1.Entity;
				if (((previousValue != value) 
							|| (this._DoctorBd1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoctorBd1.Entity = null;
						previousValue.SLUCH1.Remove(this);
					}
					this._DoctorBd1.Entity = value;
					if ((value != null))
					{
						value.SLUCH1.Add(this);
						this._IDDOKTP = value.id;
					}
					else
					{
						this._IDDOKTP = default(Nullable<int>);
					}
					this.SendPropertyChanged("DoctorBd1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F003_SLUCH", Storage="_F003", ThisKey="LPU", OtherKey="mcod", IsForeignKey=true)]
		public F003 F003
		{
			get
			{
				return this._F003.Entity;
			}
			set
			{
				F003 previousValue = this._F003.Entity;
				if (((previousValue != value) 
							|| (this._F003.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F003.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._F003.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._LPU = value.mcod;
					}
					else
					{
						this._LPU = default(string);
					}
					this.SendPropertyChanged("F003");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="F003_SLUCH1", Storage="_F0031", ThisKey="NPR_MO", OtherKey="mcod", IsForeignKey=true)]
		public F003 F0031
		{
			get
			{
				return this._F0031.Entity;
			}
			set
			{
				F003 previousValue = this._F0031.Entity;
				if (((previousValue != value) 
							|| (this._F0031.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F0031.Entity = null;
						previousValue.SLUCH1.Remove(this);
					}
					this._F0031.Entity = value;
					if ((value != null))
					{
						value.SLUCH1.Add(this);
						this._NPR_MO = value.mcod;
					}
					else
					{
						this._NPR_MO = default(string);
					}
					this.SendPropertyChanged("F0031");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OsobSluchDb_SLUCH", Storage="_OsobSluchDb", ThisKey="OS_SLUCH_REGION", OtherKey="Id", IsForeignKey=true)]
		public OsobSluchDb OsobSluchDb
		{
			get
			{
				return this._OsobSluchDb.Entity;
			}
			set
			{
				OsobSluchDb previousValue = this._OsobSluchDb.Entity;
				if (((previousValue != value) 
							|| (this._OsobSluchDb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OsobSluchDb.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._OsobSluchDb.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._OS_SLUCH_REGION = value.Id;
					}
					else
					{
						this._OS_SLUCH_REGION = default(Nullable<int>);
					}
					this.SendPropertyChanged("OsobSluchDb");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENT_SLUCH", Storage="_PACIENT", ThisKey="PID", OtherKey="ID", IsForeignKey=true)]
		public PACIENT PACIENT
		{
			get
			{
				return this._PACIENT.Entity;
			}
			set
			{
				PACIENT previousValue = this._PACIENT.Entity;
				if (((previousValue != value) 
							|| (this._PACIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENT.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._PACIENT.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._PID = value.ID;
					}
					else
					{
						this._PID = default(int);
					}
					this.SendPropertyChanged("PACIENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHET_OMS_SLUCH", Storage="_SCHET_OMS", ThisKey="SCHET_OMS_ID", OtherKey="CODE", IsForeignKey=true)]
		public SCHET_OMS SCHET_OMS
		{
			get
			{
				return this._SCHET_OMS.Entity;
			}
			set
			{
				SCHET_OMS previousValue = this._SCHET_OMS.Entity;
				if (((previousValue != value) 
							|| (this._SCHET_OMS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCHET_OMS.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._SCHET_OMS.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._SCHET_OMS_ID = value.CODE;
					}
					else
					{
						this._SCHET_OMS_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SCHET_OMS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolStatusDb_SLUCH", Storage="_SchoolStatusDb", ThisKey="SCHOOL", OtherKey="Id", IsForeignKey=true)]
		public SchoolStatusDb SchoolStatusDb
		{
			get
			{
				return this._SchoolStatusDb.Entity;
			}
			set
			{
				SchoolStatusDb previousValue = this._SchoolStatusDb.Entity;
				if (((previousValue != value) 
							|| (this._SchoolStatusDb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolStatusDb.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._SchoolStatusDb.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._SCHOOL = value.Id;
					}
					else
					{
						this._SCHOOL = default(Nullable<int>);
					}
					this.SendPropertyChanged("SchoolStatusDb");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprExtr_SLUCH", Storage="_SprExtr", ThisKey="EXTR", OtherKey="Id", IsForeignKey=true)]
		public SprExtr SprExtr
		{
			get
			{
				return this._SprExtr.Entity;
			}
			set
			{
				SprExtr previousValue = this._SprExtr.Entity;
				if (((previousValue != value) 
							|| (this._SprExtr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SprExtr.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._SprExtr.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._EXTR = value.Id;
					}
					else
					{
						this._EXTR = default(Nullable<int>);
					}
					this.SendPropertyChanged("SprExtr");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprKDOST_SLUCH", Storage="_SprKDOST", ThisKey="KDOST", OtherKey="ID", IsForeignKey=true)]
		public SprKDOST SprKDOST
		{
			get
			{
				return this._SprKDOST.Entity;
			}
			set
			{
				SprKDOST previousValue = this._SprKDOST.Entity;
				if (((previousValue != value) 
							|| (this._SprKDOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SprKDOST.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._SprKDOST.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._KDOST = value.ID;
					}
					else
					{
						this._KDOST = default(Nullable<int>);
					}
					this.SendPropertyChanged("SprKDOST");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprVOPL_SLUCH", Storage="_SprVOPL", ThisKey="VOPL", OtherKey="ID", IsForeignKey=true)]
		public SprVOPL SprVOPL
		{
			get
			{
				return this._SprVOPL.Entity;
			}
			set
			{
				SprVOPL previousValue = this._SprVOPL.Entity;
				if (((previousValue != value) 
							|| (this._SprVOPL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SprVOPL.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._SprVOPL.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._VOPL = value.ID;
					}
					else
					{
						this._VOPL = default(Nullable<int>);
					}
					this.SendPropertyChanged("SprVOPL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TravmaTbl_SLUCH", Storage="_TravmaTbl", ThisKey="TRAVMA", OtherKey="ID", IsForeignKey=true)]
		public TravmaTbl TravmaTbl
		{
			get
			{
				return this._TravmaTbl.Entity;
			}
			set
			{
				TravmaTbl previousValue = this._TravmaTbl.Entity;
				if (((previousValue != value) 
							|| (this._TravmaTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TravmaTbl.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._TravmaTbl.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._TRAVMA = value.ID;
					}
					else
					{
						this._TRAVMA = default(Nullable<int>);
					}
					this.SendPropertyChanged("TravmaTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeSluchDb_SLUCH", Storage="_TypeSluchDb", ThisKey="SLUCH_TYPE", OtherKey="id", IsForeignKey=true)]
		public TypeSluchDb TypeSluchDb
		{
			get
			{
				return this._TypeSluchDb.Entity;
			}
			set
			{
				TypeSluchDb previousValue = this._TypeSluchDb.Entity;
				if (((previousValue != value) 
							|| (this._TypeSluchDb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeSluchDb.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._TypeSluchDb.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._SLUCH_TYPE = value.id;
					}
					else
					{
						this._SLUCH_TYPE = default(Nullable<int>);
					}
					this.SendPropertyChanged("TypeSluchDb");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_SLUCH", Storage="_Users", ThisKey="USERID", OtherKey="id", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._USERID = value.id;
					}
					else
					{
						this._USERID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V002_SLUCH", Storage="_V002", ThisKey="PROFIL", OtherKey="Id", IsForeignKey=true)]
		public V002 V002
		{
			get
			{
				return this._V002.Entity;
			}
			set
			{
				V002 previousValue = this._V002.Entity;
				if (((previousValue != value) 
							|| (this._V002.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V002.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._V002.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._PROFIL = value.Id;
					}
					else
					{
						this._PROFIL = default(Nullable<int>);
					}
					this.SendPropertyChanged("V002");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V004_SLUCH", Storage="_V004", ThisKey="PRVS", OtherKey="id", IsForeignKey=true)]
		public V004 V004
		{
			get
			{
				return this._V004.Entity;
			}
			set
			{
				V004 previousValue = this._V004.Entity;
				if (((previousValue != value) 
							|| (this._V004.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V004.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._V004.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._PRVS = value.id;
					}
					else
					{
						this._PRVS = default(Nullable<int>);
					}
					this.SendPropertyChanged("V004");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V006_SLUCH", Storage="_V006", ThisKey="USL_OK", OtherKey="id", IsForeignKey=true)]
		public V006 V006
		{
			get
			{
				return this._V006.Entity;
			}
			set
			{
				V006 previousValue = this._V006.Entity;
				if (((previousValue != value) 
							|| (this._V006.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V006.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._V006.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._USL_OK = value.id;
					}
					else
					{
						this._USL_OK = default(Nullable<int>);
					}
					this.SendPropertyChanged("V006");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V008_SLUCH", Storage="_V008", ThisKey="VIDPOM", OtherKey="Id", IsForeignKey=true)]
		public V008 V008
		{
			get
			{
				return this._V008.Entity;
			}
			set
			{
				V008 previousValue = this._V008.Entity;
				if (((previousValue != value) 
							|| (this._V008.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V008.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._V008.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._VIDPOM = value.Id;
					}
					else
					{
						this._VIDPOM = default(Nullable<int>);
					}
					this.SendPropertyChanged("V008");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V009_SLUCH", Storage="_V009", ThisKey="RSLT", OtherKey="IDRMP", IsForeignKey=true)]
		public V009 V009
		{
			get
			{
				return this._V009.Entity;
			}
			set
			{
				V009 previousValue = this._V009.Entity;
				if (((previousValue != value) 
							|| (this._V009.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V009.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._V009.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._RSLT = value.IDRMP;
					}
					else
					{
						this._RSLT = default(Nullable<int>);
					}
					this.SendPropertyChanged("V009");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V010_SLUCH", Storage="_V010", ThisKey="IDSP", OtherKey="Id", IsForeignKey=true)]
		public V010 V010
		{
			get
			{
				return this._V010.Entity;
			}
			set
			{
				V010 previousValue = this._V010.Entity;
				if (((previousValue != value) 
							|| (this._V010.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V010.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._V010.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._IDSP = value.Id;
					}
					else
					{
						this._IDSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("V010");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V012_SLUCH", Storage="_V012", ThisKey="ISHOD", OtherKey="id", IsForeignKey=true)]
		public V012 V012
		{
			get
			{
				return this._V012.Entity;
			}
			set
			{
				V012 previousValue = this._V012.Entity;
				if (((previousValue != value) 
							|| (this._V012.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V012.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._V012.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._ISHOD = value.id;
					}
					else
					{
						this._ISHOD = default(Nullable<int>);
					}
					this.SendPropertyChanged("V012");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V015_SLUCH", Storage="_V015", ThisKey="MSPID", OtherKey="ID", IsForeignKey=true)]
		public V015 V015
		{
			get
			{
				return this._V015.Entity;
			}
			set
			{
				V015 previousValue = this._V015.Entity;
				if (((previousValue != value) 
							|| (this._V015.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V015.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._V015.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._MSPID = value.ID;
					}
					else
					{
						this._MSPID = default(Nullable<int>);
					}
					this.SendPropertyChanged("V015");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeteranDb_SLUCH", Storage="_VeteranDb", ThisKey="VETERAN", OtherKey="Id", IsForeignKey=true)]
		public VeteranDb VeteranDb
		{
			get
			{
				return this._VeteranDb.Entity;
			}
			set
			{
				VeteranDb previousValue = this._VeteranDb.Entity;
				if (((previousValue != value) 
							|| (this._VeteranDb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VeteranDb.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._VeteranDb.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._VETERAN = value.Id;
					}
					else
					{
						this._VETERAN = default(Nullable<int>);
					}
					this.SendPropertyChanged("VeteranDb");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprVozr_SLUCH", Storage="_SprVozr", ThisKey="VOZR", OtherKey="ID", IsForeignKey=true)]
		public SprVozr SprVozr
		{
			get
			{
				return this._SprVozr.Entity;
			}
			set
			{
				SprVozr previousValue = this._SprVozr.Entity;
				if (((previousValue != value) 
							|| (this._SprVozr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SprVozr.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._SprVozr.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._VOZR = value.ID;
					}
					else
					{
						this._VOZR = default(string);
					}
					this.SendPropertyChanged("SprVozr");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkStatDb_SLUCH", Storage="_WorkStatDb", ThisKey="WORK_STAT", OtherKey="Id", IsForeignKey=true)]
		public WorkStatDb WorkStatDb
		{
			get
			{
				return this._WorkStatDb.Entity;
			}
			set
			{
				WorkStatDb previousValue = this._WorkStatDb.Entity;
				if (((previousValue != value) 
							|| (this._WorkStatDb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkStatDb.Entity = null;
						previousValue.SLUCH.Remove(this);
					}
					this._WorkStatDb.Entity = value;
					if ((value != null))
					{
						value.SLUCH.Add(this);
						this._WORK_STAT = value.Id;
					}
					else
					{
						this._WORK_STAT = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkStatDb");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANK(SANK entity)
		{
			this.SendPropertyChanging();
			entity.SLUCH = this;
		}
		
		private void detach_SANK(SANK entity)
		{
			this.SendPropertyChanging();
			entity.SLUCH = null;
		}
		
		private void attach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.SLUCH = this;
		}
		
		private void detach_USL(USL entity)
		{
			this.SendPropertyChanging();
			entity.SLUCH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USL")]
	public partial class USL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SLID_TEMP;
		
		private System.Nullable<int> _IDSERV;
		
		private string _LPU;
		
		private string _LPU_1;
		
		private string _PODR;
		
		private System.Nullable<int> _PROFIL;
		
		private System.Nullable<byte> _DET;
		
		private System.Nullable<System.DateTime> _DATE_IN;
		
		private System.Nullable<System.DateTime> _DATE_OUT;
		
		private string _DS;
		
		private string _CODE_USL;
		
		private System.Nullable<decimal> _KOL_USL;
		
		private System.Nullable<decimal> _TARIF;
		
		private System.Nullable<decimal> _SUMV_USL;
		
		private System.Nullable<int> _PRVS;
		
		private string _CODE_MD;
		
		private string _COMENTU;
		
		private System.Nullable<int> _SCHET_ID;
		
		private System.Nullable<bool> _USL_PRR;
		
		private System.Nullable<bool> _USL_OTK;
		
		private System.Nullable<int> _SLID;
		
		private System.Nullable<int> _MSPUID;
		
		private string _VID_VME;
		
		private System.Nullable<int> _CODE_MDLPU;
		
		private System.Nullable<int> _OSL;
		
		private System.Nullable<int> _ANEST;
		
		private System.Nullable<bool> _OTKL;
		
		private System.Nullable<bool> _IsImplemented;
		
		private string _IDKSG;
		
		private System.Nullable<int> _KDAY;
		
		private System.Nullable<decimal> _DIFF_K;
		
		private System.Nullable<decimal> _UPR_K;
		
		private System.Nullable<int> _KSGOPLATA;
		
		private System.Nullable<int> _DIFF_N;
		
		private System.Nullable<int> _PROFIL_K;
		
		private System.Nullable<int> _PRVS21;
		
		private EntitySet<USL_ASSIST> _USL_ASSIST;
		
		private EntityRef<SprANEST> _SprANEST;
		
		private EntityRef<DoctorBd> _DoctorBd;
		
		private EntityRef<DetProfilDb> _DetProfilDb;
		
		private EntityRef<SprKSGOPLATA> _SprKSGOPLATA;
		
		private EntityRef<SprOSL> _SprOSL;
		
		private EntityRef<YesNoTbl> _YesNoTbl;
		
		private EntityRef<SLUCH> _SLUCH;
		
		private EntityRef<V002> _V002;
		
		private EntityRef<V004> _V004;
		
		private EntityRef<V015> _V015;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSLID_TEMPChanging(string value);
    partial void OnSLID_TEMPChanged();
    partial void OnIDSERVChanging(System.Nullable<int> value);
    partial void OnIDSERVChanged();
    partial void OnLPUChanging(string value);
    partial void OnLPUChanged();
    partial void OnLPU_1Changing(string value);
    partial void OnLPU_1Changed();
    partial void OnPODRChanging(string value);
    partial void OnPODRChanged();
    partial void OnPROFILChanging(System.Nullable<int> value);
    partial void OnPROFILChanged();
    partial void OnDETChanging(System.Nullable<byte> value);
    partial void OnDETChanged();
    partial void OnDATE_INChanging(System.Nullable<System.DateTime> value);
    partial void OnDATE_INChanged();
    partial void OnDATE_OUTChanging(System.Nullable<System.DateTime> value);
    partial void OnDATE_OUTChanged();
    partial void OnDSChanging(string value);
    partial void OnDSChanged();
    partial void OnCODE_USLChanging(string value);
    partial void OnCODE_USLChanged();
    partial void OnKOL_USLChanging(System.Nullable<decimal> value);
    partial void OnKOL_USLChanged();
    partial void OnTARIFChanging(System.Nullable<decimal> value);
    partial void OnTARIFChanged();
    partial void OnSUMV_USLChanging(System.Nullable<decimal> value);
    partial void OnSUMV_USLChanged();
    partial void OnPRVSChanging(System.Nullable<int> value);
    partial void OnPRVSChanged();
    partial void OnCODE_MDChanging(string value);
    partial void OnCODE_MDChanged();
    partial void OnCOMENTUChanging(string value);
    partial void OnCOMENTUChanged();
    partial void OnSCHET_IDChanging(System.Nullable<int> value);
    partial void OnSCHET_IDChanged();
    partial void OnUSL_PRRChanging(System.Nullable<bool> value);
    partial void OnUSL_PRRChanged();
    partial void OnUSL_OTKChanging(System.Nullable<bool> value);
    partial void OnUSL_OTKChanged();
    partial void OnSLIDChanging(System.Nullable<int> value);
    partial void OnSLIDChanged();
    partial void OnMSPUIDChanging(System.Nullable<int> value);
    partial void OnMSPUIDChanged();
    partial void OnVID_VMEChanging(string value);
    partial void OnVID_VMEChanged();
    partial void OnCODE_MDLPUChanging(System.Nullable<int> value);
    partial void OnCODE_MDLPUChanged();
    partial void OnOSLChanging(System.Nullable<int> value);
    partial void OnOSLChanged();
    partial void OnANESTChanging(System.Nullable<int> value);
    partial void OnANESTChanged();
    partial void OnOTKLChanging(System.Nullable<bool> value);
    partial void OnOTKLChanged();
    partial void OnIsImplementedChanging(System.Nullable<bool> value);
    partial void OnIsImplementedChanged();
    partial void OnIDKSGChanging(string value);
    partial void OnIDKSGChanged();
    partial void OnKDAYChanging(System.Nullable<int> value);
    partial void OnKDAYChanged();
    partial void OnDIFF_KChanging(System.Nullable<decimal> value);
    partial void OnDIFF_KChanged();
    partial void OnUPR_KChanging(System.Nullable<decimal> value);
    partial void OnUPR_KChanged();
    partial void OnKSGOPLATAChanging(System.Nullable<int> value);
    partial void OnKSGOPLATAChanged();
    partial void OnDIFF_NChanging(System.Nullable<int> value);
    partial void OnDIFF_NChanged();
    partial void OnPROFIL_KChanging(System.Nullable<int> value);
    partial void OnPROFIL_KChanged();
    partial void OnPRVS21Changing(System.Nullable<int> value);
    partial void OnPRVS21Changed();
    #endregion
		
		public USL()
		{
			this._USL_ASSIST = new EntitySet<USL_ASSIST>(new Action<USL_ASSIST>(this.attach_USL_ASSIST), new Action<USL_ASSIST>(this.detach_USL_ASSIST));
			this._SprANEST = default(EntityRef<SprANEST>);
			this._DoctorBd = default(EntityRef<DoctorBd>);
			this._DetProfilDb = default(EntityRef<DetProfilDb>);
			this._SprKSGOPLATA = default(EntityRef<SprKSGOPLATA>);
			this._SprOSL = default(EntityRef<SprOSL>);
			this._YesNoTbl = default(EntityRef<YesNoTbl>);
			this._SLUCH = default(EntityRef<SLUCH>);
			this._V002 = default(EntityRef<V002>);
			this._V004 = default(EntityRef<V004>);
			this._V015 = default(EntityRef<V015>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLID_TEMP", DbType="NVarChar(36)")]
		public string SLID_TEMP
		{
			get
			{
				return this._SLID_TEMP;
			}
			set
			{
				if ((this._SLID_TEMP != value))
				{
					this.OnSLID_TEMPChanging(value);
					this.SendPropertyChanging();
					this._SLID_TEMP = value;
					this.SendPropertyChanged("SLID_TEMP");
					this.OnSLID_TEMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSERV", DbType="Int")]
		public System.Nullable<int> IDSERV
		{
			get
			{
				return this._IDSERV;
			}
			set
			{
				if ((this._IDSERV != value))
				{
					this.OnIDSERVChanging(value);
					this.SendPropertyChanging();
					this._IDSERV = value;
					this.SendPropertyChanged("IDSERV");
					this.OnIDSERVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPU", DbType="NVarChar(6)")]
		public string LPU
		{
			get
			{
				return this._LPU;
			}
			set
			{
				if ((this._LPU != value))
				{
					this.OnLPUChanging(value);
					this.SendPropertyChanging();
					this._LPU = value;
					this.SendPropertyChanged("LPU");
					this.OnLPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPU_1", DbType="NVarChar(6)")]
		public string LPU_1
		{
			get
			{
				return this._LPU_1;
			}
			set
			{
				if ((this._LPU_1 != value))
				{
					this.OnLPU_1Changing(value);
					this.SendPropertyChanging();
					this._LPU_1 = value;
					this.SendPropertyChanged("LPU_1");
					this.OnLPU_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODR", DbType="NVarChar(20)")]
		public string PODR
		{
			get
			{
				return this._PODR;
			}
			set
			{
				if ((this._PODR != value))
				{
					this.OnPODRChanging(value);
					this.SendPropertyChanging();
					this._PODR = value;
					this.SendPropertyChanged("PODR");
					this.OnPODRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROFIL", DbType="Int")]
		public System.Nullable<int> PROFIL
		{
			get
			{
				return this._PROFIL;
			}
			set
			{
				if ((this._PROFIL != value))
				{
					if (this._V002.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPROFILChanging(value);
					this.SendPropertyChanging();
					this._PROFIL = value;
					this.SendPropertyChanged("PROFIL");
					this.OnPROFILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DET", DbType="TinyInt")]
		public System.Nullable<byte> DET
		{
			get
			{
				return this._DET;
			}
			set
			{
				if ((this._DET != value))
				{
					if (this._DetProfilDb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDETChanging(value);
					this.SendPropertyChanging();
					this._DET = value;
					this.SendPropertyChanged("DET");
					this.OnDETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_IN", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_IN
		{
			get
			{
				return this._DATE_IN;
			}
			set
			{
				if ((this._DATE_IN != value))
				{
					this.OnDATE_INChanging(value);
					this.SendPropertyChanging();
					this._DATE_IN = value;
					this.SendPropertyChanged("DATE_IN");
					this.OnDATE_INChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_OUT", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE_OUT
		{
			get
			{
				return this._DATE_OUT;
			}
			set
			{
				if ((this._DATE_OUT != value))
				{
					this.OnDATE_OUTChanging(value);
					this.SendPropertyChanging();
					this._DATE_OUT = value;
					this.SendPropertyChanged("DATE_OUT");
					this.OnDATE_OUTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DS", DbType="NVarChar(10)")]
		public string DS
		{
			get
			{
				return this._DS;
			}
			set
			{
				if ((this._DS != value))
				{
					this.OnDSChanging(value);
					this.SendPropertyChanging();
					this._DS = value;
					this.SendPropertyChanged("DS");
					this.OnDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE_USL", DbType="NVarChar(20)")]
		public string CODE_USL
		{
			get
			{
				return this._CODE_USL;
			}
			set
			{
				if ((this._CODE_USL != value))
				{
					this.OnCODE_USLChanging(value);
					this.SendPropertyChanging();
					this._CODE_USL = value;
					this.SendPropertyChanged("CODE_USL");
					this.OnCODE_USLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KOL_USL", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> KOL_USL
		{
			get
			{
				return this._KOL_USL;
			}
			set
			{
				if ((this._KOL_USL != value))
				{
					this.OnKOL_USLChanging(value);
					this.SendPropertyChanging();
					this._KOL_USL = value;
					this.SendPropertyChanged("KOL_USL");
					this.OnKOL_USLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TARIF", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> TARIF
		{
			get
			{
				return this._TARIF;
			}
			set
			{
				if ((this._TARIF != value))
				{
					this.OnTARIFChanging(value);
					this.SendPropertyChanging();
					this._TARIF = value;
					this.SendPropertyChanged("TARIF");
					this.OnTARIFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUMV_USL", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> SUMV_USL
		{
			get
			{
				return this._SUMV_USL;
			}
			set
			{
				if ((this._SUMV_USL != value))
				{
					this.OnSUMV_USLChanging(value);
					this.SendPropertyChanging();
					this._SUMV_USL = value;
					this.SendPropertyChanged("SUMV_USL");
					this.OnSUMV_USLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRVS", DbType="Int")]
		public System.Nullable<int> PRVS
		{
			get
			{
				return this._PRVS;
			}
			set
			{
				if ((this._PRVS != value))
				{
					if (this._V004.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRVSChanging(value);
					this.SendPropertyChanging();
					this._PRVS = value;
					this.SendPropertyChanged("PRVS");
					this.OnPRVSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE_MD", DbType="NVarChar(25)")]
		public string CODE_MD
		{
			get
			{
				return this._CODE_MD;
			}
			set
			{
				if ((this._CODE_MD != value))
				{
					this.OnCODE_MDChanging(value);
					this.SendPropertyChanging();
					this._CODE_MD = value;
					this.SendPropertyChanged("CODE_MD");
					this.OnCODE_MDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMENTU", DbType="NVarChar(250)")]
		public string COMENTU
		{
			get
			{
				return this._COMENTU;
			}
			set
			{
				if ((this._COMENTU != value))
				{
					this.OnCOMENTUChanging(value);
					this.SendPropertyChanging();
					this._COMENTU = value;
					this.SendPropertyChanged("COMENTU");
					this.OnCOMENTUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHET_ID", DbType="Int")]
		public System.Nullable<int> SCHET_ID
		{
			get
			{
				return this._SCHET_ID;
			}
			set
			{
				if ((this._SCHET_ID != value))
				{
					this.OnSCHET_IDChanging(value);
					this.SendPropertyChanging();
					this._SCHET_ID = value;
					this.SendPropertyChanged("SCHET_ID");
					this.OnSCHET_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USL_PRR", DbType="Bit")]
		public System.Nullable<bool> USL_PRR
		{
			get
			{
				return this._USL_PRR;
			}
			set
			{
				if ((this._USL_PRR != value))
				{
					this.OnUSL_PRRChanging(value);
					this.SendPropertyChanging();
					this._USL_PRR = value;
					this.SendPropertyChanged("USL_PRR");
					this.OnUSL_PRRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USL_OTK", DbType="Bit")]
		public System.Nullable<bool> USL_OTK
		{
			get
			{
				return this._USL_OTK;
			}
			set
			{
				if ((this._USL_OTK != value))
				{
					this.OnUSL_OTKChanging(value);
					this.SendPropertyChanging();
					this._USL_OTK = value;
					this.SendPropertyChanged("USL_OTK");
					this.OnUSL_OTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLID", DbType="Int")]
		public System.Nullable<int> SLID
		{
			get
			{
				return this._SLID;
			}
			set
			{
				if ((this._SLID != value))
				{
					if (this._SLUCH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSLIDChanging(value);
					this.SendPropertyChanging();
					this._SLID = value;
					this.SendPropertyChanged("SLID");
					this.OnSLIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSPUID", DbType="Int")]
		public System.Nullable<int> MSPUID
		{
			get
			{
				return this._MSPUID;
			}
			set
			{
				if ((this._MSPUID != value))
				{
					if (this._V015.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMSPUIDChanging(value);
					this.SendPropertyChanging();
					this._MSPUID = value;
					this.SendPropertyChanged("MSPUID");
					this.OnMSPUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VID_VME", DbType="NVarChar(16)")]
		public string VID_VME
		{
			get
			{
				return this._VID_VME;
			}
			set
			{
				if ((this._VID_VME != value))
				{
					this.OnVID_VMEChanging(value);
					this.SendPropertyChanging();
					this._VID_VME = value;
					this.SendPropertyChanged("VID_VME");
					this.OnVID_VMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE_MDLPU", DbType="Int")]
		public System.Nullable<int> CODE_MDLPU
		{
			get
			{
				return this._CODE_MDLPU;
			}
			set
			{
				if ((this._CODE_MDLPU != value))
				{
					if (this._DoctorBd.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCODE_MDLPUChanging(value);
					this.SendPropertyChanging();
					this._CODE_MDLPU = value;
					this.SendPropertyChanged("CODE_MDLPU");
					this.OnCODE_MDLPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OSL", DbType="Int")]
		public System.Nullable<int> OSL
		{
			get
			{
				return this._OSL;
			}
			set
			{
				if ((this._OSL != value))
				{
					if (this._SprOSL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOSLChanging(value);
					this.SendPropertyChanging();
					this._OSL = value;
					this.SendPropertyChanged("OSL");
					this.OnOSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANEST", DbType="Int")]
		public System.Nullable<int> ANEST
		{
			get
			{
				return this._ANEST;
			}
			set
			{
				if ((this._ANEST != value))
				{
					if (this._SprANEST.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnANESTChanging(value);
					this.SendPropertyChanging();
					this._ANEST = value;
					this.SendPropertyChanged("ANEST");
					this.OnANESTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTKL", DbType="Bit")]
		public System.Nullable<bool> OTKL
		{
			get
			{
				return this._OTKL;
			}
			set
			{
				if ((this._OTKL != value))
				{
					if (this._YesNoTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOTKLChanging(value);
					this.SendPropertyChanging();
					this._OTKL = value;
					this.SendPropertyChanged("OTKL");
					this.OnOTKLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsImplemented", DbType="Bit")]
		public System.Nullable<bool> IsImplemented
		{
			get
			{
				return this._IsImplemented;
			}
			set
			{
				if ((this._IsImplemented != value))
				{
					this.OnIsImplementedChanging(value);
					this.SendPropertyChanging();
					this._IsImplemented = value;
					this.SendPropertyChanged("IsImplemented");
					this.OnIsImplementedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKSG", DbType="NVarChar(20)")]
		public string IDKSG
		{
			get
			{
				return this._IDKSG;
			}
			set
			{
				if ((this._IDKSG != value))
				{
					this.OnIDKSGChanging(value);
					this.SendPropertyChanging();
					this._IDKSG = value;
					this.SendPropertyChanged("IDKSG");
					this.OnIDKSGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KDAY", DbType="Int")]
		public System.Nullable<int> KDAY
		{
			get
			{
				return this._KDAY;
			}
			set
			{
				if ((this._KDAY != value))
				{
					this.OnKDAYChanging(value);
					this.SendPropertyChanging();
					this._KDAY = value;
					this.SendPropertyChanged("KDAY");
					this.OnKDAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIFF_K", DbType="Decimal(6,4)")]
		public System.Nullable<decimal> DIFF_K
		{
			get
			{
				return this._DIFF_K;
			}
			set
			{
				if ((this._DIFF_K != value))
				{
					this.OnDIFF_KChanging(value);
					this.SendPropertyChanging();
					this._DIFF_K = value;
					this.SendPropertyChanged("DIFF_K");
					this.OnDIFF_KChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPR_K", DbType="Decimal(6,4)")]
		public System.Nullable<decimal> UPR_K
		{
			get
			{
				return this._UPR_K;
			}
			set
			{
				if ((this._UPR_K != value))
				{
					this.OnUPR_KChanging(value);
					this.SendPropertyChanging();
					this._UPR_K = value;
					this.SendPropertyChanged("UPR_K");
					this.OnUPR_KChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KSGOPLATA", DbType="Int")]
		public System.Nullable<int> KSGOPLATA
		{
			get
			{
				return this._KSGOPLATA;
			}
			set
			{
				if ((this._KSGOPLATA != value))
				{
					if (this._SprKSGOPLATA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKSGOPLATAChanging(value);
					this.SendPropertyChanging();
					this._KSGOPLATA = value;
					this.SendPropertyChanged("KSGOPLATA");
					this.OnKSGOPLATAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIFF_N", DbType="Int")]
		public System.Nullable<int> DIFF_N
		{
			get
			{
				return this._DIFF_N;
			}
			set
			{
				if ((this._DIFF_N != value))
				{
					this.OnDIFF_NChanging(value);
					this.SendPropertyChanging();
					this._DIFF_N = value;
					this.SendPropertyChanged("DIFF_N");
					this.OnDIFF_NChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROFIL_K", DbType="Int")]
		public System.Nullable<int> PROFIL_K
		{
			get
			{
				return this._PROFIL_K;
			}
			set
			{
				if ((this._PROFIL_K != value))
				{
					this.OnPROFIL_KChanging(value);
					this.SendPropertyChanging();
					this._PROFIL_K = value;
					this.SendPropertyChanged("PROFIL_K");
					this.OnPROFIL_KChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRVS21", DbType="Int")]
		public System.Nullable<int> PRVS21
		{
			get
			{
				return this._PRVS21;
			}
			set
			{
				if ((this._PRVS21 != value))
				{
					this.OnPRVS21Changing(value);
					this.SendPropertyChanging();
					this._PRVS21 = value;
					this.SendPropertyChanged("PRVS21");
					this.OnPRVS21Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USL_USL_ASSIST", Storage="_USL_ASSIST", ThisKey="ID", OtherKey="UID")]
		public EntitySet<USL_ASSIST> USL_ASSIST
		{
			get
			{
				return this._USL_ASSIST;
			}
			set
			{
				this._USL_ASSIST.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprANEST_USL", Storage="_SprANEST", ThisKey="ANEST", OtherKey="ID", IsForeignKey=true)]
		public SprANEST SprANEST
		{
			get
			{
				return this._SprANEST.Entity;
			}
			set
			{
				SprANEST previousValue = this._SprANEST.Entity;
				if (((previousValue != value) 
							|| (this._SprANEST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SprANEST.Entity = null;
						previousValue.USL.Remove(this);
					}
					this._SprANEST.Entity = value;
					if ((value != null))
					{
						value.USL.Add(this);
						this._ANEST = value.ID;
					}
					else
					{
						this._ANEST = default(Nullable<int>);
					}
					this.SendPropertyChanged("SprANEST");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorBd_USL", Storage="_DoctorBd", ThisKey="CODE_MDLPU", OtherKey="id", IsForeignKey=true)]
		public DoctorBd DoctorBd
		{
			get
			{
				return this._DoctorBd.Entity;
			}
			set
			{
				DoctorBd previousValue = this._DoctorBd.Entity;
				if (((previousValue != value) 
							|| (this._DoctorBd.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoctorBd.Entity = null;
						previousValue.USL.Remove(this);
					}
					this._DoctorBd.Entity = value;
					if ((value != null))
					{
						value.USL.Add(this);
						this._CODE_MDLPU = value.id;
					}
					else
					{
						this._CODE_MDLPU = default(Nullable<int>);
					}
					this.SendPropertyChanged("DoctorBd");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DetProfilDb_USL", Storage="_DetProfilDb", ThisKey="DET", OtherKey="Id", IsForeignKey=true)]
		public DetProfilDb DetProfilDb
		{
			get
			{
				return this._DetProfilDb.Entity;
			}
			set
			{
				DetProfilDb previousValue = this._DetProfilDb.Entity;
				if (((previousValue != value) 
							|| (this._DetProfilDb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DetProfilDb.Entity = null;
						previousValue.USL.Remove(this);
					}
					this._DetProfilDb.Entity = value;
					if ((value != null))
					{
						value.USL.Add(this);
						this._DET = value.Id;
					}
					else
					{
						this._DET = default(Nullable<byte>);
					}
					this.SendPropertyChanged("DetProfilDb");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprKSGOPLATA_USL", Storage="_SprKSGOPLATA", ThisKey="KSGOPLATA", OtherKey="ID", IsForeignKey=true)]
		public SprKSGOPLATA SprKSGOPLATA
		{
			get
			{
				return this._SprKSGOPLATA.Entity;
			}
			set
			{
				SprKSGOPLATA previousValue = this._SprKSGOPLATA.Entity;
				if (((previousValue != value) 
							|| (this._SprKSGOPLATA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SprKSGOPLATA.Entity = null;
						previousValue.USL.Remove(this);
					}
					this._SprKSGOPLATA.Entity = value;
					if ((value != null))
					{
						value.USL.Add(this);
						this._KSGOPLATA = value.ID;
					}
					else
					{
						this._KSGOPLATA = default(Nullable<int>);
					}
					this.SendPropertyChanged("SprKSGOPLATA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SprOSL_USL", Storage="_SprOSL", ThisKey="OSL", OtherKey="ID", IsForeignKey=true)]
		public SprOSL SprOSL
		{
			get
			{
				return this._SprOSL.Entity;
			}
			set
			{
				SprOSL previousValue = this._SprOSL.Entity;
				if (((previousValue != value) 
							|| (this._SprOSL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SprOSL.Entity = null;
						previousValue.USL.Remove(this);
					}
					this._SprOSL.Entity = value;
					if ((value != null))
					{
						value.USL.Add(this);
						this._OSL = value.ID;
					}
					else
					{
						this._OSL = default(Nullable<int>);
					}
					this.SendPropertyChanged("SprOSL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="YesNoTbl_USL", Storage="_YesNoTbl", ThisKey="OTKL", OtherKey="ID", IsForeignKey=true)]
		public YesNoTbl YesNoTbl
		{
			get
			{
				return this._YesNoTbl.Entity;
			}
			set
			{
				YesNoTbl previousValue = this._YesNoTbl.Entity;
				if (((previousValue != value) 
							|| (this._YesNoTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._YesNoTbl.Entity = null;
						previousValue.USL.Remove(this);
					}
					this._YesNoTbl.Entity = value;
					if ((value != null))
					{
						value.USL.Add(this);
						this._OTKL = value.ID;
					}
					else
					{
						this._OTKL = default(Nullable<bool>);
					}
					this.SendPropertyChanged("YesNoTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SLUCH_USL", Storage="_SLUCH", ThisKey="SLID", OtherKey="ID", IsForeignKey=true)]
		public SLUCH SLUCH
		{
			get
			{
				return this._SLUCH.Entity;
			}
			set
			{
				SLUCH previousValue = this._SLUCH.Entity;
				if (((previousValue != value) 
							|| (this._SLUCH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SLUCH.Entity = null;
						previousValue.USL.Remove(this);
					}
					this._SLUCH.Entity = value;
					if ((value != null))
					{
						value.USL.Add(this);
						this._SLID = value.ID;
					}
					else
					{
						this._SLID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SLUCH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V002_USL", Storage="_V002", ThisKey="PROFIL", OtherKey="Id", IsForeignKey=true)]
		public V002 V002
		{
			get
			{
				return this._V002.Entity;
			}
			set
			{
				V002 previousValue = this._V002.Entity;
				if (((previousValue != value) 
							|| (this._V002.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V002.Entity = null;
						previousValue.USL.Remove(this);
					}
					this._V002.Entity = value;
					if ((value != null))
					{
						value.USL.Add(this);
						this._PROFIL = value.Id;
					}
					else
					{
						this._PROFIL = default(Nullable<int>);
					}
					this.SendPropertyChanged("V002");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V004_USL", Storage="_V004", ThisKey="PRVS", OtherKey="id", IsForeignKey=true)]
		public V004 V004
		{
			get
			{
				return this._V004.Entity;
			}
			set
			{
				V004 previousValue = this._V004.Entity;
				if (((previousValue != value) 
							|| (this._V004.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V004.Entity = null;
						previousValue.USL.Remove(this);
					}
					this._V004.Entity = value;
					if ((value != null))
					{
						value.USL.Add(this);
						this._PRVS = value.id;
					}
					else
					{
						this._PRVS = default(Nullable<int>);
					}
					this.SendPropertyChanged("V004");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="V015_USL", Storage="_V015", ThisKey="MSPUID", OtherKey="ID", IsForeignKey=true)]
		public V015 V015
		{
			get
			{
				return this._V015.Entity;
			}
			set
			{
				V015 previousValue = this._V015.Entity;
				if (((previousValue != value) 
							|| (this._V015.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._V015.Entity = null;
						previousValue.USL.Remove(this);
					}
					this._V015.Entity = value;
					if ((value != null))
					{
						value.USL.Add(this);
						this._MSPUID = value.ID;
					}
					else
					{
						this._MSPUID = default(Nullable<int>);
					}
					this.SendPropertyChanged("V015");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_USL_ASSIST(USL_ASSIST entity)
		{
			this.SendPropertyChanging();
			entity.USL = this;
		}
		
		private void detach_USL_ASSIST(USL_ASSIST entity)
		{
			this.SendPropertyChanging();
			entity.USL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V016")]
	public partial class V016
	{
		
		private string _IDDT;
		
		private string _DTNAME;
		
		private System.Nullable<int> _DTRULE;
		
		private System.Nullable<System.DateTime> _DATEBEG;
		
		private System.Nullable<System.DateTime> _DATEEND;
		
		public V016()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDT", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string IDDT
		{
			get
			{
				return this._IDDT;
			}
			set
			{
				if ((this._IDDT != value))
				{
					this._IDDT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTNAME", DbType="NVarChar(254)")]
		public string DTNAME
		{
			get
			{
				return this._DTNAME;
			}
			set
			{
				if ((this._DTNAME != value))
				{
					this._DTNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTRULE", DbType="Int")]
		public System.Nullable<int> DTRULE
		{
			get
			{
				return this._DTRULE;
			}
			set
			{
				if ((this._DTRULE != value))
				{
					this._DTRULE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEBEG", DbType="Date")]
		public System.Nullable<System.DateTime> DATEBEG
		{
			get
			{
				return this._DATEBEG;
			}
			set
			{
				if ((this._DATEBEG != value))
				{
					this._DATEBEG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEEND", DbType="Date")]
		public System.Nullable<System.DateTime> DATEEND
		{
			get
			{
				return this._DATEEND;
			}
			set
			{
				if ((this._DATEEND != value))
				{
					this._DATEEND = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
